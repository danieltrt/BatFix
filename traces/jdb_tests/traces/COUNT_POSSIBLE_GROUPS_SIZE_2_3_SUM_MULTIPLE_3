CompletedProcess(args=['javac', '-g', '--module-path', '/Users/anon/Documents/Dev.nosync/JavaControlFlow/Data/javafx-sdk-17.0.0.1/lib', '--add-modules=javafx.base', 'COUNT_POSSIBLE_GROUPS_SIZE_2_3_SUM_MULTIPLE_3.java'], returncode=0, stdout=b'', stderr=b'')

Statement: int c [ ] = new int [ ] { 0 , 0 , 0 };
Line: 9
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12

Statement: int res = 0 ;
Line: 11
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 0, 0, 0 }

Statement: for ( i = 0 ;
Line: 12
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 0, 0, 0 }
res = 0

Statement: i < n ;
Line: 13
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 0, 0, 0 }
res = 0
i = 0

Statement: c [ arr [ i ] % 3 ] ++ ;
Line: 15
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 0, 0, 0 }
res = 0
i = 0

Statement: i ++ )
Line: 14
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 0, 1, 0 }
res = 0
i = 0

Statement: i < n ;
Line: 13
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 0, 1, 0 }
res = 0
i = 1

Statement: c [ arr [ i ] % 3 ] ++ ;
Line: 15
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 0, 1, 0 }
res = 0
i = 1

Statement: i ++ )
Line: 14
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 1, 1, 0 }
res = 0
i = 1

Statement: i < n ;
Line: 13
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 1, 1, 0 }
res = 0
i = 2

Statement: c [ arr [ i ] % 3 ] ++ ;
Line: 15
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 1, 1, 0 }
res = 0
i = 2

Statement: i ++ )
Line: 14
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 2, 1, 0 }
res = 0
i = 2

Statement: i < n ;
Line: 13
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 2, 1, 0 }
res = 0
i = 3

Statement: c [ arr [ i ] % 3 ] ++ ;
Line: 15
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 2, 1, 0 }
res = 0
i = 3

Statement: i ++ )
Line: 14
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 3, 1, 0 }
res = 0
i = 3

Statement: i < n ;
Line: 13
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 3, 1, 0 }
res = 0
i = 4

Statement: c [ arr [ i ] % 3 ] ++ ;
Line: 15
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 3, 1, 0 }
res = 0
i = 4

Statement: i ++ )
Line: 14
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 4, 1, 0 }
res = 0
i = 4

Statement: i < n ;
Line: 13
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 4, 1, 0 }
res = 0
i = 5

Statement: c [ arr [ i ] % 3 ] ++ ;
Line: 15
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 4, 1, 0 }
res = 0
i = 5

Statement: i ++ )
Line: 14
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 4, 2, 0 }
res = 0
i = 5

Statement: i < n ;
Line: 13
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 4, 2, 0 }
res = 0
i = 6

Statement: c [ arr [ i ] % 3 ] ++ ;
Line: 15
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 4, 2, 0 }
res = 0
i = 6

Statement: i ++ )
Line: 14
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 2, 0 }
res = 0
i = 6

Statement: i < n ;
Line: 13
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 2, 0 }
res = 0
i = 7

Statement: c [ arr [ i ] % 3 ] ++ ;
Line: 15
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 2, 0 }
res = 0
i = 7

Statement: i ++ )
Line: 14
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 3, 0 }
res = 0
i = 7

Statement: i < n ;
Line: 13
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 3, 0 }
res = 0
i = 8

Statement: c [ arr [ i ] % 3 ] ++ ;
Line: 15
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 3, 0 }
res = 0
i = 8

Statement: i ++ )
Line: 14
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 3, 1 }
res = 0
i = 8

Statement: i < n ;
Line: 13
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 3, 1 }
res = 0
i = 9

Statement: c [ arr [ i ] % 3 ] ++ ;
Line: 15
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 3, 1 }
res = 0
i = 9

Statement: i ++ )
Line: 14
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 3, 2 }
res = 0
i = 9

Statement: i < n ;
Line: 13
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 3, 2 }
res = 0
i = 10

Statement: c [ arr [ i ] % 3 ] ++ ;
Line: 15
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 3, 2 }
res = 0
i = 10

Statement: i ++ )
Line: 14
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 4, 2 }
res = 0
i = 10

Statement: i < n ;
Line: 13
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 4, 2 }
res = 0
i = 11

Statement: c [ arr [ i ] % 3 ] ++ ;
Line: 15
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 4, 2 }
res = 0
i = 11

Statement: i ++ )
Line: 14
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 5, 2 }
res = 0
i = 11

Statement: i < n ;
Line: 13
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 5, 2 }
res = 0
i = 12

Statement: res += ( ( c [ 0 ] * ( c [ 0 ] - 1 ) ) >> 1 ) ;
Line: 16
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 5, 2 }
res = 0
i = 12

Statement: res += c [ 1 ] * c [ 2 ] ;
Line: 17
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 5, 2 }
res = 10
i = 12

Statement: res += ( c [ 0 ] * ( c [ 0 ] - 1 ) * ( c [ 0 ] - 2 ) ) / 6;
Line: 18
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 5, 2 }
res = 20
i = 12

Statement: res += ( c [ 1 ] * ( c [ 1 ] - 1 ) * ( c [ 1 ] - 2 ) ) / 6;
Line: 19
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 5, 2 }
res = 30
i = 12

Statement: res += ( ( c [ 2 ] * ( c [ 2 ] - 1 ) * ( c [ 2 ] - 2 ) ) / 6);
Line: 20
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 5, 2 }
res = 40
i = 12

Statement: res += c [ 0 ] * c [ 1 ] * c [ 2 ] ;
Line: 21
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 5, 2 }
res = 40
i = 12

Statement: return res ;
Line: 22
arr = { 1, 3, 6, 12, 18, 31, 36, 43, 47, 59, 64, 64, 69, 69, 94, 98, 98 }
n = 12
c = { 5, 5, 2 }
res = 90
i = 12
