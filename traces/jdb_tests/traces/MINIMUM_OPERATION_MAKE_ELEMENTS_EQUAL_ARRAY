CompletedProcess(args=['javac', '-g', '--module-path', '/Users/anon/Documents/Dev.nosync/JavaControlFlow/Data/javafx-sdk-17.0.0.1/lib', '--add-modules=javafx.base', 'MINIMUM_OPERATION_MAKE_ELEMENTS_EQUAL_ARRAY.java'], returncode=0, stdout=b'', stderr=b'')

Statement: HashMap < Integer, Integer > hash = new HashMap < Integer, Integer > ( );
Line: 33
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34

Statement: for ( int i = 0;
Line: 34
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {  }

Statement: i < n;
Line: 35
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {  }
i = 0

Statement: if ( hash . containsKey ( arr [ i ] ) )
Line: 37
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {  }
i = 0

Statement: hash . put ( arr [ i ], 1 );
Line: 40
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {  }
i = 0

Statement: i ++ )
Line: 36
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = { 2=1 }
i = 0

Statement: i < n;
Line: 35
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1}
i = 1

Statement: if ( hash . containsKey ( arr [ i ] ) )
Line: 37
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1}
i = 1

Statement: hash . put ( arr [ i ], 1 );
Line: 40
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1}
i = 1

Statement: i ++ )
Line: 36
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1}
i = 1

Statement: i < n;
Line: 35
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1}
i = 2

Statement: if ( hash . containsKey ( arr [ i ] ) )
Line: 37
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1}
i = 2

Statement: hash . put ( arr [ i ], 1 );
Line: 40
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1}
i = 2

Statement: i ++ )
Line: 36
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 6=1}
i = 2

Statement: i < n;
Line: 35
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 6=1}
i = 3

Statement: if ( hash . containsKey ( arr [ i ] ) )
Line: 37
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 6=1}
i = 3

Statement: hash . put ( arr [ i ], 1 );
Line: 40
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 6=1}
i = 3

Statement: i ++ )
Line: 36
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 6=1, 8=1}
i = 3

Statement: i < n;
Line: 35
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 6=1, 8=1}
i = 4

Statement: if ( hash . containsKey ( arr [ i ] ) )
Line: 37
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 6=1, 8=1}
i = 4

Statement: hash . put ( arr [ i ], 1 );
Line: 40
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 6=1, 8=1}
i = 4

Statement: i ++ )
Line: 36
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 2=1, 4=1, 6=1, 8=1}
i = 4

Statement: i < n;
Line: 35
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 2=1, 4=1, 6=1, 8=1}
i = 5

Statement: if ( hash . containsKey ( arr [ i ] ) )
Line: 37
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 2=1, 4=1, 6=1, 8=1}
i = 5

Statement: hash . put ( arr [ i ], 1 );
Line: 40
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 2=1, 4=1, 6=1, 8=1}
i = 5

Statement: i ++ )
Line: 36
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 2=1, 4=1, 6=1, 8=1, 25=1}
i = 5

Statement: i < n;
Line: 35
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 2=1, 4=1, 6=1, 8=1, 25=1}
i = 6

Statement: if ( hash . containsKey ( arr [ i ] ) )
Line: 37
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 2=1, 4=1, 6=1, 8=1, 25=1}
i = 6

Statement: hash . put ( arr [ i ], 1 );
Line: 40
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 2=1, 4=1, 6=1, 8=1, 25=1}
i = 6

Statement: i ++ )
Line: 36
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 2=1, 4=1, 6=1, 8=1, 25=1, 29=1}
i = 6

Statement: i < n;
Line: 35
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 2=1, 4=1, 6=1, 8=1, 25=1, 29=1}
i = 7

Statement: if ( hash . containsKey ( arr [ i ] ) )
Line: 37
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 2=1, 4=1, 6=1, 8=1, 25=1, 29=1}
i = 7

Statement: hash . put ( arr [ i ], 1 );
Line: 40
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 2=1, 4=1, 6=1, 8=1, 25=1, 29=1}
i = 7

Statement: i ++ )
Line: 36
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=1, 2=1, 4=1, 6=1, 8=1, 25=1, 29=1}
i = 7

Statement: i < n;
Line: 35
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=1, 2=1, 4=1, 6=1, 8=1, 25=1, 29=1}
i = 8

Statement: if ( hash . containsKey ( arr [ i ] ) )
Line: 37
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=1, 2=1, 4=1, 6=1, 8=1, 25=1, 29=1}
i = 8

Statement: hash . put ( arr [ i ], hash . get ( arr [ i ] ) + 1 );
Line: 38
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=1, 2=1, 4=1, 6=1, 8=1, 25=1, 29=1}
i = 8

Statement: i ++ )
Line: 36
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=2, 2=1, 4=1, 6=1, 8=1, 25=1, 29=1}
i = 8

Statement: i < n;
Line: 35
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=2, 2=1, 4=1, 6=1, 8=1, 25=1, 29=1}
i = 9

Statement: if ( hash . containsKey ( arr [ i ] ) )
Line: 37
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=2, 2=1, 4=1, 6=1, 8=1, 25=1, 29=1}
i = 9

Statement: hash . put ( arr [ i ], hash . get ( arr [ i ] ) + 1 );
Line: 38
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=2, 2=1, 4=1, 6=1, 8=1, 25=1, 29=1}
i = 9

Statement: i ++ )
Line: 36
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=3, 2=1, 4=1, 6=1, 8=1, 25=1, 29=1}
i = 9

Statement: i < n;
Line: 35
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=3, 2=1, 4=1, 6=1, 8=1, 25=1, 29=1}
i = 10

Statement: if ( hash . containsKey ( arr [ i ] ) )
Line: 37
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=3, 2=1, 4=1, 6=1, 8=1, 25=1, 29=1}
i = 10

Statement: hash . put ( arr [ i ], 1 );
Line: 40
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=3, 2=1, 4=1, 6=1, 8=1, 25=1, 29=1}
i = 10

Statement: i ++ )
Line: 36
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=3, 2=1, 4=1, 6=1, 38=1, 8=1, 25=1, 29=1}
i = 10

Statement: i < n;
Line: 35
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=3, 2=1, 4=1, 6=1, 38=1, 8=1, 25=1, 29=1}
i = 11

Statement: if ( hash . containsKey ( arr [ i ] ) )
Line: 37
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=3, 2=1, 4=1, 6=1, 38=1, 8=1, 25=1, 29=1}
i = 11

Statement: hash . put ( arr [ i ], 1 );
Line: 40
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=3, 2=1, 4=1, 6=1, 38=1, 8=1, 25=1, 29=1}
i = 11

Statement: i ++ )
Line: 36
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=3, 2=1, 4=1, 6=1, 38=1, 8=1, 25=1, 42=1, 29=1}
i = 11

Statement: i < n;
Line: 35
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=3, 2=1, 4=1, 6=1, 38=1, 8=1, 25=1, 42=1, 29=1}
i = 12

Statement: if ( hash . containsKey ( arr [ i ] ) )
Line: 37
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=3, 2=1, 4=1, 6=1, 38=1, 8=1, 25=1, 42=1, 29=1}
i = 12

Statement: hash . put ( arr [ i ], 1 );
Line: 40
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=3, 2=1, 4=1, 6=1, 38=1, 8=1, 25=1, 42=1, 29=1}
i = 12

Statement: i ++ )
Line: 36
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=3, 2=1, 4=1, 6=1, 38=1, 8=1, 25=1, 42=1, 43=1, 29=1}
i = 12

Statement: i < n;
Line: 35
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=3, 2=1, 4=1, 6=1, 38=1, 8=1, 25=1, 42=1, 43=1, 29=1}
i = 13

Statement: if ( hash . containsKey ( arr [ i ] ) )
Line: 37
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=3, 2=1, 4=1, 6=1, 38=1, 8=1, 25=1, 42=1, 43=1, 29=1}
i = 13

Statement: hash . put ( arr [ i ], 1 );
Line: 40
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=3, 2=1, 4=1, 6=1, 38=1, 8=1, 25=1, 42=1, 43=1, 29=1}
i = 13

Statement: i ++ )
Line: 36
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=3, 49=1, 2=1, 4=1, 6=1, 38=1, 8=1, 25=1, 42=1, 43=1, 29=1}
i = 13

Statement: i < n;
Line: 35
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=3, 49=1, 2=1, 4=1, 6=1, 38=1, 8=1, 25=1, 42=1, 43=1, 29=1}
i = 14

Statement: if ( hash . containsKey ( arr [ i ] ) )
Line: 37
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=3, 49=1, 2=1, 4=1, 6=1, 38=1, 8=1, 25=1, 42=1, 43=1, 29=1}
i = 14

Statement: hash . put ( arr [ i ], 1 );
Line: 40
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {17=1, 33=3, 49=1, 2=1, 4=1, 6=1, 38=1, 8=1, 25=1, 42=1, 43=1, 29=1}
i = 14

Statement: i ++ )
Line: 36
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {33=3, 2=1, 4=1, 6=1, 38=1, 8=1, 42=1, 43=1, 17=1, 49=1, 55=1, 25=1, 29=1}
i = 14

Statement: i < n;
Line: 35
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {33=3, 2=1, 4=1, 6=1, 38=1, 8=1, 42=1, 43=1, 17=1, 49=1, 55=1, 25=1, 29=1}
i = 15

Statement: if ( hash . containsKey ( arr [ i ] ) )
Line: 37
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {33=3, 2=1, 4=1, 6=1, 38=1, 8=1, 42=1, 43=1, 17=1, 49=1, 55=1, 25=1, 29=1}
i = 15

Statement: hash . put ( arr [ i ], 1 );
Line: 40
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {33=3, 2=1, 4=1, 6=1, 38=1, 8=1, 42=1, 43=1, 17=1, 49=1, 55=1, 25=1, 29=1}
i = 15

Statement: i ++ )
Line: 36
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {33=3, 2=1, 4=1, 6=1, 38=1, 8=1, 42=1, 43=1, 17=1, 49=1, 55=1, 25=1, 60=1, 29=1}
i = 15

Statement: i < n;
Line: 35
arr =                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      max_count = 1
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 75

Statement: for ( int i : s )
Line: 43
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 1
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: if ( max_count < hash . get ( i ) )
Line: 44
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 1
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 77

Statement: for ( int i : s )
Line: 43
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 1
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: if ( max_count < hash . get ( i ) )
Line: 44
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 1
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 79

Statement: max_count = hash . get ( i );
Line: 45
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 1
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 79

Statement: if ( max_count < hash . get ( i ) )
Line: 44
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 2
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: for ( int i : s )
Line: 43
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 2
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: if ( max_count < hash . get ( i ) )
Line: 44
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 2
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 17

Statement: for ( int i : s )
Line: 43
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 2
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: if ( max_count < hash . get ( i ) )
Line: 44
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 2
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 85

Statement: for ( int i : s )
Line: 43
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 2
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: if ( max_count < hash . get ( i ) )
Line: 44
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 2
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 87

Statement: for ( int i : s )
Line: 43
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 2
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: if ( max_count < hash . get ( i ) )
Line: 44
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 2
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 25

Statement: for ( int i : s )
Line: 43
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 2
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: if ( max_count < hash . get ( i ) )
Line: 44
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 2
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 90

Statement: max_count = hash . get ( i );
Line: 45
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 2
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 90

Statement: if ( max_count < hash . get ( i ) )
Line: 44
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: for ( int i : s )
Line: 43
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: if ( max_count < hash . get ( i ) )
Line: 44
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 29

Statement: for ( int i : s )
Line: 43
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: if ( max_count < hash . get ( i ) )
Line: 44
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 94

Statement: for ( int i : s )
Line: 43
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: if ( max_count < hash . get ( i ) )
Line: 44
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 33

Statement: for ( int i : s )
Line: 43
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: if ( max_count < hash . get ( i ) )
Line: 44
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 98

Statement: for ( int i : s )
Line: 43
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: if ( max_count < hash . get ( i ) )
Line: 44
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 38

Statement: for ( int i : s )
Line: 43
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: if ( max_count < hash . get ( i ) )
Line: 44
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 42

Statement: for ( int i : s )
Line: 43
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: if ( max_count < hash . get ( i ) )
Line: 44
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 43

Statement: for ( int i : s )
Line: 43
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: if ( max_count < hash . get ( i ) )
Line: 44
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 49

Statement: for ( int i : s )
Line: 43
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: if ( max_count < hash . get ( i ) )
Line: 44
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 55

Statement: for ( int i : s )
Line: 43
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: if ( max_count < hash . get ( i ) )
Line: 44
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 60

Statement: for ( int i : s )
Line: 43
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: if ( max_count < hash . get ( i ) )
Line: 44
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 62

Statement: for ( int i : s )
Line: 43
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: if ( max_count < hash . get ( i ) )
Line: 44
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }
i = 63

Statement: for ( int i : s )
Line: 43
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }

Statement: return ( n - max_count );
Line: 46
arr = { 2, 4, 6, 8, 17, 25, 29, 33, 33, 33, 38, 42, 43, 49, 55, 60, 62, 63, 68, 69, 70, 75, 77, 79, 79, 85, 87, 87, 90, 90, 90, 90, 94, 98 }
n = 34
hash = {2=1, 4=1, 68=1, 69=1, 6=1, 70=1, 8=1, 75=1, 77=1, 79=2, 17=1, 85=1, 87=2, 25=1, 90=4, 29=1, 94=1, 33=3, 98=1, 38=1, 42=1, 43=1, 49=1, 55=1, 60=1, 62=1, 63=1}
max_count = 4
s = {     this$0: instance of java.util.HashMap(id=427) }
