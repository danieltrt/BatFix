CompletedProcess(args=['javac', '-g', '--module-path', '/Users/anon/Documents/Dev.nosync/JavaControlFlow/Data/javafx-sdk-17.0.0.1/lib', '--add-modules=javafx.base', 'FIND_A_TRIPLET_THAT_SUM_TO_A_GIVEN_VALUE_2.java'], returncode=0, stdout=b'', stderr=b'')

Statement: for ( int i = 0 ;
Line: 14
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24

Statement: i < arr_size - 2 ;
Line: 15
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0

Statement: HashSet < Integer > s = new HashSet < Integer > ( ) ;
Line: 17
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0

Statement: int curr_sum = sum - A [ i ] ;
Line: 18
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }

Statement: for ( int j = i + 1 ;
Line: 19
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23

Statement: j < arr_size ;
Line: 20
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 1

Statement: if ( s . contains ( curr_sum - A [ j ] ) && curr_sum - A [ j ] != ( int ) s . toArray ( ) [ s . size ( ) - 1 ] ) {
Line: 22
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 1

Statement: s . add ( A [ j ] ) ;
Line: 26
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 1

Statement: j ++ ) {
Line: 21
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 1

Statement: j < arr_size ;
Line: 20
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 2

Statement: if ( s . contains ( curr_sum - A [ j ] ) && curr_sum - A [ j ] != ( int ) s . toArray ( ) [ s . size ( ) - 1 ] ) {
Line: 22
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 2

Statement: s . add ( A [ j ] ) ;
Line: 26
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 2

Statement: j ++ ) {
Line: 21
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 2

Statement: j < arr_size ;
Line: 20
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 3

Statement: if ( s . contains ( curr_sum - A [ j ] ) && curr_sum - A [ j ] != ( int ) s . toArray ( ) [ s . size ( ) - 1 ] ) {
Line: 22
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 3

Statement: s . add ( A [ j ] ) ;
Line: 26
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 3

Statement: j ++ ) {
Line: 21
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 3

Statement: j < arr_size ;
Line: 20
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 4

Statement: if ( s . contains ( curr_sum - A [ j ] ) && curr_sum - A [ j ] != ( int ) s . toArray ( ) [ s . size ( ) - 1 ] ) {
Line: 22
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 4

Statement: s . add ( A [ j ] ) ;
Line: 26
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 4

Statement: j ++ ) {
Line: 21
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 4

Statement: j < arr_size ;
Line: 20
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 5

Statement: if ( s . contains ( curr_sum - A [ j ] ) && curr_sum - A [ j ] != ( int ) s . toArray ( ) [ s . size ( ) - 1 ] ) {
Line: 22
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 5

Statement: s . add ( A [ j ] ) ;
Line: 26
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 5

Statement: j ++ ) {
Line: 21
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 5

Statement: j < arr_size ;
Line: 20
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 6

Statement: if ( s . contains ( curr_sum - A [ j ] ) && curr_sum - A [ j ] != ( int ) s . toArray ( ) [ s . size ( ) - 1 ] ) {
Line: 22
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 6

Statement: s . add ( A [ j ] ) ;
Line: 26
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 6

Statement: j ++ ) {
Line: 21
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 6

Statement: j < arr_size ;
Line: 20
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 7

Statement: if ( s . contains ( curr_sum - A [ j ] ) && curr_sum - A [ j ] != ( int ) s . toArray ( ) [ s . size ( ) - 1 ] ) {
Line: 22
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 7

Statement: s . add ( A [ j ] ) ;
Line: 26
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 7

Statement: j ++ ) {
Line: 21
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 7

Statement: j < arr_size ;
Line: 20
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 8

Statement: if ( s . contains ( curr_sum - A [ j ] ) && curr_sum - A [ j ] != ( int ) s . toArray ( ) [ s . size ( ) - 1 ] ) {
Line: 22
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 8

Statement: System . out . printf ( "Triplet is %d, %d, %d" , A [ i ] , A [ j ] , curr_sum - A [ j ] ) ;
Line: 23
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 8

Statement: return true ;
Line: 24
A = { 1, 6, 8, 8, 9, 11, 13, 13, 15, 17, 21, 24, 38, 38, 42, 43, 46, 46, 47, 54, 55, 56, 57, 58, 60, 60, 60, 62, 63, 63, 65, 66, 67, 67, 69, 81, 84, 84, 85, 86, 95, 99 }
arr_size = 27
sum = 24
i = 0
s = {     serialVersionUID: -5024744406713321676     map: instance of java.util.HashMap(id=429)     PRESENT: instance of java.lang.Object(id=430) }
curr_sum = 23
j = 8
