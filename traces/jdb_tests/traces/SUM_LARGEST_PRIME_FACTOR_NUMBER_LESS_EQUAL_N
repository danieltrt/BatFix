CompletedProcess(args=['javac', '-g', '--module-path', '/Users/anon/Documents/Dev.nosync/JavaControlFlow/Data/javafx-sdk-17.0.0.1/lib', '--add-modules=javafx.base', 'SUM_LARGEST_PRIME_FACTOR_NUMBER_LESS_EQUAL_N.java'], returncode=0, stdout=b'', stderr=b'')

Statement: int prime [ ] = new int [ n + 1 ], sum = 0;
Line: 13
n = 6

Statement: Arrays . fill ( prime, 0 );
Line: 14
n = 6
prime = { 0, 0, 0, 0, 0, 0, 0 }
sum = 0

Statement: int max = n / 2;
Line: 15
n = 6
prime = { 0, 0, 0, 0, 0, 0, 0 }
sum = 0

Statement: for ( int p = 2;
Line: 16
n = 6
prime = { 0, 0, 0, 0, 0, 0, 0 }
sum = 0
max = 3

Statement: p <= max;
Line: 17
n = 6
prime = { 0, 0, 0, 0, 0, 0, 0 }
sum = 0
max = 3
p = 2

Statement: if ( prime [ p ] == 0 ) {
Line: 19
n = 6
prime = { 0, 0, 0, 0, 0, 0, 0 }
sum = 0
max = 3
p = 2

Statement: for ( int i = p * 2;
Line: 20
n = 6
prime = { 0, 0, 0, 0, 0, 0, 0 }
sum = 0
max = 3
p = 2

Statement: i <= n;
Line: 21
n = 6
prime = { 0, 0, 0, 0, 0, 0, 0 }
sum = 0
max = 3
p = 2
i = 4

Statement: i += p ) prime [ i ] = p;
Line: 22
n = 6
prime = { 0, 0, 0, 0, 0, 0, 0 }
sum = 0
max = 3
p = 2
i = 4

Statement: i <= n;
Line: 21
n = 6
prime = { 0, 0, 0, 0, 2, 0, 0 }
sum = 0
max = 3
p = 2
i = 6

Statement: i += p ) prime [ i ] = p;
Line: 22
n = 6
prime = { 0, 0, 0, 0, 2, 0, 0 }
sum = 0
max = 3
p = 2
i = 6

Statement: i <= n;
Line: 21
n = 6
prime = { 0, 0, 0, 0, 2, 0, 2 }
sum = 0
max = 3
p = 2
i = 8

Statement: p ++ ) {
Line: 18
n = 6
prime = { 0, 0, 0, 0, 2, 0, 2 }
sum = 0
max = 3
p = 2

Statement: p <= max;
Line: 17
n = 6
prime = { 0, 0, 0, 0, 2, 0, 2 }
sum = 0
max = 3
p = 3

Statement: if ( prime [ p ] == 0 ) {
Line: 19
n = 6
prime = { 0, 0, 0, 0, 2, 0, 2 }
sum = 0
max = 3
p = 3

Statement: for ( int i = p * 2;
Line: 20
n = 6
prime = { 0, 0, 0, 0, 2, 0, 2 }
sum = 0
max = 3
p = 3

Statement: i <= n;
Line: 21
n = 6
prime = { 0, 0, 0, 0, 2, 0, 2 }
sum = 0
max = 3
p = 3
i = 6

Statement: i += p ) prime [ i ] = p;
Line: 22
n = 6
prime = { 0, 0, 0, 0, 2, 0, 2 }
sum = 0
max = 3
p = 3
i = 6

Statement: i <= n;
Line: 21
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 0
max = 3
p = 3
i = 9

Statement: p ++ ) {
Line: 18
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 0
max = 3
p = 3

Statement: p <= max;
Line: 17
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 0
max = 3
p = 4

Statement: for ( int p = 2;
Line: 25
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 0
max = 3

Statement: p <= n;
Line: 26
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 0
max = 3
p = 2

Statement: if ( prime [ p ] != 0 ) sum += prime [ p ];
Line: 28
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 0
max = 3
p = 2

Statement: else sum += p;
Line: 29
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 0
max = 3
p = 2

Statement: p ++ ) {
Line: 27
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 2
max = 3
p = 2

Statement: p <= n;
Line: 26
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 2
max = 3
p = 3

Statement: if ( prime [ p ] != 0 ) sum += prime [ p ];
Line: 28
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 2
max = 3
p = 3

Statement: else sum += p;
Line: 29
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 2
max = 3
p = 3

Statement: p ++ ) {
Line: 27
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 5
max = 3
p = 3

Statement: p <= n;
Line: 26
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 5
max = 3
p = 4

Statement: if ( prime [ p ] != 0 ) sum += prime [ p ];
Line: 28
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 5
max = 3
p = 4

Statement: p ++ ) {
Line: 27
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 7
max = 3
p = 4

Statement: p <= n;
Line: 26
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 7
max = 3
p = 5

Statement: if ( prime [ p ] != 0 ) sum += prime [ p ];
Line: 28
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 7
max = 3
p = 5

Statement: else sum += p;
Line: 29
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 7
max = 3
p = 5

Statement: p ++ ) {
Line: 27
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 12
max = 3
p = 5

Statement: p <= n;
Line: 26
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 12
max = 3
p = 6

Statement: if ( prime [ p ] != 0 ) sum += prime [ p ];
Line: 28
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 12
max = 3
p = 6

Statement: p ++ ) {
Line: 27
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 15
max = 3
p = 6

Statement: p <= n;
Line: 26
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 15
max = 3
p = 7

Statement: return sum;
Line: 31
n = 6
prime = { 0, 0, 0, 0, 2, 0, 3 }
sum = 15
max = 3
