Testing tarantula
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_SUM_ABSOLUTE_DIFFERENCE_ARRAY.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_SUM_ABSOLUTE_DIFFERENCE_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({43: 7, 44: 7, 45: 7, 46: 7, 47: 7, 49: 7, 50: 7, 51: 7, 48: 7, 52: 7, 53: 7, 54: 7, 56: 7, 55: 7, 57: 1, 58: 1, 59: 1}), 'PASS': Counter({43: 3, 44: 3, 45: 3, 46: 3, 47: 3, 49: 3, 50: 3, 51: 3, 48: 3, 52: 3, 53: 3, 54: 3, 56: 3, 55: 3})})
57 {43: 0.5, 44: 0.5, 45: 0.5, 46: 0.5, 47: 0.5, 49: 0.5, 50: 0.5, 51: 0.5, 48: 0.5, 52: 0.5, 53: 0.5, 54: 0.5, 56: 0.5, 55: 0.5, 57: 1.0, 58: 1.0, 59: 1.0} ['45']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DICE_THROW_PROBLEM.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DICE_THROW_PROBLEM.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({40: 10, 41: 10, 42: 10, 44: 10, 43: 10, 46: 6, 47: 6, 49: 6, 50: 6, 52: 6, 53: 6, 57: 6, 51: 6, 55: 6, 54: 6, 58: 1, 48: 1})})
40 {40: 0, 41: 0, 42: 0, 44: 0, 43: 0, 46: 0, 47: 0, 49: 0, 50: 0, 52: 0, 53: 0, 57: 0, 51: 0, 55: 0, 54: 0, 58: 0, 48: 0} ['40']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_SUM_ALTERNATING_SUBSEQUENCE_SUM.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_SUM_ALTERNATING_SUBSEQUENCE_SUM.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({55: 9, 57: 9, 58: 9, 59: 9, 60: 9, 61: 9, 62: 9, 64: 9, 65: 9, 67: 9, 71: 9, 72: 9, 66: 9, 73: 9, 63: 9, 68: 4, 69: 4, 70: 4}), 'PASS': Counter({55: 1, 56: 1})})
57 {55: 0.5, 57: 1.0, 58: 1.0, 59: 1.0, 60: 1.0, 61: 1.0, 62: 1.0, 64: 1.0, 65: 1.0, 67: 1.0, 71: 1.0, 72: 1.0, 66: 1.0, 73: 1.0, 63: 1.0, 68: 1.0, 69: 1.0, 70: 1.0, 56: 0.0} ['57', '58']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MINIMUM_TIME_WRITE_CHARACTERS_USING_INSERT_DELETE_COPY_OPERATION.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MINIMUM_TIME_WRITE_CHARACTERS_USING_INSERT_DELETE_COPY_OPERATION.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({38: 10, 40: 10, 42: 10, 43: 10, 44: 10, 46: 10, 50: 10, 52: 10, 45: 10, 47: 10, 48: 10, 53: 1, 54: 1})})
38 {38: 0, 40: 0, 42: 0, 43: 0, 44: 0, 46: 0, 50: 0, 52: 0, 45: 0, 47: 0, 48: 0, 53: 0, 54: 0} ['42']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/CHECK_POSSIBLE_TRANSFORM_ONE_STRING_ANOTHER.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/CHECK_POSSIBLE_TRANSFORM_ONE_STRING_ANOTHER.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({53: 3, 54: 3, 55: 3, 56: 3, 57: 3, 59: 3, 60: 3, 62: 3, 61: 3, 63: 3, 58: 3, 64: 1, 65: 1, 66: 1, 68: 1, 69: 1, 71: 1, 72: 1, 75: 1, 78: 1, 79: 1, 70: 1}), 'PASS': Counter({53: 7, 54: 7, 55: 7, 56: 7, 57: 7, 59: 7, 60: 7, 62: 7, 61: 7, 63: 7, 58: 7, 64: 1, 65: 1, 66: 1, 68: 1, 69: 1, 71: 1, 72: 1, 75: 1, 78: 1, 79: 1, 70: 1, 80: 1, 67: 1})})
64 {53: 0.5, 54: 0.5, 55: 0.5, 56: 0.5, 57: 0.5, 59: 0.5, 60: 0.5, 62: 0.5, 61: 0.5, 63: 0.5, 58: 0.5, 64: 0.7, 65: 0.7, 66: 0.7, 68: 0.7, 69: 0.7, 71: 0.7, 72: 0.7, 75: 0.7, 78: 0.7, 79: 0.7, 70: 0.7, 80: 0.0, 67: 0.0} ['75']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_NUMBERS_CAN_CONSTRUCTED_USING_TWO_NUMBERS.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_NUMBERS_CAN_CONSTRUCTED_USING_TWO_NUMBERS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({41: 7, 42: 7, 45: 7, 46: 7, 48: 7, 49: 7, 50: 7, 52: 7, 53: 7, 56: 7, 59: 7, 61: 7, 51: 7, 62: 4, 63: 4, 43: 3, 57: 3, 54: 1}), 'PASS': Counter({41: 3, 42: 3, 45: 3, 48: 3, 49: 3, 50: 3, 62: 2, 63: 2, 46: 1, 52: 1, 53: 1, 56: 1, 57: 1, 59: 1, 61: 1, 51: 1})})
43 {41: 0.5, 42: 0.5, 43: 1.0, 45: 0.5, 46: 0.75, 48: 0.5, 49: 0.5, 50: 0.5, 52: 0.75, 53: 0.75, 56: 0.75, 59: 0.75, 61: 0.75, 51: 0.75, 62: 0.4615384615384615, 63: 0.4615384615384615, 57: 0.5625, 54: 1.0} ['41']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/PERMUTE_TWO_ARRAYS_SUM_EVERY_PAIR_GREATER_EQUAL_K.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/PERMUTE_TWO_ARRAYS_SUM_EVERY_PAIR_GREATER_EQUAL_K.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({33: 9, 34: 9, 35: 9, 36: 9, 38: 9, 41: 9, 39: 6, 37: 3, 40: 3}), 'FAIL': Counter({33: 1, 34: 1, 35: 1, 36: 1, 38: 1, 39: 1, 41: 1})})
39 {33: 0.5, 34: 0.5, 35: 0.5, 36: 0.5, 38: 0.5, 39: 0.6000000000000001, 41: 0.5, 37: 0.0, 40: 0.0} ['34']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FORM_SMALLEST_NUMBER_USING_ONE_SWAP_OPERATION.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FORM_SMALLEST_NUMBER_USING_ONE_SWAP_OPERATION.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({66: 10, 67: 10, 68: 10, 69: 10, 70: 10, 71: 10, 72: 10, 82: 10, 83: 10, 84: 10, 91: 9, 98: 9, 99: 9, 85: 8, 86: 8, 87: 8, 88: 8, 90: 8, 101: 7, 108: 7, 100: 7, 110: 7, 111: 7, 74: 6, 78: 6, 79: 6, 81: 6, 73: 6})})
66 {66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 74: 0, 78: 0, 79: 0, 81: 0, 73: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 90: 0, 91: 0, 98: 0, 99: 0, 101: 0, 108: 0, 100: 0, 110: 0, 111: 0} ['110']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FIND_PAIR_MAXIMUM_GCD_ARRAY_1.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FIND_PAIR_MAXIMUM_GCD_ARRAY_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({54: 7, 55: 7, 56: 7, 58: 7, 57: 7, 60: 5, 61: 5, 62: 5, 64: 5, 63: 5, 66: 3, 67: 3, 68: 3, 70: 3, 71: 3, 72: 3, 73: 3, 75: 3, 76: 3, 80: 2, 69: 2, 77: 1, 83: 1}), 'PASS': Counter({54: 3, 55: 3, 56: 3, 58: 3, 57: 3, 60: 3, 61: 3, 62: 3, 64: 3, 63: 3, 66: 2, 67: 2, 68: 2, 70: 2, 71: 2, 72: 2, 73: 2, 75: 2, 76: 2, 80: 2, 69: 2, 82: 2, 83: 2})})
77 {54: 0.5, 55: 0.5, 56: 0.5, 58: 0.5, 57: 0.5, 60: 0.41666666666666663, 61: 0.41666666666666663, 62: 0.41666666666666663, 64: 0.41666666666666663, 63: 0.41666666666666663, 66: 0.391304347826087, 67: 0.391304347826087, 68: 0.391304347826087, 70: 0.391304347826087, 71: 0.391304347826087, 72: 0.391304347826087, 73: 0.391304347826087, 75: 0.391304347826087, 76: 0.391304347826087, 80: 0.3, 69: 0.3, 77: 1.0, 83: 0.1764705882352941, 82: 0.0} ['60']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FIND_PAIR_MAXIMUM_GCD_ARRAY.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FIND_PAIR_MAXIMUM_GCD_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({48: 6, 49: 6, 50: 6, 52: 6, 51: 6, 54: 4, 55: 3, 56: 3, 58: 3, 59: 3, 68: 3, 57: 3, 61: 2, 62: 2, 63: 2, 64: 2, 66: 2, 67: 2, 60: 2}), 'PASS': Counter({48: 4, 49: 4, 50: 4, 52: 4, 51: 4, 54: 3, 55: 3, 56: 3, 58: 3, 59: 3, 68: 3, 57: 3, 61: 2, 62: 2, 63: 2, 66: 2, 67: 2, 60: 2, 64: 1})})
64 {48: 0.5, 49: 0.5, 50: 0.5, 52: 0.5, 51: 0.5, 54: 0.4705882352941177, 55: 0.4, 56: 0.4, 58: 0.4, 59: 0.4, 61: 0.4, 62: 0.4, 63: 0.4, 64: 0.5714285714285715, 66: 0.4, 67: 0.4, 60: 0.4, 68: 0.4, 57: 0.4} ['54']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_WORDS_APPEAR_EXACTLY_TWO_TIMES_ARRAY_WORDS.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_WORDS_APPEAR_EXACTLY_TWO_TIMES_ARRAY_WORDS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({36: 9, 37: 9, 38: 9, 40: 9, 41: 9, 42: 9, 43: 9, 47: 9, 39: 9, 45: 9, 48: 7, 49: 7, 50: 7, 52: 7, 55: 7, 51: 7, 56: 6, 57: 6}), 'PASS': Counter({36: 1, 37: 1, 38: 1, 40: 1, 41: 1, 42: 1, 43: 1, 47: 1, 39: 1, 48: 1, 49: 1, 50: 1, 52: 1, 55: 1, 51: 1})})
45 {36: 0.5, 37: 0.5, 38: 0.5, 40: 0.5, 41: 0.5, 42: 0.5, 43: 0.5, 47: 0.5, 39: 0.5, 45: 1.0, 48: 0.43750000000000006, 49: 0.43750000000000006, 50: 0.43750000000000006, 52: 0.43750000000000006, 55: 0.43750000000000006, 51: 0.43750000000000006, 56: 1.0, 57: 1.0} ['40']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_INDEX_PAIRS_EQUAL_ELEMENTS_ARRAY_1.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_INDEX_PAIRS_EQUAL_ELEMENTS_ARRAY_1.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({39: 4, 40: 4, 41: 4, 50: 4, 51: 4, 52: 4, 43: 3, 44: 3, 45: 3, 49: 3, 42: 3, 54: 3, 55: 3, 53: 3, 57: 3, 58: 3}), 'FAIL': Counter({39: 6, 40: 6, 41: 6, 43: 6, 44: 6, 45: 6, 49: 6, 42: 6, 47: 6, 50: 5, 51: 5, 52: 5, 54: 5, 55: 5, 53: 4, 57: 1, 58: 1})})
47 {39: 0.5, 40: 0.5, 41: 0.5, 43: 0.5714285714285714, 44: 0.5714285714285714, 45: 0.5714285714285714, 49: 0.5714285714285714, 42: 0.5714285714285714, 47: 1.0, 50: 0.45454545454545453, 51: 0.45454545454545453, 52: 0.45454545454545453, 54: 0.5263157894736842, 55: 0.5263157894736842, 53: 0.4705882352941177, 57: 0.18181818181818182, 58: 0.18181818181818182} ['43']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/CHOCOLATE_DISTRIBUTION_PROBLEM.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/CHOCOLATE_DISTRIBUTION_PROBLEM.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({43: 7, 45: 7, 46: 7, 61: 7, 48: 4, 49: 4, 50: 4, 51: 4, 53: 4, 54: 4, 55: 4, 56: 4, 57: 4, 59: 4, 52: 4, 60: 4, 47: 3}), 'FAIL': Counter({43: 3, 45: 3, 46: 3, 48: 3, 49: 3, 50: 3, 51: 3, 53: 3, 54: 3, 55: 3, 56: 3, 57: 3, 59: 3, 52: 3, 60: 3, 61: 3})})
48 {43: 0.5, 45: 0.5, 46: 0.5, 48: 0.6363636363636364, 49: 0.6363636363636364, 50: 0.6363636363636364, 51: 0.6363636363636364, 53: 0.6363636363636364, 54: 0.6363636363636364, 55: 0.6363636363636364, 56: 0.6363636363636364, 57: 0.6363636363636364, 59: 0.6363636363636364, 52: 0.6363636363636364, 60: 0.6363636363636364, 61: 0.5, 47: 0.0} ['45']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/PANGRAM_CHECKING.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/PANGRAM_CHECKING.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({41: 9, 42: 9, 43: 9, 45: 9, 51: 9, 44: 9, 48: 8, 46: 6, 47: 6, 49: 6, 53: 4, 54: 4, 56: 4, 57: 4, 59: 4, 55: 2}), 'FAIL': Counter({41: 1, 42: 1, 43: 1, 45: 1, 46: 1, 47: 1, 51: 1, 44: 1, 48: 1, 49: 1})})
46 {41: 0.5, 42: 0.5, 43: 0.5, 45: 0.5, 46: 0.6000000000000001, 47: 0.6000000000000001, 51: 0.5, 44: 0.5, 48: 0.5294117647058824, 49: 0.6000000000000001, 53: 0.0, 54: 0.0, 56: 0.0, 57: 0.0, 59: 0.0, 55: 0.0} ['40']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MINIMUM_COST_MAKE_ARRAY_SIZE_1_REMOVING_LARGER_PAIRS.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MINIMUM_COST_MAKE_ARRAY_SIZE_1_REMOVING_LARGER_PAIRS.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({28: 8, 29: 8, 30: 8, 36: 8, 32: 1, 35: 1, 31: 1, 33: 1}), 'FAIL': Counter({28: 2, 29: 2, 30: 2, 36: 1, 32: 1, 33: 1, 35: 1, 31: 1})})
32 {28: 0.5, 29: 0.5, 30: 0.5, 36: 0.3333333333333333, 32: 0.8, 33: 0.8, 35: 0.8, 31: 0.8} ['30']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SUM_LARGEST_PRIME_FACTOR_NUMBER_LESS_EQUAL_N.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SUM_LARGEST_PRIME_FACTOR_NUMBER_LESS_EQUAL_N.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({46: 10, 47: 10, 48: 10, 49: 10, 50: 10, 52: 10, 53: 9, 54: 9, 56: 9, 55: 9, 59: 6, 51: 6, 58: 5, 60: 3, 61: 3, 63: 3, 64: 3, 65: 3, 69: 3, 62: 3, 70: 2, 71: 2, 67: 2})})
46 {46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 52: 0, 59: 0, 51: 0, 60: 0, 61: 0, 63: 0, 64: 0, 65: 0, 69: 0, 62: 0, 70: 0, 71: 0, 53: 0, 54: 0, 56: 0, 55: 0, 58: 0, 67: 0} ['47']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_NUMBER_CHOCOLATES_DISTRIBUTED_EQUALLY_AMONG_K_STUDENTS.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_NUMBER_CHOCOLATES_DISTRIBUTED_EQUALLY_AMONG_K_STUDENTS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({45: 10, 46: 10, 48: 10, 49: 10})})
45 {45: 0, 46: 0, 48: 0, 49: 0} ['46']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MINIMUM_SUM_SUBSEQUENCE_LEAST_ONE_EVERY_FOUR_CONSECUTIVE_ELEMENTS_PICKED_1.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MINIMUM_SUM_SUBSEQUENCE_LEAST_ONE_EVERY_FOUR_CONSECUTIVE_ELEMENTS_PICKED_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({37: 8, 39: 8, 40: 8, 41: 8, 42: 8, 43: 8, 44: 8, 45: 8, 47: 8, 46: 8, 49: 7, 50: 7}), 'PASS': Counter({37: 2, 39: 2, 40: 2, 41: 2, 42: 2, 43: 2, 44: 2, 45: 2, 47: 2, 46: 2, 49: 2, 50: 2})})
37 {37: 0.5, 39: 0.5, 40: 0.5, 41: 0.5, 42: 0.5, 43: 0.5, 44: 0.5, 45: 0.5, 47: 0.5, 46: 0.5, 49: 0.4666666666666667, 50: 0.4666666666666667} ['38', '47', '49']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAKE_LARGEST_PALINDROME_CHANGING_K_DIGITS.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAKE_LARGEST_PALINDROME_CHANGING_K_DIGITS.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({59: 4, 60: 4, 61: 4, 62: 4, 63: 4, 64: 4, 65: 4, 66: 4, 67: 4, 68: 4, 69: 4, 71: 4, 97: 4}), 'FAIL': Counter({59: 6, 60: 6, 61: 6, 62: 6, 63: 6, 64: 6, 68: 6, 69: 6, 71: 6, 72: 6, 73: 6, 74: 6, 75: 6, 78: 6, 88: 6, 89: 6, 91: 6, 92: 6, 96: 6, 97: 6, 65: 5, 66: 5, 67: 5, 79: 5, 83: 5, 87: 5, 84: 4, 85: 4, 76: 3, 77: 3})})
72 {59: 0.5, 60: 0.5, 61: 0.5, 62: 0.5, 63: 0.5, 64: 0.5, 65: 0.45454545454545453, 66: 0.45454545454545453, 67: 0.45454545454545453, 68: 0.5, 69: 0.5, 71: 0.5, 72: 1.0, 73: 1.0, 74: 1.0, 75: 1.0, 78: 1.0, 79: 1.0, 83: 1.0, 84: 1.0, 85: 1.0, 87: 1.0, 88: 1.0, 89: 1.0, 76: 1.0, 77: 1.0, 91: 1.0, 92: 1.0, 96: 1.0, 97: 0.5} ['60']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SIZE_SUBARRAY_MAXIMUM_SUM.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SIZE_SUBARRAY_MAXIMUM_SUM.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({43: 8, 44: 8, 45: 8, 47: 8, 48: 8, 53: 8, 57: 8, 46: 8, 58: 6, 54: 1, 55: 1}), 'PASS': Counter({43: 2, 44: 2, 45: 2, 47: 2, 48: 2, 53: 2, 54: 2, 55: 2, 57: 2, 46: 2, 58: 2})})
43 {43: 0.5, 44: 0.5, 45: 0.5, 47: 0.5, 48: 0.5, 53: 0.5, 57: 0.5, 46: 0.5, 58: 0.42857142857142855, 54: 0.1111111111111111, 55: 0.1111111111111111} ['43']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/UNBOUNDED_KNAPSACK_REPETITION_ITEMS_ALLOWED.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/UNBOUNDED_KNAPSACK_REPETITION_ITEMS_ALLOWED.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({36: 9, 37: 9, 38: 9, 40: 9, 41: 9, 43: 9, 45: 9, 42: 9, 46: 8, 39: 8, 44: 4, 47: 2, 48: 2}), 'PASS': Counter({36: 1, 37: 1, 38: 1, 40: 1, 41: 1, 43: 1, 44: 1, 45: 1, 42: 1, 46: 1, 39: 1})})
47 {36: 0.5, 37: 0.5, 38: 0.5, 40: 0.5, 41: 0.5, 43: 0.5, 45: 0.5, 42: 0.5, 46: 0.47058823529411764, 39: 0.47058823529411764, 47: 1.0, 48: 1.0, 44: 0.30769230769230765} ['36']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DICE_THROW_PROBLEM_1.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DICE_THROW_PROBLEM_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({41: 10, 42: 10, 43: 10, 44: 10, 46: 10, 47: 10, 49: 10, 50: 10, 53: 10, 48: 10, 54: 3, 45: 3, 51: 1})})
41 {41: 0, 42: 0, 43: 0, 44: 0, 46: 0, 47: 0, 49: 0, 50: 0, 53: 0, 48: 0, 54: 0, 45: 0, 51: 0} ['41']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SPACE_OPTIMIZED_DP_SOLUTION_0_1_KNAPSACK_PROBLEM_1.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SPACE_OPTIMIZED_DP_SOLUTION_0_1_KNAPSACK_PROBLEM_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({35: 8, 36: 8, 37: 8, 38: 8, 40: 8, 41: 8, 43: 8, 39: 8, 42: 6, 44: 3, 45: 3}), 'PASS': Counter({35: 2, 36: 2, 37: 2, 38: 2, 40: 2, 41: 2, 43: 2, 42: 2, 39: 1})})
44 {35: 0.5, 36: 0.5, 37: 0.5, 38: 0.5, 40: 0.5, 41: 0.5, 43: 0.5, 39: 0.6666666666666666, 44: 1.0, 45: 1.0, 42: 0.42857142857142855} ['36']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_WAYS_DIVIDE_CIRCLE_USING_N_NON_INTERSECTING_CHORDS.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_WAYS_DIVIDE_CIRCLE_USING_N_NON_INTERSECTING_CHORDS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({42: 10, 43: 10, 44: 10, 45: 10, 46: 10, 47: 10, 49: 10, 50: 10, 52: 10, 51: 10, 53: 10, 48: 10})})
42 {42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 49: 0, 50: 0, 52: 0, 51: 0, 53: 0, 48: 0} ['43']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_SUBARRAYS_WITH_SAME_EVEN_AND_ODD_ELEMENTS.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_SUBARRAYS_WITH_SAME_EVEN_AND_ODD_ELEMENTS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({48: 10, 49: 10, 50: 10, 51: 10, 52: 10, 53: 10, 54: 10, 56: 10, 59: 10, 67: 10, 55: 10, 58: 10, 60: 9, 61: 9, 62: 9, 57: 7, 68: 5, 69: 5, 64: 4, 65: 4})})
48 {48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 56: 0, 57: 0, 59: 0, 64: 0, 65: 0, 67: 0, 55: 0, 58: 0, 60: 0, 61: 0, 62: 0, 68: 0, 69: 0} ['50', '51']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/LARGEST_SUBSEQUENCE_GCD_GREATER_1.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/LARGEST_SUBSEQUENCE_GCD_GREATER_1.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({41: 9, 42: 9, 43: 9, 44: 9, 46: 6, 47: 6, 48: 6, 50: 6, 51: 6, 49: 6, 52: 5, 45: 5, 54: 3}), 'FAIL': Counter({41: 1, 42: 1, 43: 1, 44: 1, 54: 1})})
54 {41: 0.5, 42: 0.5, 43: 0.5, 44: 0.5, 54: 0.75, 46: 0.0, 47: 0.0, 48: 0.0, 50: 0.0, 51: 0.0, 49: 0.0, 52: 0.0, 45: 0.0} ['42']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FUNCTION_COPY_STRING_ITERATIVE_RECURSIVE_1.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FUNCTION_COPY_STRING_ITERATIVE_RECURSIVE_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({31: 10, 32: 10, 34: 10, 33: 10, 35: 10})})
31 {31: 0, 32: 0, 34: 0, 33: 0, 35: 0} ['32']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SUM_AREA_RECTANGLES_POSSIBLE_ARRAY.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SUM_AREA_RECTANGLES_POSSIBLE_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({46: 4, 47: 4, 48: 4, 49: 4, 50: 4, 51: 4, 53: 4, 58: 4, 63: 4, 52: 4, 64: 3, 54: 3, 55: 3, 56: 3, 57: 3, 59: 3, 60: 3, 61: 3}), 'PASS': Counter({46: 5, 47: 5, 48: 5, 49: 5, 50: 5, 51: 5, 53: 5, 54: 5, 55: 5, 56: 5, 57: 5, 63: 5, 52: 5, 58: 5, 59: 5, 60: 5, 61: 5, 64: 3, 4294967295: 1})})
64 {46: 0.5454545454545454, 47: 0.5454545454545454, 48: 0.5454545454545454, 49: 0.5454545454545454, 50: 0.5454545454545454, 51: 0.5454545454545454, 53: 0.5454545454545454, 58: 0.5454545454545454, 63: 0.5454545454545454, 52: 0.5454545454545454, 64: 0.6, 54: 0.47368421052631576, 55: 0.47368421052631576, 56: 0.47368421052631576, 57: 0.47368421052631576, 59: 0.47368421052631576, 60: 0.47368421052631576, 61: 0.47368421052631576, 4294967295: 0.0} ['46']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DIVIDE_LARGE_NUMBER_REPRESENTED_STRING.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DIVIDE_LARGE_NUMBER_REPRESENTED_STRING.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({37: 5, 38: 5, 39: 5, 40: 5, 41: 5, 44: 5, 45: 5, 46: 5, 47: 5, 49: 5, 50: 5, 51: 5, 42: 4}), 'PASS': Counter({37: 3, 38: 3, 39: 3, 40: 3, 41: 3, 42: 3, 44: 3, 45: 3, 49: 3, 51: 3})})
46 {37: 0.41666666666666663, 38: 0.41666666666666663, 39: 0.41666666666666663, 40: 0.41666666666666663, 41: 0.41666666666666663, 42: 0.36363636363636365, 44: 0.41666666666666663, 45: 0.41666666666666663, 46: 1.0, 47: 1.0, 49: 0.41666666666666663, 50: 1.0, 51: 0.41666666666666663} ['45']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_PRODUCT_SUBSET_ARRAY.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_PRODUCT_SUBSET_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({50: 9, 52: 9, 53: 9, 54: 9, 55: 9, 56: 9, 58: 9, 62: 9, 66: 9, 57: 9, 68: 6, 70: 6, 74: 6, 75: 6, 59: 3, 60: 3, 63: 2, 64: 2}), 'FAIL': Counter({50: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 58: 1, 62: 1, 63: 1, 64: 1, 66: 1, 57: 1, 68: 1, 70: 1, 71: 1, 72: 1, 74: 1, 75: 1})})
71 {50: 0.5, 52: 0.5, 53: 0.5, 54: 0.5, 55: 0.5, 56: 0.5, 58: 0.5, 62: 0.5, 63: 0.8181818181818181, 64: 0.8181818181818181, 66: 0.5, 57: 0.5, 68: 0.6000000000000001, 70: 0.6000000000000001, 71: 1.0, 72: 1.0, 74: 0.6000000000000001, 75: 0.6000000000000001, 59: 0.0, 60: 0.0} ['52']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FIND_EQUAL_POINT_STRING_BRACKETS.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FIND_EQUAL_POINT_STRING_BRACKETS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({54: 8, 55: 8, 56: 8, 57: 8, 58: 8, 59: 8, 60: 8, 63: 8, 66: 8, 67: 8, 69: 8, 75: 8, 68: 8, 76: 8, 77: 8, 79: 8, 85: 8, 78: 8, 86: 8, 89: 8, 73: 7, 83: 7, 92: 7, 93: 7, 95: 7, 94: 7, 98: 7, 97: 6, 70: 5, 71: 5, 80: 5, 81: 5, 64: 3, 61: 2, 90: 1}), 'PASS': Counter({54: 2, 55: 2, 56: 2, 57: 2, 58: 2, 59: 2, 60: 2, 61: 2, 63: 2, 64: 2, 66: 2, 67: 2, 69: 2, 73: 2, 75: 2, 68: 2, 76: 2, 77: 2, 79: 2, 85: 2, 78: 2, 83: 2, 86: 2, 89: 2, 92: 2, 93: 2, 95: 2, 94: 2, 96: 2, 97: 2, 98: 2, 80: 1, 81: 1})})
70 {54: 0.5, 55: 0.5, 56: 0.5, 57: 0.5, 58: 0.5, 59: 0.5, 60: 0.5, 61: 0.2, 63: 0.5, 66: 0.5, 67: 0.5, 69: 0.5, 70: 1.0, 71: 1.0, 75: 0.5, 68: 0.5, 73: 0.4666666666666667, 76: 0.5, 77: 0.5, 79: 0.5, 80: 0.5555555555555556, 81: 0.5555555555555556, 85: 0.5, 78: 0.5, 83: 0.4666666666666667, 86: 0.5, 89: 0.5, 92: 0.4666666666666667, 93: 0.4666666666666667, 95: 0.4666666666666667, 94: 0.4666666666666667, 97: 0.42857142857142855, 98: 0.4666666666666667, 64: 0.2727272727272727, 90: 1.0, 96: 0.0} ['55', '56']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/BREAKING_NUMBER_FIRST_PART_INTEGRAL_DIVISION_SECOND_POWER_10.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/BREAKING_NUMBER_FIRST_PART_INTEGRAL_DIVISION_SECOND_POWER_10.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({40: 7, 41: 7, 42: 7, 43: 7, 44: 7, 46: 7, 47: 7, 48: 7, 49: 7, 51: 7, 52: 7, 45: 7, 53: 7}), 'FAIL': Counter({40: 3, 41: 3, 42: 3, 43: 3, 44: 3, 46: 3, 47: 3, 48: 3, 49: 3, 51: 3, 52: 3, 45: 3, 50: 3, 53: 3})})
50 {40: 0.5, 41: 0.5, 42: 0.5, 43: 0.5, 44: 0.5, 46: 0.5, 47: 0.5, 48: 0.5, 49: 0.5, 51: 0.5, 52: 0.5, 45: 0.5, 50: 1.0, 53: 0.5} ['48']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DIFFERENT_WAYS_SUM_N_USING_NUMBERS_GREATER_EQUAL_M.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DIFFERENT_WAYS_SUM_N_USING_NUMBERS_GREATER_EQUAL_M.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({41: 8, 42: 8, 43: 8, 44: 8, 46: 4, 47: 4, 49: 4, 50: 4, 53: 4, 48: 4, 55: 4, 56: 4, 51: 2, 54: 2, 45: 2}), 'PASS': Counter({41: 2, 42: 2, 43: 2, 44: 2, 55: 2, 56: 2})})
46 {41: 0.5, 42: 0.5, 43: 0.5, 44: 0.5, 46: 1.0, 47: 1.0, 49: 1.0, 50: 1.0, 53: 1.0, 48: 1.0, 51: 1.0, 54: 1.0, 45: 1.0, 55: 0.3333333333333333, 56: 0.3333333333333333} ['41']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SPACE_OPTIMIZED_DP_SOLUTION_0_1_KNAPSACK_PROBLEM.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SPACE_OPTIMIZED_DP_SOLUTION_0_1_KNAPSACK_PROBLEM.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({47: 10, 48: 10, 49: 10, 50: 10, 51: 10, 58: 10, 59: 10, 63: 10, 52: 10, 53: 10, 56: 9, 60: 6, 54: 5, 65: 2, 66: 2})})
47 {47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 58: 0, 59: 0, 60: 0, 63: 0, 52: 0, 53: 0, 54: 0, 56: 0, 65: 0, 66: 0} ['47']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_AREA_RECTANGLE_PICKING_FOUR_SIDES_ARRAY.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_AREA_RECTANGLE_PICKING_FOUR_SIDES_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({34: 5, 35: 5, 36: 5, 37: 5, 39: 5, 38: 5, 41: 5, 40: 4}), 'FAIL': Counter({34: 5, 35: 5, 36: 5, 37: 5, 39: 5, 40: 5, 38: 5, 41: 5})})
40 {34: 0.5, 35: 0.5, 36: 0.5, 37: 0.5, 39: 0.5, 40: 0.5555555555555556, 38: 0.5, 41: 0.5} ['34']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FORM_MINIMUM_NUMBER_FROM_GIVEN_SEQUENCE_1.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FORM_MINIMUM_NUMBER_FROM_GIVEN_SEQUENCE_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({44: 3, 45: 3, 46: 3, 47: 3, 48: 3, 49: 3, 50: 3, 52: 3, 61: 3, 51: 3, 53: 3, 54: 3, 56: 3, 57: 3, 59: 3, 55: 3, 60: 3, 62: 3, 63: 3})})
44 {44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 52: 0, 61: 0, 51: 0, 53: 0, 54: 0, 56: 0, 57: 0, 59: 0, 55: 0, 60: 0, 62: 0, 63: 0} ['47']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SORT_EVEN_PLACED_ELEMENTS_INCREASING_ODD_PLACED_DECREASING_ORDER.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SORT_EVEN_PLACED_ELEMENTS_INCREASING_ODD_PLACED_DECREASING_ORDER.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({44: 10, 45: 10, 46: 10, 47: 10, 49: 10, 50: 10, 53: 10, 48: 10, 52: 10, 54: 10, 55: 10, 56: 10, 57: 10, 58: 10, 60: 10, 59: 10, 61: 10, 62: 10, 64: 10, 63: 10, 65: 10})})
44 {44: 0, 45: 0, 46: 0, 47: 0, 49: 0, 50: 0, 53: 0, 48: 0, 52: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 60: 0, 59: 0, 61: 0, 62: 0, 64: 0, 63: 0, 65: 0} ['55']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MULTIPLY_LARGE_NUMBERS_REPRESENTED_AS_STRINGS.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MULTIPLY_LARGE_NUMBERS_REPRESENTED_AS_STRINGS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({57: 10, 58: 10, 59: 10, 61: 10, 62: 10, 63: 10, 64: 10, 65: 10, 67: 10, 68: 10, 69: 10, 70: 10, 71: 10, 73: 10, 74: 10, 75: 10, 76: 10, 77: 10, 72: 10, 79: 10, 81: 10, 66: 10, 80: 8, 83: 1, 84: 1, 86: 1, 88: 1, 89: 1, 90: 1})})
57 {57: 0, 58: 0, 59: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 72: 0, 79: 0, 81: 0, 66: 0, 80: 0, 83: 0, 84: 0, 86: 0, 88: 0, 89: 0, 90: 0} ['90']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_PROFIT_BY_BUYING_AND_SELLING_A_SHARE_AT_MOST_K_TIMES_1.cpp
/Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_PROFIT_BY_BUYING_AND_SELLING_A_SHARE_AT_MOST_K_TIMES_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({46: 10, 47: 10, 48: 10, 50: 10, 49: 10, 52: 10, 53: 10, 55: 10, 54: 10, 57: 5, 58: 5, 60: 5, 61: 5, 62: 5, 64: 5, 65: 5, 63: 5, 67: 4, 59: 4, 68: 1, 69: 1})})
46 {46: 0, 47: 0, 48: 0, 50: 0, 49: 0, 52: 0, 53: 0, 55: 0, 54: 0, 57: 0, 58: 0, 60: 0, 61: 0, 62: 0, 64: 0, 65: 0, 63: 0, 67: 0, 59: 0, 68: 0, 69: 0} ['46', '60']
Got it right 6 times.
Testing ochiai
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_SUM_ABSOLUTE_DIFFERENCE_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({43: 7, 44: 7, 45: 7, 46: 7, 47: 7, 49: 7, 50: 7, 51: 7, 48: 7, 52: 7, 53: 7, 54: 7, 56: 7, 55: 7, 57: 1, 58: 1, 59: 1}), 'PASS': Counter({43: 3, 44: 3, 45: 3, 46: 3, 47: 3, 49: 3, 50: 3, 51: 3, 48: 3, 52: 3, 53: 3, 54: 3, 56: 3, 55: 3})})
43 {43: 0.8366600265340756, 44: 0.8366600265340756, 45: 0.8366600265340756, 46: 0.8366600265340756, 47: 0.8366600265340756, 49: 0.8366600265340756, 50: 0.8366600265340756, 51: 0.8366600265340756, 48: 0.8366600265340756, 52: 0.8366600265340756, 53: 0.8366600265340756, 54: 0.8366600265340756, 56: 0.8366600265340756, 55: 0.8366600265340756, 57: 0.11952286093343936, 58: 0.11952286093343936, 59: 0.11952286093343936} ['45']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DICE_THROW_PROBLEM.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({40: 10, 41: 10, 42: 10, 44: 10, 43: 10, 46: 6, 47: 6, 49: 6, 50: 6, 52: 6, 53: 6, 57: 6, 51: 6, 55: 6, 54: 6, 58: 1, 48: 1}), 'PASS': Counter()})
40 {40: 1.0, 41: 1.0, 42: 1.0, 44: 1.0, 43: 1.0, 46: 0.6, 47: 0.6, 49: 0.6, 50: 0.6, 52: 0.6, 53: 0.6, 57: 0.6, 51: 0.6, 55: 0.6, 54: 0.6, 58: 0.1, 48: 0.1} ['40']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_SUM_ALTERNATING_SUBSEQUENCE_SUM.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({55: 9, 57: 9, 58: 9, 59: 9, 60: 9, 61: 9, 62: 9, 64: 9, 65: 9, 67: 9, 71: 9, 72: 9, 66: 9, 73: 9, 63: 9, 68: 4, 69: 4, 70: 4}), 'PASS': Counter({55: 1, 56: 1})})
55 {55: 0.9486832980505138, 57: 0.9486832980505138, 58: 0.9486832980505138, 59: 0.9486832980505138, 60: 0.9486832980505138, 61: 0.9486832980505138, 62: 0.9486832980505138, 64: 0.9486832980505138, 65: 0.9486832980505138, 67: 0.9486832980505138, 71: 0.9486832980505138, 72: 0.9486832980505138, 66: 0.9486832980505138, 73: 0.9486832980505138, 63: 0.9486832980505138, 68: 0.4216370213557839, 69: 0.4216370213557839, 70: 0.4216370213557839, 56: 0.0} ['57', '58']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MINIMUM_TIME_WRITE_CHARACTERS_USING_INSERT_DELETE_COPY_OPERATION.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({38: 10, 40: 10, 42: 10, 43: 10, 44: 10, 46: 10, 50: 10, 52: 10, 45: 10, 47: 10, 48: 10, 53: 1, 54: 1}), 'PASS': Counter()})
38 {38: 1.0, 40: 1.0, 42: 1.0, 43: 1.0, 44: 1.0, 46: 1.0, 50: 1.0, 52: 1.0, 45: 1.0, 47: 1.0, 48: 1.0, 53: 0.1, 54: 0.1} ['42']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/CHECK_POSSIBLE_TRANSFORM_ONE_STRING_ANOTHER.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({53: 3, 54: 3, 55: 3, 56: 3, 57: 3, 59: 3, 60: 3, 62: 3, 61: 3, 63: 3, 58: 3, 64: 1, 65: 1, 66: 1, 68: 1, 69: 1, 71: 1, 72: 1, 75: 1, 78: 1, 79: 1, 70: 1}), 'PASS': Counter({53: 7, 54: 7, 55: 7, 56: 7, 57: 7, 59: 7, 60: 7, 62: 7, 61: 7, 63: 7, 58: 7, 64: 1, 65: 1, 66: 1, 68: 1, 69: 1, 71: 1, 72: 1, 75: 1, 78: 1, 79: 1, 70: 1, 80: 1, 67: 1})})
53 {53: 0.5477225575051661, 54: 0.5477225575051661, 55: 0.5477225575051661, 56: 0.5477225575051661, 57: 0.5477225575051661, 59: 0.5477225575051661, 60: 0.5477225575051661, 62: 0.5477225575051661, 61: 0.5477225575051661, 63: 0.5477225575051661, 58: 0.5477225575051661, 64: 0.18257418583505536, 65: 0.18257418583505536, 66: 0.18257418583505536, 68: 0.18257418583505536, 69: 0.18257418583505536, 71: 0.18257418583505536, 72: 0.18257418583505536, 75: 0.18257418583505536, 78: 0.18257418583505536, 79: 0.18257418583505536, 70: 0.18257418583505536, 80: 0.0, 67: 0.0} ['75']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_NUMBERS_CAN_CONSTRUCTED_USING_TWO_NUMBERS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({41: 7, 42: 7, 45: 7, 46: 7, 48: 7, 49: 7, 50: 7, 52: 7, 53: 7, 56: 7, 59: 7, 61: 7, 51: 7, 62: 4, 63: 4, 43: 3, 57: 3, 54: 1}), 'PASS': Counter({41: 3, 42: 3, 45: 3, 48: 3, 49: 3, 50: 3, 62: 2, 63: 2, 46: 1, 52: 1, 53: 1, 56: 1, 57: 1, 59: 1, 61: 1, 51: 1})})
41 {41: 0.8366600265340756, 42: 0.8366600265340756, 43: 0.35856858280031806, 45: 0.8366600265340756, 46: 0.8366600265340756, 48: 0.8366600265340756, 49: 0.8366600265340756, 50: 0.8366600265340756, 52: 0.8366600265340756, 53: 0.8366600265340756, 56: 0.8366600265340756, 59: 0.8366600265340756, 61: 0.8366600265340756, 51: 0.8366600265340756, 62: 0.47809144373375745, 63: 0.47809144373375745, 57: 0.35856858280031806, 54: 0.11952286093343936} ['41']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/PERMUTE_TWO_ARRAYS_SUM_EVERY_PAIR_GREATER_EQUAL_K.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({33: 9, 34: 9, 35: 9, 36: 9, 38: 9, 41: 9, 39: 6, 37: 3, 40: 3}), 'FAIL': Counter({33: 1, 34: 1, 35: 1, 36: 1, 38: 1, 39: 1, 41: 1})})
33 {33: 0.31622776601683794, 34: 0.31622776601683794, 35: 0.31622776601683794, 36: 0.31622776601683794, 38: 0.31622776601683794, 39: 0.31622776601683794, 41: 0.31622776601683794, 37: 0.0, 40: 0.0} ['34']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FORM_SMALLEST_NUMBER_USING_ONE_SWAP_OPERATION.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({66: 10, 67: 10, 68: 10, 69: 10, 70: 10, 71: 10, 72: 10, 82: 10, 83: 10, 84: 10, 91: 9, 98: 9, 99: 9, 85: 8, 86: 8, 87: 8, 88: 8, 90: 8, 101: 7, 108: 7, 100: 7, 110: 7, 111: 7, 74: 6, 78: 6, 79: 6, 81: 6, 73: 6}), 'PASS': Counter()})
66 {66: 1.0, 67: 1.0, 68: 1.0, 69: 1.0, 70: 1.0, 71: 1.0, 72: 1.0, 74: 0.6, 78: 0.6, 79: 0.6, 81: 0.6, 73: 0.6, 82: 1.0, 83: 1.0, 84: 1.0, 85: 0.8, 86: 0.8, 87: 0.8, 88: 0.8, 90: 0.8, 91: 0.9, 98: 0.9, 99: 0.9, 101: 0.7, 108: 0.7, 100: 0.7, 110: 0.7, 111: 0.7} ['110']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FIND_PAIR_MAXIMUM_GCD_ARRAY_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({54: 7, 55: 7, 56: 7, 58: 7, 57: 7, 60: 5, 61: 5, 62: 5, 64: 5, 63: 5, 66: 3, 67: 3, 68: 3, 70: 3, 71: 3, 72: 3, 73: 3, 75: 3, 76: 3, 80: 2, 69: 2, 77: 1, 83: 1}), 'PASS': Counter({54: 3, 55: 3, 56: 3, 58: 3, 57: 3, 60: 3, 61: 3, 62: 3, 64: 3, 63: 3, 66: 2, 67: 2, 68: 2, 70: 2, 71: 2, 72: 2, 73: 2, 75: 2, 76: 2, 80: 2, 69: 2, 82: 2, 83: 2})})
54 {54: 0.8366600265340756, 55: 0.8366600265340756, 56: 0.8366600265340756, 58: 0.8366600265340756, 57: 0.8366600265340756, 60: 0.5976143046671968, 61: 0.5976143046671968, 62: 0.5976143046671968, 64: 0.5976143046671968, 63: 0.5976143046671968, 66: 0.35856858280031806, 67: 0.35856858280031806, 68: 0.35856858280031806, 70: 0.35856858280031806, 71: 0.35856858280031806, 72: 0.35856858280031806, 73: 0.35856858280031806, 75: 0.35856858280031806, 76: 0.35856858280031806, 80: 0.23904572186687872, 69: 0.23904572186687872, 77: 0.11952286093343936, 83: 0.11952286093343936, 82: 0.0} ['60']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FIND_PAIR_MAXIMUM_GCD_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({48: 6, 49: 6, 50: 6, 52: 6, 51: 6, 54: 4, 55: 3, 56: 3, 58: 3, 59: 3, 68: 3, 57: 3, 61: 2, 62: 2, 63: 2, 64: 2, 66: 2, 67: 2, 60: 2}), 'PASS': Counter({48: 4, 49: 4, 50: 4, 52: 4, 51: 4, 54: 3, 55: 3, 56: 3, 58: 3, 59: 3, 68: 3, 57: 3, 61: 2, 62: 2, 63: 2, 66: 2, 67: 2, 60: 2, 64: 1})})
48 {48: 0.7745966692414834, 49: 0.7745966692414834, 50: 0.7745966692414834, 52: 0.7745966692414834, 51: 0.7745966692414834, 54: 0.5163977794943222, 55: 0.3872983346207417, 56: 0.3872983346207417, 58: 0.3872983346207417, 59: 0.3872983346207417, 61: 0.2581988897471611, 62: 0.2581988897471611, 63: 0.2581988897471611, 64: 0.2581988897471611, 66: 0.2581988897471611, 67: 0.2581988897471611, 60: 0.2581988897471611, 68: 0.3872983346207417, 57: 0.3872983346207417} ['54']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_WORDS_APPEAR_EXACTLY_TWO_TIMES_ARRAY_WORDS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({36: 9, 37: 9, 38: 9, 40: 9, 41: 9, 42: 9, 43: 9, 47: 9, 39: 9, 45: 9, 48: 7, 49: 7, 50: 7, 52: 7, 55: 7, 51: 7, 56: 6, 57: 6}), 'PASS': Counter({36: 1, 37: 1, 38: 1, 40: 1, 41: 1, 42: 1, 43: 1, 47: 1, 39: 1, 48: 1, 49: 1, 50: 1, 52: 1, 55: 1, 51: 1})})
36 {36: 0.9486832980505138, 37: 0.9486832980505138, 38: 0.9486832980505138, 40: 0.9486832980505138, 41: 0.9486832980505138, 42: 0.9486832980505138, 43: 0.9486832980505138, 47: 0.9486832980505138, 39: 0.9486832980505138, 45: 0.9486832980505138, 48: 0.7378647873726218, 49: 0.7378647873726218, 50: 0.7378647873726218, 52: 0.7378647873726218, 55: 0.7378647873726218, 51: 0.7378647873726218, 56: 0.6324555320336759, 57: 0.6324555320336759} ['40']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_INDEX_PAIRS_EQUAL_ELEMENTS_ARRAY_1.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({39: 4, 40: 4, 41: 4, 50: 4, 51: 4, 52: 4, 43: 3, 44: 3, 45: 3, 49: 3, 42: 3, 54: 3, 55: 3, 53: 3, 57: 3, 58: 3}), 'FAIL': Counter({39: 6, 40: 6, 41: 6, 43: 6, 44: 6, 45: 6, 49: 6, 42: 6, 47: 6, 50: 5, 51: 5, 52: 5, 54: 5, 55: 5, 53: 4, 57: 1, 58: 1})})
39 {39: 0.7745966692414834, 40: 0.7745966692414834, 41: 0.7745966692414834, 43: 0.7745966692414834, 44: 0.7745966692414834, 45: 0.7745966692414834, 49: 0.7745966692414834, 42: 0.7745966692414834, 47: 0.7745966692414834, 50: 0.6454972243679028, 51: 0.6454972243679028, 52: 0.6454972243679028, 54: 0.6454972243679028, 55: 0.6454972243679028, 53: 0.5163977794943222, 57: 0.12909944487358055, 58: 0.12909944487358055} ['43']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/CHOCOLATE_DISTRIBUTION_PROBLEM.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({43: 7, 45: 7, 46: 7, 61: 7, 48: 4, 49: 4, 50: 4, 51: 4, 53: 4, 54: 4, 55: 4, 56: 4, 57: 4, 59: 4, 52: 4, 60: 4, 47: 3}), 'FAIL': Counter({43: 3, 45: 3, 46: 3, 48: 3, 49: 3, 50: 3, 51: 3, 53: 3, 54: 3, 55: 3, 56: 3, 57: 3, 59: 3, 52: 3, 60: 3, 61: 3})})
43 {43: 0.5477225575051661, 45: 0.5477225575051661, 46: 0.5477225575051661, 48: 0.5477225575051661, 49: 0.5477225575051661, 50: 0.5477225575051661, 51: 0.5477225575051661, 53: 0.5477225575051661, 54: 0.5477225575051661, 55: 0.5477225575051661, 56: 0.5477225575051661, 57: 0.5477225575051661, 59: 0.5477225575051661, 52: 0.5477225575051661, 60: 0.5477225575051661, 61: 0.5477225575051661, 47: 0.0} ['45']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/PANGRAM_CHECKING.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({41: 9, 42: 9, 43: 9, 45: 9, 51: 9, 44: 9, 48: 8, 46: 6, 47: 6, 49: 6, 53: 4, 54: 4, 56: 4, 57: 4, 59: 4, 55: 2}), 'FAIL': Counter({41: 1, 42: 1, 43: 1, 45: 1, 46: 1, 47: 1, 51: 1, 44: 1, 48: 1, 49: 1})})
41 {41: 0.31622776601683794, 42: 0.31622776601683794, 43: 0.31622776601683794, 45: 0.31622776601683794, 46: 0.31622776601683794, 47: 0.31622776601683794, 51: 0.31622776601683794, 44: 0.31622776601683794, 48: 0.31622776601683794, 49: 0.31622776601683794, 53: 0.0, 54: 0.0, 56: 0.0, 57: 0.0, 59: 0.0, 55: 0.0} ['40']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MINIMUM_COST_MAKE_ARRAY_SIZE_1_REMOVING_LARGER_PAIRS.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({28: 8, 29: 8, 30: 8, 36: 8, 32: 1, 35: 1, 31: 1, 33: 1}), 'FAIL': Counter({28: 2, 29: 2, 30: 2, 36: 1, 32: 1, 33: 1, 35: 1, 31: 1})})
28 {28: 0.4472135954999579, 29: 0.4472135954999579, 30: 0.4472135954999579, 36: 0.22360679774997896, 32: 0.22360679774997896, 33: 0.22360679774997896, 35: 0.22360679774997896, 31: 0.22360679774997896} ['30']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SUM_LARGEST_PRIME_FACTOR_NUMBER_LESS_EQUAL_N.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({46: 10, 47: 10, 48: 10, 49: 10, 50: 10, 52: 10, 53: 9, 54: 9, 56: 9, 55: 9, 59: 6, 51: 6, 58: 5, 60: 3, 61: 3, 63: 3, 64: 3, 65: 3, 69: 3, 62: 3, 70: 2, 71: 2, 67: 2}), 'PASS': Counter()})
46 {46: 1.0, 47: 1.0, 48: 1.0, 49: 1.0, 50: 1.0, 52: 1.0, 59: 0.6, 51: 0.6, 60: 0.3, 61: 0.3, 63: 0.3, 64: 0.3, 65: 0.3, 69: 0.3, 62: 0.3, 70: 0.2, 71: 0.2, 53: 0.9, 54: 0.9, 56: 0.9, 55: 0.9, 58: 0.5, 67: 0.2} ['47']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_NUMBER_CHOCOLATES_DISTRIBUTED_EQUALLY_AMONG_K_STUDENTS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({45: 10, 46: 10, 48: 10, 49: 10}), 'PASS': Counter()})
45 {45: 1.0, 46: 1.0, 48: 1.0, 49: 1.0} ['46']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MINIMUM_SUM_SUBSEQUENCE_LEAST_ONE_EVERY_FOUR_CONSECUTIVE_ELEMENTS_PICKED_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({37: 8, 39: 8, 40: 8, 41: 8, 42: 8, 43: 8, 44: 8, 45: 8, 47: 8, 46: 8, 49: 7, 50: 7}), 'PASS': Counter({37: 2, 39: 2, 40: 2, 41: 2, 42: 2, 43: 2, 44: 2, 45: 2, 47: 2, 46: 2, 49: 2, 50: 2})})
37 {37: 0.8944271909999159, 39: 0.8944271909999159, 40: 0.8944271909999159, 41: 0.8944271909999159, 42: 0.8944271909999159, 43: 0.8944271909999159, 44: 0.8944271909999159, 45: 0.8944271909999159, 47: 0.8944271909999159, 46: 0.8944271909999159, 49: 0.7826237921249264, 50: 0.7826237921249264} ['38', '47', '49']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAKE_LARGEST_PALINDROME_CHANGING_K_DIGITS.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({59: 4, 60: 4, 61: 4, 62: 4, 63: 4, 64: 4, 65: 4, 66: 4, 67: 4, 68: 4, 69: 4, 71: 4, 97: 4}), 'FAIL': Counter({59: 6, 60: 6, 61: 6, 62: 6, 63: 6, 64: 6, 68: 6, 69: 6, 71: 6, 72: 6, 73: 6, 74: 6, 75: 6, 78: 6, 88: 6, 89: 6, 91: 6, 92: 6, 96: 6, 97: 6, 65: 5, 66: 5, 67: 5, 79: 5, 83: 5, 87: 5, 84: 4, 85: 4, 76: 3, 77: 3})})
59 {59: 0.7745966692414834, 60: 0.7745966692414834, 61: 0.7745966692414834, 62: 0.7745966692414834, 63: 0.7745966692414834, 64: 0.7745966692414834, 65: 0.6454972243679028, 66: 0.6454972243679028, 67: 0.6454972243679028, 68: 0.7745966692414834, 69: 0.7745966692414834, 71: 0.7745966692414834, 72: 0.7745966692414834, 73: 0.7745966692414834, 74: 0.7745966692414834, 75: 0.7745966692414834, 78: 0.7745966692414834, 79: 0.6454972243679028, 83: 0.6454972243679028, 84: 0.5163977794943222, 85: 0.5163977794943222, 87: 0.6454972243679028, 88: 0.7745966692414834, 89: 0.7745966692414834, 76: 0.3872983346207417, 77: 0.3872983346207417, 91: 0.7745966692414834, 92: 0.7745966692414834, 96: 0.7745966692414834, 97: 0.7745966692414834} ['60']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SIZE_SUBARRAY_MAXIMUM_SUM.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({43: 8, 44: 8, 45: 8, 47: 8, 48: 8, 53: 8, 57: 8, 46: 8, 58: 6, 54: 1, 55: 1}), 'PASS': Counter({43: 2, 44: 2, 45: 2, 47: 2, 48: 2, 53: 2, 54: 2, 55: 2, 57: 2, 46: 2, 58: 2})})
43 {43: 0.8944271909999159, 44: 0.8944271909999159, 45: 0.8944271909999159, 47: 0.8944271909999159, 48: 0.8944271909999159, 53: 0.8944271909999159, 57: 0.8944271909999159, 46: 0.8944271909999159, 58: 0.6708203932499369, 54: 0.11180339887498948, 55: 0.11180339887498948} ['43']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/UNBOUNDED_KNAPSACK_REPETITION_ITEMS_ALLOWED.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({36: 9, 37: 9, 38: 9, 40: 9, 41: 9, 43: 9, 45: 9, 42: 9, 46: 8, 39: 8, 44: 4, 47: 2, 48: 2}), 'PASS': Counter({36: 1, 37: 1, 38: 1, 40: 1, 41: 1, 43: 1, 44: 1, 45: 1, 42: 1, 46: 1, 39: 1})})
36 {36: 0.9486832980505138, 37: 0.9486832980505138, 38: 0.9486832980505138, 40: 0.9486832980505138, 41: 0.9486832980505138, 43: 0.9486832980505138, 45: 0.9486832980505138, 42: 0.9486832980505138, 46: 0.8432740427115678, 39: 0.8432740427115678, 47: 0.21081851067789195, 48: 0.21081851067789195, 44: 0.4216370213557839} ['36']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DICE_THROW_PROBLEM_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({41: 10, 42: 10, 43: 10, 44: 10, 46: 10, 47: 10, 49: 10, 50: 10, 53: 10, 48: 10, 54: 3, 45: 3, 51: 1}), 'PASS': Counter()})
41 {41: 1.0, 42: 1.0, 43: 1.0, 44: 1.0, 46: 1.0, 47: 1.0, 49: 1.0, 50: 1.0, 53: 1.0, 48: 1.0, 54: 0.3, 45: 0.3, 51: 0.1} ['41']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SPACE_OPTIMIZED_DP_SOLUTION_0_1_KNAPSACK_PROBLEM_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({35: 8, 36: 8, 37: 8, 38: 8, 40: 8, 41: 8, 43: 8, 39: 8, 42: 6, 44: 3, 45: 3}), 'PASS': Counter({35: 2, 36: 2, 37: 2, 38: 2, 40: 2, 41: 2, 43: 2, 42: 2, 39: 1})})
35 {35: 0.8944271909999159, 36: 0.8944271909999159, 37: 0.8944271909999159, 38: 0.8944271909999159, 40: 0.8944271909999159, 41: 0.8944271909999159, 43: 0.8944271909999159, 39: 0.8944271909999159, 44: 0.33541019662496846, 45: 0.33541019662496846, 42: 0.6708203932499369} ['36']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_WAYS_DIVIDE_CIRCLE_USING_N_NON_INTERSECTING_CHORDS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({42: 10, 43: 10, 44: 10, 45: 10, 46: 10, 47: 10, 49: 10, 50: 10, 52: 10, 51: 10, 53: 10, 48: 10}), 'PASS': Counter()})
42 {42: 1.0, 43: 1.0, 44: 1.0, 45: 1.0, 46: 1.0, 47: 1.0, 49: 1.0, 50: 1.0, 52: 1.0, 51: 1.0, 53: 1.0, 48: 1.0} ['43']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_SUBARRAYS_WITH_SAME_EVEN_AND_ODD_ELEMENTS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({48: 10, 49: 10, 50: 10, 51: 10, 52: 10, 53: 10, 54: 10, 56: 10, 59: 10, 67: 10, 55: 10, 58: 10, 60: 9, 61: 9, 62: 9, 57: 7, 68: 5, 69: 5, 64: 4, 65: 4}), 'PASS': Counter()})
48 {48: 1.0, 49: 1.0, 50: 1.0, 51: 1.0, 52: 1.0, 53: 1.0, 54: 1.0, 56: 1.0, 57: 0.7, 59: 1.0, 64: 0.4, 65: 0.4, 67: 1.0, 55: 1.0, 58: 1.0, 60: 0.9, 61: 0.9, 62: 0.9, 68: 0.5, 69: 0.5} ['50', '51']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/LARGEST_SUBSEQUENCE_GCD_GREATER_1.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({41: 9, 42: 9, 43: 9, 44: 9, 46: 6, 47: 6, 48: 6, 50: 6, 51: 6, 49: 6, 52: 5, 45: 5, 54: 3}), 'FAIL': Counter({41: 1, 42: 1, 43: 1, 44: 1, 54: 1})})
41 {41: 0.31622776601683794, 42: 0.31622776601683794, 43: 0.31622776601683794, 44: 0.31622776601683794, 54: 0.31622776601683794, 46: 0.0, 47: 0.0, 48: 0.0, 50: 0.0, 51: 0.0, 49: 0.0, 52: 0.0, 45: 0.0} ['42']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FUNCTION_COPY_STRING_ITERATIVE_RECURSIVE_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({31: 10, 32: 10, 34: 10, 33: 10, 35: 10}), 'PASS': Counter()})
31 {31: 1.0, 32: 1.0, 34: 1.0, 33: 1.0, 35: 1.0} ['32']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SUM_AREA_RECTANGLES_POSSIBLE_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({46: 4, 47: 4, 48: 4, 49: 4, 50: 4, 51: 4, 53: 4, 58: 4, 63: 4, 52: 4, 64: 3, 54: 3, 55: 3, 56: 3, 57: 3, 59: 3, 60: 3, 61: 3}), 'PASS': Counter({46: 5, 47: 5, 48: 5, 49: 5, 50: 5, 51: 5, 53: 5, 54: 5, 55: 5, 56: 5, 57: 5, 63: 5, 52: 5, 58: 5, 59: 5, 60: 5, 61: 5, 64: 3, 4294967295: 1})})
46 {46: 0.6324555320336759, 47: 0.6324555320336759, 48: 0.6324555320336759, 49: 0.6324555320336759, 50: 0.6324555320336759, 51: 0.6324555320336759, 53: 0.6324555320336759, 58: 0.6324555320336759, 63: 0.6324555320336759, 52: 0.6324555320336759, 64: 0.4743416490252569, 54: 0.4743416490252569, 55: 0.4743416490252569, 56: 0.4743416490252569, 57: 0.4743416490252569, 59: 0.4743416490252569, 60: 0.4743416490252569, 61: 0.4743416490252569, 4294967295: 0.0} ['46']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DIVIDE_LARGE_NUMBER_REPRESENTED_STRING.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({37: 5, 38: 5, 39: 5, 40: 5, 41: 5, 44: 5, 45: 5, 46: 5, 47: 5, 49: 5, 50: 5, 51: 5, 42: 4}), 'PASS': Counter({37: 3, 38: 3, 39: 3, 40: 3, 41: 3, 42: 3, 44: 3, 45: 3, 49: 3, 51: 3})})
37 {37: 0.5976143046671968, 38: 0.5976143046671968, 39: 0.5976143046671968, 40: 0.5976143046671968, 41: 0.5976143046671968, 42: 0.47809144373375745, 44: 0.5976143046671968, 45: 0.5976143046671968, 46: 0.5976143046671968, 47: 0.5976143046671968, 49: 0.5976143046671968, 50: 0.5976143046671968, 51: 0.5976143046671968} ['45']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_PRODUCT_SUBSET_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({50: 9, 52: 9, 53: 9, 54: 9, 55: 9, 56: 9, 58: 9, 62: 9, 66: 9, 57: 9, 68: 6, 70: 6, 74: 6, 75: 6, 59: 3, 60: 3, 63: 2, 64: 2}), 'FAIL': Counter({50: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 58: 1, 62: 1, 63: 1, 64: 1, 66: 1, 57: 1, 68: 1, 70: 1, 71: 1, 72: 1, 74: 1, 75: 1})})
50 {50: 0.31622776601683794, 52: 0.31622776601683794, 53: 0.31622776601683794, 54: 0.31622776601683794, 55: 0.31622776601683794, 56: 0.31622776601683794, 58: 0.31622776601683794, 62: 0.31622776601683794, 63: 0.31622776601683794, 64: 0.31622776601683794, 66: 0.31622776601683794, 57: 0.31622776601683794, 68: 0.31622776601683794, 70: 0.31622776601683794, 71: 0.31622776601683794, 72: 0.31622776601683794, 74: 0.31622776601683794, 75: 0.31622776601683794, 59: 0.0, 60: 0.0} ['52']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FIND_EQUAL_POINT_STRING_BRACKETS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({54: 8, 55: 8, 56: 8, 57: 8, 58: 8, 59: 8, 60: 8, 63: 8, 66: 8, 67: 8, 69: 8, 75: 8, 68: 8, 76: 8, 77: 8, 79: 8, 85: 8, 78: 8, 86: 8, 89: 8, 73: 7, 83: 7, 92: 7, 93: 7, 95: 7, 94: 7, 98: 7, 97: 6, 70: 5, 71: 5, 80: 5, 81: 5, 64: 3, 61: 2, 90: 1}), 'PASS': Counter({54: 2, 55: 2, 56: 2, 57: 2, 58: 2, 59: 2, 60: 2, 61: 2, 63: 2, 64: 2, 66: 2, 67: 2, 69: 2, 73: 2, 75: 2, 68: 2, 76: 2, 77: 2, 79: 2, 85: 2, 78: 2, 83: 2, 86: 2, 89: 2, 92: 2, 93: 2, 95: 2, 94: 2, 96: 2, 97: 2, 98: 2, 80: 1, 81: 1})})
54 {54: 0.8944271909999159, 55: 0.8944271909999159, 56: 0.8944271909999159, 57: 0.8944271909999159, 58: 0.8944271909999159, 59: 0.8944271909999159, 60: 0.8944271909999159, 61: 0.22360679774997896, 63: 0.8944271909999159, 66: 0.8944271909999159, 67: 0.8944271909999159, 69: 0.8944271909999159, 70: 0.5590169943749475, 71: 0.5590169943749475, 75: 0.8944271909999159, 68: 0.8944271909999159, 73: 0.7826237921249264, 76: 0.8944271909999159, 77: 0.8944271909999159, 79: 0.8944271909999159, 80: 0.5590169943749475, 81: 0.5590169943749475, 85: 0.8944271909999159, 78: 0.8944271909999159, 83: 0.7826237921249264, 86: 0.8944271909999159, 89: 0.8944271909999159, 92: 0.7826237921249264, 93: 0.7826237921249264, 95: 0.7826237921249264, 94: 0.7826237921249264, 97: 0.6708203932499369, 98: 0.7826237921249264, 64: 0.33541019662496846, 90: 0.11180339887498948, 96: 0.0} ['55', '56']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/BREAKING_NUMBER_FIRST_PART_INTEGRAL_DIVISION_SECOND_POWER_10.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({40: 7, 41: 7, 42: 7, 43: 7, 44: 7, 46: 7, 47: 7, 48: 7, 49: 7, 51: 7, 52: 7, 45: 7, 53: 7}), 'FAIL': Counter({40: 3, 41: 3, 42: 3, 43: 3, 44: 3, 46: 3, 47: 3, 48: 3, 49: 3, 51: 3, 52: 3, 45: 3, 50: 3, 53: 3})})
40 {40: 0.5477225575051661, 41: 0.5477225575051661, 42: 0.5477225575051661, 43: 0.5477225575051661, 44: 0.5477225575051661, 46: 0.5477225575051661, 47: 0.5477225575051661, 48: 0.5477225575051661, 49: 0.5477225575051661, 51: 0.5477225575051661, 52: 0.5477225575051661, 45: 0.5477225575051661, 50: 0.5477225575051661, 53: 0.5477225575051661} ['48']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DIFFERENT_WAYS_SUM_N_USING_NUMBERS_GREATER_EQUAL_M.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({41: 8, 42: 8, 43: 8, 44: 8, 46: 4, 47: 4, 49: 4, 50: 4, 53: 4, 48: 4, 55: 4, 56: 4, 51: 2, 54: 2, 45: 2}), 'PASS': Counter({41: 2, 42: 2, 43: 2, 44: 2, 55: 2, 56: 2})})
41 {41: 0.8944271909999159, 42: 0.8944271909999159, 43: 0.8944271909999159, 44: 0.8944271909999159, 46: 0.4472135954999579, 47: 0.4472135954999579, 49: 0.4472135954999579, 50: 0.4472135954999579, 53: 0.4472135954999579, 48: 0.4472135954999579, 51: 0.22360679774997896, 54: 0.22360679774997896, 45: 0.22360679774997896, 55: 0.4472135954999579, 56: 0.4472135954999579} ['41']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SPACE_OPTIMIZED_DP_SOLUTION_0_1_KNAPSACK_PROBLEM.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({47: 10, 48: 10, 49: 10, 50: 10, 51: 10, 58: 10, 59: 10, 63: 10, 52: 10, 53: 10, 56: 9, 60: 6, 54: 5, 65: 2, 66: 2}), 'PASS': Counter()})
47 {47: 1.0, 48: 1.0, 49: 1.0, 50: 1.0, 51: 1.0, 58: 1.0, 59: 1.0, 60: 0.6, 63: 1.0, 52: 1.0, 53: 1.0, 54: 0.5, 56: 0.9, 65: 0.2, 66: 0.2} ['47']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_AREA_RECTANGLE_PICKING_FOUR_SIDES_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({34: 5, 35: 5, 36: 5, 37: 5, 39: 5, 38: 5, 41: 5, 40: 4}), 'FAIL': Counter({34: 5, 35: 5, 36: 5, 37: 5, 39: 5, 40: 5, 38: 5, 41: 5})})
34 {34: 0.7071067811865475, 35: 0.7071067811865475, 36: 0.7071067811865475, 37: 0.7071067811865475, 39: 0.7071067811865475, 40: 0.7071067811865475, 38: 0.7071067811865475, 41: 0.7071067811865475} ['34']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FORM_MINIMUM_NUMBER_FROM_GIVEN_SEQUENCE_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({44: 3, 45: 3, 46: 3, 47: 3, 48: 3, 49: 3, 50: 3, 52: 3, 61: 3, 51: 3, 53: 3, 54: 3, 56: 3, 57: 3, 59: 3, 55: 3, 60: 3, 62: 3, 63: 3}), 'PASS': Counter()})
44 {44: 0.3, 45: 0.3, 46: 0.3, 47: 0.3, 48: 0.3, 49: 0.3, 50: 0.3, 52: 0.3, 61: 0.3, 51: 0.3, 53: 0.3, 54: 0.3, 56: 0.3, 57: 0.3, 59: 0.3, 55: 0.3, 60: 0.3, 62: 0.3, 63: 0.3} ['47']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SORT_EVEN_PLACED_ELEMENTS_INCREASING_ODD_PLACED_DECREASING_ORDER.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({44: 10, 45: 10, 46: 10, 47: 10, 49: 10, 50: 10, 53: 10, 48: 10, 52: 10, 54: 10, 55: 10, 56: 10, 57: 10, 58: 10, 60: 10, 59: 10, 61: 10, 62: 10, 64: 10, 63: 10, 65: 10}), 'PASS': Counter()})
44 {44: 1.0, 45: 1.0, 46: 1.0, 47: 1.0, 49: 1.0, 50: 1.0, 53: 1.0, 48: 1.0, 52: 1.0, 54: 1.0, 55: 1.0, 56: 1.0, 57: 1.0, 58: 1.0, 60: 1.0, 59: 1.0, 61: 1.0, 62: 1.0, 64: 1.0, 63: 1.0, 65: 1.0} ['55']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MULTIPLY_LARGE_NUMBERS_REPRESENTED_AS_STRINGS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({57: 10, 58: 10, 59: 10, 61: 10, 62: 10, 63: 10, 64: 10, 65: 10, 67: 10, 68: 10, 69: 10, 70: 10, 71: 10, 73: 10, 74: 10, 75: 10, 76: 10, 77: 10, 72: 10, 79: 10, 81: 10, 66: 10, 80: 8, 83: 1, 84: 1, 86: 1, 88: 1, 89: 1, 90: 1}), 'PASS': Counter()})
57 {57: 1.0, 58: 1.0, 59: 1.0, 61: 1.0, 62: 1.0, 63: 1.0, 64: 1.0, 65: 1.0, 67: 1.0, 68: 1.0, 69: 1.0, 70: 1.0, 71: 1.0, 73: 1.0, 74: 1.0, 75: 1.0, 76: 1.0, 77: 1.0, 72: 1.0, 79: 1.0, 81: 1.0, 66: 1.0, 80: 0.8, 83: 0.1, 84: 0.1, 86: 0.1, 88: 0.1, 89: 0.1, 90: 0.1} ['90']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_PROFIT_BY_BUYING_AND_SELLING_A_SHARE_AT_MOST_K_TIMES_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({46: 10, 47: 10, 48: 10, 50: 10, 49: 10, 52: 10, 53: 10, 55: 10, 54: 10, 57: 5, 58: 5, 60: 5, 61: 5, 62: 5, 64: 5, 65: 5, 63: 5, 67: 4, 59: 4, 68: 1, 69: 1}), 'PASS': Counter()})
46 {46: 1.0, 47: 1.0, 48: 1.0, 50: 1.0, 49: 1.0, 52: 1.0, 53: 1.0, 55: 1.0, 54: 1.0, 57: 0.5, 58: 0.5, 60: 0.5, 61: 0.5, 62: 0.5, 64: 0.5, 65: 0.5, 63: 0.5, 67: 0.4, 59: 0.4, 68: 0.1, 69: 0.1} ['46', '60']
Got it right 10 times.
Testing op2
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_SUM_ABSOLUTE_DIFFERENCE_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({43: 7, 44: 7, 45: 7, 46: 7, 47: 7, 49: 7, 50: 7, 51: 7, 48: 7, 52: 7, 53: 7, 54: 7, 56: 7, 55: 7, 57: 1, 58: 1, 59: 1}), 'PASS': Counter({43: 3, 44: 3, 45: 3, 46: 3, 47: 3, 49: 3, 50: 3, 51: 3, 48: 3, 52: 3, 53: 3, 54: 3, 56: 3, 55: 3})})
43 {43: 6.25, 44: 6.25, 45: 6.25, 46: 6.25, 47: 6.25, 49: 6.25, 50: 6.25, 51: 6.25, 48: 6.25, 52: 6.25, 53: 6.25, 54: 6.25, 56: 6.25, 55: 6.25, 57: 1.0, 58: 1.0, 59: 1.0} ['45']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DICE_THROW_PROBLEM.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({40: 10, 41: 10, 42: 10, 44: 10, 43: 10, 46: 6, 47: 6, 49: 6, 50: 6, 52: 6, 53: 6, 57: 6, 51: 6, 55: 6, 54: 6, 58: 1, 48: 1}), 'PASS': Counter()})
40 {40: 10.0, 41: 10.0, 42: 10.0, 44: 10.0, 43: 10.0, 46: 6.0, 47: 6.0, 49: 6.0, 50: 6.0, 52: 6.0, 53: 6.0, 57: 6.0, 51: 6.0, 55: 6.0, 54: 6.0, 58: 1.0, 48: 1.0} ['40']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_SUM_ALTERNATING_SUBSEQUENCE_SUM.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({55: 9, 57: 9, 58: 9, 59: 9, 60: 9, 61: 9, 62: 9, 64: 9, 65: 9, 67: 9, 71: 9, 72: 9, 66: 9, 73: 9, 63: 9, 68: 4, 69: 4, 70: 4}), 'PASS': Counter({55: 1, 56: 1})})
57 {55: 8.5, 57: 9.0, 58: 9.0, 59: 9.0, 60: 9.0, 61: 9.0, 62: 9.0, 64: 9.0, 65: 9.0, 67: 9.0, 71: 9.0, 72: 9.0, 66: 9.0, 73: 9.0, 63: 9.0, 68: 4.0, 69: 4.0, 70: 4.0, 56: -0.5} ['57', '58']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MINIMUM_TIME_WRITE_CHARACTERS_USING_INSERT_DELETE_COPY_OPERATION.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({38: 10, 40: 10, 42: 10, 43: 10, 44: 10, 46: 10, 50: 10, 52: 10, 45: 10, 47: 10, 48: 10, 53: 1, 54: 1}), 'PASS': Counter()})
38 {38: 10.0, 40: 10.0, 42: 10.0, 43: 10.0, 44: 10.0, 46: 10.0, 50: 10.0, 52: 10.0, 45: 10.0, 47: 10.0, 48: 10.0, 53: 1.0, 54: 1.0} ['42']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/CHECK_POSSIBLE_TRANSFORM_ONE_STRING_ANOTHER.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({53: 3, 54: 3, 55: 3, 56: 3, 57: 3, 59: 3, 60: 3, 62: 3, 61: 3, 63: 3, 58: 3, 64: 1, 65: 1, 66: 1, 68: 1, 69: 1, 71: 1, 72: 1, 75: 1, 78: 1, 79: 1, 70: 1}), 'PASS': Counter({53: 7, 54: 7, 55: 7, 56: 7, 57: 7, 59: 7, 60: 7, 62: 7, 61: 7, 63: 7, 58: 7, 64: 1, 65: 1, 66: 1, 68: 1, 69: 1, 71: 1, 72: 1, 75: 1, 78: 1, 79: 1, 70: 1, 80: 1, 67: 1})})
53 {53: 2.125, 54: 2.125, 55: 2.125, 56: 2.125, 57: 2.125, 59: 2.125, 60: 2.125, 62: 2.125, 61: 2.125, 63: 2.125, 58: 2.125, 64: 0.875, 65: 0.875, 66: 0.875, 68: 0.875, 69: 0.875, 71: 0.875, 72: 0.875, 75: 0.875, 78: 0.875, 79: 0.875, 70: 0.875, 80: -0.125, 67: -0.125} ['75']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_NUMBERS_CAN_CONSTRUCTED_USING_TWO_NUMBERS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({41: 7, 42: 7, 45: 7, 46: 7, 48: 7, 49: 7, 50: 7, 52: 7, 53: 7, 56: 7, 59: 7, 61: 7, 51: 7, 62: 4, 63: 4, 43: 3, 57: 3, 54: 1}), 'PASS': Counter({41: 3, 42: 3, 45: 3, 48: 3, 49: 3, 50: 3, 62: 2, 63: 2, 46: 1, 52: 1, 53: 1, 56: 1, 57: 1, 59: 1, 61: 1, 51: 1})})
46 {41: 6.25, 42: 6.25, 43: 3.0, 45: 6.25, 46: 6.75, 48: 6.25, 49: 6.25, 50: 6.25, 52: 6.75, 53: 6.75, 56: 6.75, 59: 6.75, 61: 6.75, 51: 6.75, 62: 3.5, 63: 3.5, 57: 2.75, 54: 1.0} ['41']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/PERMUTE_TWO_ARRAYS_SUM_EVERY_PAIR_GREATER_EQUAL_K.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({33: 9, 34: 9, 35: 9, 36: 9, 38: 9, 41: 9, 39: 6, 37: 3, 40: 3}), 'FAIL': Counter({33: 1, 34: 1, 35: 1, 36: 1, 38: 1, 39: 1, 41: 1})})
39 {33: 0.09999999999999998, 34: 0.09999999999999998, 35: 0.09999999999999998, 36: 0.09999999999999998, 38: 0.09999999999999998, 39: 0.4, 41: 0.09999999999999998, 37: -0.3, 40: -0.3} ['34']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FORM_SMALLEST_NUMBER_USING_ONE_SWAP_OPERATION.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({66: 10, 67: 10, 68: 10, 69: 10, 70: 10, 71: 10, 72: 10, 82: 10, 83: 10, 84: 10, 91: 9, 98: 9, 99: 9, 85: 8, 86: 8, 87: 8, 88: 8, 90: 8, 101: 7, 108: 7, 100: 7, 110: 7, 111: 7, 74: 6, 78: 6, 79: 6, 81: 6, 73: 6}), 'PASS': Counter()})
66 {66: 10.0, 67: 10.0, 68: 10.0, 69: 10.0, 70: 10.0, 71: 10.0, 72: 10.0, 74: 6.0, 78: 6.0, 79: 6.0, 81: 6.0, 73: 6.0, 82: 10.0, 83: 10.0, 84: 10.0, 85: 8.0, 86: 8.0, 87: 8.0, 88: 8.0, 90: 8.0, 91: 9.0, 98: 9.0, 99: 9.0, 101: 7.0, 108: 7.0, 100: 7.0, 110: 7.0, 111: 7.0} ['110']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FIND_PAIR_MAXIMUM_GCD_ARRAY_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({54: 7, 55: 7, 56: 7, 58: 7, 57: 7, 60: 5, 61: 5, 62: 5, 64: 5, 63: 5, 66: 3, 67: 3, 68: 3, 70: 3, 71: 3, 72: 3, 73: 3, 75: 3, 76: 3, 80: 2, 69: 2, 77: 1, 83: 1}), 'PASS': Counter({54: 3, 55: 3, 56: 3, 58: 3, 57: 3, 60: 3, 61: 3, 62: 3, 64: 3, 63: 3, 66: 2, 67: 2, 68: 2, 70: 2, 71: 2, 72: 2, 73: 2, 75: 2, 76: 2, 80: 2, 69: 2, 82: 2, 83: 2})})
54 {54: 6.25, 55: 6.25, 56: 6.25, 58: 6.25, 57: 6.25, 60: 4.25, 61: 4.25, 62: 4.25, 64: 4.25, 63: 4.25, 66: 2.5, 67: 2.5, 68: 2.5, 70: 2.5, 71: 2.5, 72: 2.5, 73: 2.5, 75: 2.5, 76: 2.5, 80: 1.5, 69: 1.5, 77: 1.0, 83: 0.5, 82: -0.5} ['60']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FIND_PAIR_MAXIMUM_GCD_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({48: 6, 49: 6, 50: 6, 52: 6, 51: 6, 54: 4, 55: 3, 56: 3, 58: 3, 59: 3, 68: 3, 57: 3, 61: 2, 62: 2, 63: 2, 64: 2, 66: 2, 67: 2, 60: 2}), 'PASS': Counter({48: 4, 49: 4, 50: 4, 52: 4, 51: 4, 54: 3, 55: 3, 56: 3, 58: 3, 59: 3, 68: 3, 57: 3, 61: 2, 62: 2, 63: 2, 66: 2, 67: 2, 60: 2, 64: 1})})
48 {48: 5.2, 49: 5.2, 50: 5.2, 52: 5.2, 51: 5.2, 54: 3.4, 55: 2.4, 56: 2.4, 58: 2.4, 59: 2.4, 61: 1.6, 62: 1.6, 63: 1.6, 64: 1.8, 66: 1.6, 67: 1.6, 60: 1.6, 68: 2.4, 57: 2.4} ['54']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_WORDS_APPEAR_EXACTLY_TWO_TIMES_ARRAY_WORDS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({36: 9, 37: 9, 38: 9, 40: 9, 41: 9, 42: 9, 43: 9, 47: 9, 39: 9, 45: 9, 48: 7, 49: 7, 50: 7, 52: 7, 55: 7, 51: 7, 56: 6, 57: 6}), 'PASS': Counter({36: 1, 37: 1, 38: 1, 40: 1, 41: 1, 42: 1, 43: 1, 47: 1, 39: 1, 48: 1, 49: 1, 50: 1, 52: 1, 55: 1, 51: 1})})
45 {36: 8.5, 37: 8.5, 38: 8.5, 40: 8.5, 41: 8.5, 42: 8.5, 43: 8.5, 47: 8.5, 39: 8.5, 45: 9.0, 48: 6.5, 49: 6.5, 50: 6.5, 52: 6.5, 55: 6.5, 51: 6.5, 56: 6.0, 57: 6.0} ['40']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_INDEX_PAIRS_EQUAL_ELEMENTS_ARRAY_1.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({39: 4, 40: 4, 41: 4, 50: 4, 51: 4, 52: 4, 43: 3, 44: 3, 45: 3, 49: 3, 42: 3, 54: 3, 55: 3, 53: 3, 57: 3, 58: 3}), 'FAIL': Counter({39: 6, 40: 6, 41: 6, 43: 6, 44: 6, 45: 6, 49: 6, 42: 6, 47: 6, 50: 5, 51: 5, 52: 5, 54: 5, 55: 5, 53: 4, 57: 1, 58: 1})})
47 {39: 5.2, 40: 5.2, 41: 5.2, 43: 5.4, 44: 5.4, 45: 5.4, 49: 5.4, 42: 5.4, 47: 6.0, 50: 4.2, 51: 4.2, 52: 4.2, 54: 4.4, 55: 4.4, 53: 3.4, 57: 0.4, 58: 0.4} ['43']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/CHOCOLATE_DISTRIBUTION_PROBLEM.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({43: 7, 45: 7, 46: 7, 61: 7, 48: 4, 49: 4, 50: 4, 51: 4, 53: 4, 54: 4, 55: 4, 56: 4, 57: 4, 59: 4, 52: 4, 60: 4, 47: 3}), 'FAIL': Counter({43: 3, 45: 3, 46: 3, 48: 3, 49: 3, 50: 3, 51: 3, 53: 3, 54: 3, 55: 3, 56: 3, 57: 3, 59: 3, 52: 3, 60: 3, 61: 3})})
48 {43: 2.125, 45: 2.125, 46: 2.125, 48: 2.5, 49: 2.5, 50: 2.5, 51: 2.5, 53: 2.5, 54: 2.5, 55: 2.5, 56: 2.5, 57: 2.5, 59: 2.5, 52: 2.5, 60: 2.5, 61: 2.125, 47: -0.375} ['45']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/PANGRAM_CHECKING.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({41: 9, 42: 9, 43: 9, 45: 9, 51: 9, 44: 9, 48: 8, 46: 6, 47: 6, 49: 6, 53: 4, 54: 4, 56: 4, 57: 4, 59: 4, 55: 2}), 'FAIL': Counter({41: 1, 42: 1, 43: 1, 45: 1, 46: 1, 47: 1, 51: 1, 44: 1, 48: 1, 49: 1})})
46 {41: 0.09999999999999998, 42: 0.09999999999999998, 43: 0.09999999999999998, 45: 0.09999999999999998, 46: 0.4, 47: 0.4, 51: 0.09999999999999998, 44: 0.09999999999999998, 48: 0.19999999999999996, 49: 0.4, 53: -0.4, 54: -0.4, 56: -0.4, 57: -0.4, 59: -0.4, 55: -0.2} ['40']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MINIMUM_COST_MAKE_ARRAY_SIZE_1_REMOVING_LARGER_PAIRS.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({28: 8, 29: 8, 30: 8, 36: 8, 32: 1, 35: 1, 31: 1, 33: 1}), 'FAIL': Counter({28: 2, 29: 2, 30: 2, 36: 1, 32: 1, 33: 1, 35: 1, 31: 1})})
28 {28: 1.1111111111111112, 29: 1.1111111111111112, 30: 1.1111111111111112, 36: 0.11111111111111116, 32: 0.8888888888888888, 33: 0.8888888888888888, 35: 0.8888888888888888, 31: 0.8888888888888888} ['30']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SUM_LARGEST_PRIME_FACTOR_NUMBER_LESS_EQUAL_N.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({46: 10, 47: 10, 48: 10, 49: 10, 50: 10, 52: 10, 53: 9, 54: 9, 56: 9, 55: 9, 59: 6, 51: 6, 58: 5, 60: 3, 61: 3, 63: 3, 64: 3, 65: 3, 69: 3, 62: 3, 70: 2, 71: 2, 67: 2}), 'PASS': Counter()})
46 {46: 10.0, 47: 10.0, 48: 10.0, 49: 10.0, 50: 10.0, 52: 10.0, 59: 6.0, 51: 6.0, 60: 3.0, 61: 3.0, 63: 3.0, 64: 3.0, 65: 3.0, 69: 3.0, 62: 3.0, 70: 2.0, 71: 2.0, 53: 9.0, 54: 9.0, 56: 9.0, 55: 9.0, 58: 5.0, 67: 2.0} ['47']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_NUMBER_CHOCOLATES_DISTRIBUTED_EQUALLY_AMONG_K_STUDENTS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({45: 10, 46: 10, 48: 10, 49: 10}), 'PASS': Counter()})
45 {45: 10.0, 46: 10.0, 48: 10.0, 49: 10.0} ['46']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MINIMUM_SUM_SUBSEQUENCE_LEAST_ONE_EVERY_FOUR_CONSECUTIVE_ELEMENTS_PICKED_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({37: 8, 39: 8, 40: 8, 41: 8, 42: 8, 43: 8, 44: 8, 45: 8, 47: 8, 46: 8, 49: 7, 50: 7}), 'PASS': Counter({37: 2, 39: 2, 40: 2, 41: 2, 42: 2, 43: 2, 44: 2, 45: 2, 47: 2, 46: 2, 49: 2, 50: 2})})
37 {37: 7.333333333333333, 39: 7.333333333333333, 40: 7.333333333333333, 41: 7.333333333333333, 42: 7.333333333333333, 43: 7.333333333333333, 44: 7.333333333333333, 45: 7.333333333333333, 47: 7.333333333333333, 46: 7.333333333333333, 49: 6.333333333333333, 50: 6.333333333333333} ['38', '47', '49']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAKE_LARGEST_PALINDROME_CHANGING_K_DIGITS.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({59: 4, 60: 4, 61: 4, 62: 4, 63: 4, 64: 4, 65: 4, 66: 4, 67: 4, 68: 4, 69: 4, 71: 4, 97: 4}), 'FAIL': Counter({59: 6, 60: 6, 61: 6, 62: 6, 63: 6, 64: 6, 68: 6, 69: 6, 71: 6, 72: 6, 73: 6, 74: 6, 75: 6, 78: 6, 88: 6, 89: 6, 91: 6, 92: 6, 96: 6, 97: 6, 65: 5, 66: 5, 67: 5, 79: 5, 83: 5, 87: 5, 84: 4, 85: 4, 76: 3, 77: 3})})
72 {59: 5.2, 60: 5.2, 61: 5.2, 62: 5.2, 63: 5.2, 64: 5.2, 65: 4.2, 66: 4.2, 67: 4.2, 68: 5.2, 69: 5.2, 71: 5.2, 72: 6.0, 73: 6.0, 74: 6.0, 75: 6.0, 78: 6.0, 79: 5.0, 83: 5.0, 84: 4.0, 85: 4.0, 87: 5.0, 88: 6.0, 89: 6.0, 76: 3.0, 77: 3.0, 91: 6.0, 92: 6.0, 96: 6.0, 97: 5.2} ['60']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SIZE_SUBARRAY_MAXIMUM_SUM.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({43: 8, 44: 8, 45: 8, 47: 8, 48: 8, 53: 8, 57: 8, 46: 8, 58: 6, 54: 1, 55: 1}), 'PASS': Counter({43: 2, 44: 2, 45: 2, 47: 2, 48: 2, 53: 2, 54: 2, 55: 2, 57: 2, 46: 2, 58: 2})})
43 {43: 7.333333333333333, 44: 7.333333333333333, 45: 7.333333333333333, 47: 7.333333333333333, 48: 7.333333333333333, 53: 7.333333333333333, 57: 7.333333333333333, 46: 7.333333333333333, 58: 5.333333333333333, 54: 0.33333333333333337, 55: 0.33333333333333337} ['43']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/UNBOUNDED_KNAPSACK_REPETITION_ITEMS_ALLOWED.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({36: 9, 37: 9, 38: 9, 40: 9, 41: 9, 43: 9, 45: 9, 42: 9, 46: 8, 39: 8, 44: 4, 47: 2, 48: 2}), 'PASS': Counter({36: 1, 37: 1, 38: 1, 40: 1, 41: 1, 43: 1, 44: 1, 45: 1, 42: 1, 46: 1, 39: 1})})
36 {36: 8.5, 37: 8.5, 38: 8.5, 40: 8.5, 41: 8.5, 43: 8.5, 45: 8.5, 42: 8.5, 46: 7.5, 39: 7.5, 47: 2.0, 48: 2.0, 44: 3.5} ['36']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DICE_THROW_PROBLEM_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({41: 10, 42: 10, 43: 10, 44: 10, 46: 10, 47: 10, 49: 10, 50: 10, 53: 10, 48: 10, 54: 3, 45: 3, 51: 1}), 'PASS': Counter()})
41 {41: 10.0, 42: 10.0, 43: 10.0, 44: 10.0, 46: 10.0, 47: 10.0, 49: 10.0, 50: 10.0, 53: 10.0, 48: 10.0, 54: 3.0, 45: 3.0, 51: 1.0} ['41']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SPACE_OPTIMIZED_DP_SOLUTION_0_1_KNAPSACK_PROBLEM_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({35: 8, 36: 8, 37: 8, 38: 8, 40: 8, 41: 8, 43: 8, 39: 8, 42: 6, 44: 3, 45: 3}), 'PASS': Counter({35: 2, 36: 2, 37: 2, 38: 2, 40: 2, 41: 2, 43: 2, 42: 2, 39: 1})})
39 {35: 7.333333333333333, 36: 7.333333333333333, 37: 7.333333333333333, 38: 7.333333333333333, 40: 7.333333333333333, 41: 7.333333333333333, 43: 7.333333333333333, 39: 7.666666666666667, 44: 3.0, 45: 3.0, 42: 5.333333333333333} ['36']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_WAYS_DIVIDE_CIRCLE_USING_N_NON_INTERSECTING_CHORDS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({42: 10, 43: 10, 44: 10, 45: 10, 46: 10, 47: 10, 49: 10, 50: 10, 52: 10, 51: 10, 53: 10, 48: 10}), 'PASS': Counter()})
42 {42: 10.0, 43: 10.0, 44: 10.0, 45: 10.0, 46: 10.0, 47: 10.0, 49: 10.0, 50: 10.0, 52: 10.0, 51: 10.0, 53: 10.0, 48: 10.0} ['43']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_SUBARRAYS_WITH_SAME_EVEN_AND_ODD_ELEMENTS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({48: 10, 49: 10, 50: 10, 51: 10, 52: 10, 53: 10, 54: 10, 56: 10, 59: 10, 67: 10, 55: 10, 58: 10, 60: 9, 61: 9, 62: 9, 57: 7, 68: 5, 69: 5, 64: 4, 65: 4}), 'PASS': Counter()})
48 {48: 10.0, 49: 10.0, 50: 10.0, 51: 10.0, 52: 10.0, 53: 10.0, 54: 10.0, 56: 10.0, 57: 7.0, 59: 10.0, 64: 4.0, 65: 4.0, 67: 10.0, 55: 10.0, 58: 10.0, 60: 9.0, 61: 9.0, 62: 9.0, 68: 5.0, 69: 5.0} ['50', '51']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/LARGEST_SUBSEQUENCE_GCD_GREATER_1.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({41: 9, 42: 9, 43: 9, 44: 9, 46: 6, 47: 6, 48: 6, 50: 6, 51: 6, 49: 6, 52: 5, 45: 5, 54: 3}), 'FAIL': Counter({41: 1, 42: 1, 43: 1, 44: 1, 54: 1})})
54 {41: 0.09999999999999998, 42: 0.09999999999999998, 43: 0.09999999999999998, 44: 0.09999999999999998, 54: 0.7, 46: -0.6, 47: -0.6, 48: -0.6, 50: -0.6, 51: -0.6, 49: -0.6, 52: -0.5, 45: -0.5} ['42']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FUNCTION_COPY_STRING_ITERATIVE_RECURSIVE_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({31: 10, 32: 10, 34: 10, 33: 10, 35: 10}), 'PASS': Counter()})
31 {31: 10.0, 32: 10.0, 34: 10.0, 33: 10.0, 35: 10.0} ['32']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SUM_AREA_RECTANGLES_POSSIBLE_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({46: 4, 47: 4, 48: 4, 49: 4, 50: 4, 51: 4, 53: 4, 58: 4, 63: 4, 52: 4, 64: 3, 54: 3, 55: 3, 56: 3, 57: 3, 59: 3, 60: 3, 61: 3}), 'PASS': Counter({46: 5, 47: 5, 48: 5, 49: 5, 50: 5, 51: 5, 53: 5, 54: 5, 55: 5, 56: 5, 57: 5, 63: 5, 52: 5, 58: 5, 59: 5, 60: 5, 61: 5, 64: 3, 4294967295: 1})})
46 {46: 3.2857142857142856, 47: 3.2857142857142856, 48: 3.2857142857142856, 49: 3.2857142857142856, 50: 3.2857142857142856, 51: 3.2857142857142856, 53: 3.2857142857142856, 58: 3.2857142857142856, 63: 3.2857142857142856, 52: 3.2857142857142856, 64: 2.5714285714285716, 54: 2.2857142857142856, 55: 2.2857142857142856, 56: 2.2857142857142856, 57: 2.2857142857142856, 59: 2.2857142857142856, 60: 2.2857142857142856, 61: 2.2857142857142856, 4294967295: -0.14285714285714285} ['46']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DIVIDE_LARGE_NUMBER_REPRESENTED_STRING.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({37: 5, 38: 5, 39: 5, 40: 5, 41: 5, 44: 5, 45: 5, 46: 5, 47: 5, 49: 5, 50: 5, 51: 5, 42: 4}), 'PASS': Counter({37: 3, 38: 3, 39: 3, 40: 3, 41: 3, 42: 3, 44: 3, 45: 3, 49: 3, 51: 3})})
46 {37: 4.25, 38: 4.25, 39: 4.25, 40: 4.25, 41: 4.25, 42: 3.25, 44: 4.25, 45: 4.25, 46: 5.0, 47: 5.0, 49: 4.25, 50: 5.0, 51: 4.25} ['45']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_PRODUCT_SUBSET_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({50: 9, 52: 9, 53: 9, 54: 9, 55: 9, 56: 9, 58: 9, 62: 9, 66: 9, 57: 9, 68: 6, 70: 6, 74: 6, 75: 6, 59: 3, 60: 3, 63: 2, 64: 2}), 'FAIL': Counter({50: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 58: 1, 62: 1, 63: 1, 64: 1, 66: 1, 57: 1, 68: 1, 70: 1, 71: 1, 72: 1, 74: 1, 75: 1})})
71 {50: 0.09999999999999998, 52: 0.09999999999999998, 53: 0.09999999999999998, 54: 0.09999999999999998, 55: 0.09999999999999998, 56: 0.09999999999999998, 58: 0.09999999999999998, 62: 0.09999999999999998, 63: 0.8, 64: 0.8, 66: 0.09999999999999998, 57: 0.09999999999999998, 68: 0.4, 70: 0.4, 71: 1.0, 72: 1.0, 74: 0.4, 75: 0.4, 59: -0.3, 60: -0.3} ['52']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FIND_EQUAL_POINT_STRING_BRACKETS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({54: 8, 55: 8, 56: 8, 57: 8, 58: 8, 59: 8, 60: 8, 63: 8, 66: 8, 67: 8, 69: 8, 75: 8, 68: 8, 76: 8, 77: 8, 79: 8, 85: 8, 78: 8, 86: 8, 89: 8, 73: 7, 83: 7, 92: 7, 93: 7, 95: 7, 94: 7, 98: 7, 97: 6, 70: 5, 71: 5, 80: 5, 81: 5, 64: 3, 61: 2, 90: 1}), 'PASS': Counter({54: 2, 55: 2, 56: 2, 57: 2, 58: 2, 59: 2, 60: 2, 61: 2, 63: 2, 64: 2, 66: 2, 67: 2, 69: 2, 73: 2, 75: 2, 68: 2, 76: 2, 77: 2, 79: 2, 85: 2, 78: 2, 83: 2, 86: 2, 89: 2, 92: 2, 93: 2, 95: 2, 94: 2, 96: 2, 97: 2, 98: 2, 80: 1, 81: 1})})
54 {54: 7.333333333333333, 55: 7.333333333333333, 56: 7.333333333333333, 57: 7.333333333333333, 58: 7.333333333333333, 59: 7.333333333333333, 60: 7.333333333333333, 61: 1.3333333333333335, 63: 7.333333333333333, 66: 7.333333333333333, 67: 7.333333333333333, 69: 7.333333333333333, 70: 5.0, 71: 5.0, 75: 7.333333333333333, 68: 7.333333333333333, 73: 6.333333333333333, 76: 7.333333333333333, 77: 7.333333333333333, 79: 7.333333333333333, 80: 4.666666666666667, 81: 4.666666666666667, 85: 7.333333333333333, 78: 7.333333333333333, 83: 6.333333333333333, 86: 7.333333333333333, 89: 7.333333333333333, 92: 6.333333333333333, 93: 6.333333333333333, 95: 6.333333333333333, 94: 6.333333333333333, 97: 5.333333333333333, 98: 6.333333333333333, 64: 2.3333333333333335, 90: 1.0, 96: -0.6666666666666666} ['55', '56']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/BREAKING_NUMBER_FIRST_PART_INTEGRAL_DIVISION_SECOND_POWER_10.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({40: 7, 41: 7, 42: 7, 43: 7, 44: 7, 46: 7, 47: 7, 48: 7, 49: 7, 51: 7, 52: 7, 45: 7, 53: 7}), 'FAIL': Counter({40: 3, 41: 3, 42: 3, 43: 3, 44: 3, 46: 3, 47: 3, 48: 3, 49: 3, 51: 3, 52: 3, 45: 3, 50: 3, 53: 3})})
50 {40: 2.125, 41: 2.125, 42: 2.125, 43: 2.125, 44: 2.125, 46: 2.125, 47: 2.125, 48: 2.125, 49: 2.125, 51: 2.125, 52: 2.125, 45: 2.125, 50: 3.0, 53: 2.125} ['48']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DIFFERENT_WAYS_SUM_N_USING_NUMBERS_GREATER_EQUAL_M.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({41: 8, 42: 8, 43: 8, 44: 8, 46: 4, 47: 4, 49: 4, 50: 4, 53: 4, 48: 4, 55: 4, 56: 4, 51: 2, 54: 2, 45: 2}), 'PASS': Counter({41: 2, 42: 2, 43: 2, 44: 2, 55: 2, 56: 2})})
41 {41: 7.333333333333333, 42: 7.333333333333333, 43: 7.333333333333333, 44: 7.333333333333333, 46: 4.0, 47: 4.0, 49: 4.0, 50: 4.0, 53: 4.0, 48: 4.0, 51: 2.0, 54: 2.0, 45: 2.0, 55: 3.3333333333333335, 56: 3.3333333333333335} ['41']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SPACE_OPTIMIZED_DP_SOLUTION_0_1_KNAPSACK_PROBLEM.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({47: 10, 48: 10, 49: 10, 50: 10, 51: 10, 58: 10, 59: 10, 63: 10, 52: 10, 53: 10, 56: 9, 60: 6, 54: 5, 65: 2, 66: 2}), 'PASS': Counter()})
47 {47: 10.0, 48: 10.0, 49: 10.0, 50: 10.0, 51: 10.0, 58: 10.0, 59: 10.0, 60: 6.0, 63: 10.0, 52: 10.0, 53: 10.0, 54: 5.0, 56: 9.0, 65: 2.0, 66: 2.0} ['47']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_AREA_RECTANGLE_PICKING_FOUR_SIDES_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({34: 5, 35: 5, 36: 5, 37: 5, 39: 5, 38: 5, 41: 5, 40: 4}), 'FAIL': Counter({34: 5, 35: 5, 36: 5, 37: 5, 39: 5, 40: 5, 38: 5, 41: 5})})
40 {34: 4.166666666666667, 35: 4.166666666666667, 36: 4.166666666666667, 37: 4.166666666666667, 39: 4.166666666666667, 40: 4.333333333333333, 38: 4.166666666666667, 41: 4.166666666666667} ['34']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FORM_MINIMUM_NUMBER_FROM_GIVEN_SEQUENCE_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({44: 3, 45: 3, 46: 3, 47: 3, 48: 3, 49: 3, 50: 3, 52: 3, 61: 3, 51: 3, 53: 3, 54: 3, 56: 3, 57: 3, 59: 3, 55: 3, 60: 3, 62: 3, 63: 3}), 'PASS': Counter()})
44 {44: 3.0, 45: 3.0, 46: 3.0, 47: 3.0, 48: 3.0, 49: 3.0, 50: 3.0, 52: 3.0, 61: 3.0, 51: 3.0, 53: 3.0, 54: 3.0, 56: 3.0, 57: 3.0, 59: 3.0, 55: 3.0, 60: 3.0, 62: 3.0, 63: 3.0} ['47']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SORT_EVEN_PLACED_ELEMENTS_INCREASING_ODD_PLACED_DECREASING_ORDER.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({44: 10, 45: 10, 46: 10, 47: 10, 49: 10, 50: 10, 53: 10, 48: 10, 52: 10, 54: 10, 55: 10, 56: 10, 57: 10, 58: 10, 60: 10, 59: 10, 61: 10, 62: 10, 64: 10, 63: 10, 65: 10}), 'PASS': Counter()})
44 {44: 10.0, 45: 10.0, 46: 10.0, 47: 10.0, 49: 10.0, 50: 10.0, 53: 10.0, 48: 10.0, 52: 10.0, 54: 10.0, 55: 10.0, 56: 10.0, 57: 10.0, 58: 10.0, 60: 10.0, 59: 10.0, 61: 10.0, 62: 10.0, 64: 10.0, 63: 10.0, 65: 10.0} ['55']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MULTIPLY_LARGE_NUMBERS_REPRESENTED_AS_STRINGS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({57: 10, 58: 10, 59: 10, 61: 10, 62: 10, 63: 10, 64: 10, 65: 10, 67: 10, 68: 10, 69: 10, 70: 10, 71: 10, 73: 10, 74: 10, 75: 10, 76: 10, 77: 10, 72: 10, 79: 10, 81: 10, 66: 10, 80: 8, 83: 1, 84: 1, 86: 1, 88: 1, 89: 1, 90: 1}), 'PASS': Counter()})
57 {57: 10.0, 58: 10.0, 59: 10.0, 61: 10.0, 62: 10.0, 63: 10.0, 64: 10.0, 65: 10.0, 67: 10.0, 68: 10.0, 69: 10.0, 70: 10.0, 71: 10.0, 73: 10.0, 74: 10.0, 75: 10.0, 76: 10.0, 77: 10.0, 72: 10.0, 79: 10.0, 81: 10.0, 66: 10.0, 80: 8.0, 83: 1.0, 84: 1.0, 86: 1.0, 88: 1.0, 89: 1.0, 90: 1.0} ['90']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_PROFIT_BY_BUYING_AND_SELLING_A_SHARE_AT_MOST_K_TIMES_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({46: 10, 47: 10, 48: 10, 50: 10, 49: 10, 52: 10, 53: 10, 55: 10, 54: 10, 57: 5, 58: 5, 60: 5, 61: 5, 62: 5, 64: 5, 65: 5, 63: 5, 67: 4, 59: 4, 68: 1, 69: 1}), 'PASS': Counter()})
46 {46: 10.0, 47: 10.0, 48: 10.0, 50: 10.0, 49: 10.0, 52: 10.0, 53: 10.0, 55: 10.0, 54: 10.0, 57: 5.0, 58: 5.0, 60: 5.0, 61: 5.0, 62: 5.0, 64: 5.0, 65: 5.0, 63: 5.0, 67: 4.0, 59: 4.0, 68: 1.0, 69: 1.0} ['46', '60']
Got it right 9 times.
Testing barinel
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_SUM_ABSOLUTE_DIFFERENCE_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({43: 7, 44: 7, 45: 7, 46: 7, 47: 7, 49: 7, 50: 7, 51: 7, 48: 7, 52: 7, 53: 7, 54: 7, 56: 7, 55: 7, 57: 1, 58: 1, 59: 1}), 'PASS': Counter({43: 3, 44: 3, 45: 3, 46: 3, 47: 3, 49: 3, 50: 3, 51: 3, 48: 3, 52: 3, 53: 3, 54: 3, 56: 3, 55: 3})})
57 {43: 0.7, 44: 0.7, 45: 0.7, 46: 0.7, 47: 0.7, 49: 0.7, 50: 0.7, 51: 0.7, 48: 0.7, 52: 0.7, 53: 0.7, 54: 0.7, 56: 0.7, 55: 0.7, 57: 1.0, 58: 1.0, 59: 1.0} ['45']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DICE_THROW_PROBLEM.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({40: 10, 41: 10, 42: 10, 44: 10, 43: 10, 46: 6, 47: 6, 49: 6, 50: 6, 52: 6, 53: 6, 57: 6, 51: 6, 55: 6, 54: 6, 58: 1, 48: 1}), 'PASS': Counter()})
40 {40: 1.0, 41: 1.0, 42: 1.0, 44: 1.0, 43: 1.0, 46: 1.0, 47: 1.0, 49: 1.0, 50: 1.0, 52: 1.0, 53: 1.0, 57: 1.0, 51: 1.0, 55: 1.0, 54: 1.0, 58: 1.0, 48: 1.0} ['40']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_SUM_ALTERNATING_SUBSEQUENCE_SUM.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({55: 9, 57: 9, 58: 9, 59: 9, 60: 9, 61: 9, 62: 9, 64: 9, 65: 9, 67: 9, 71: 9, 72: 9, 66: 9, 73: 9, 63: 9, 68: 4, 69: 4, 70: 4}), 'PASS': Counter({55: 1, 56: 1})})
57 {55: 0.9, 57: 1.0, 58: 1.0, 59: 1.0, 60: 1.0, 61: 1.0, 62: 1.0, 64: 1.0, 65: 1.0, 67: 1.0, 71: 1.0, 72: 1.0, 66: 1.0, 73: 1.0, 63: 1.0, 68: 1.0, 69: 1.0, 70: 1.0, 56: 0.0} ['57', '58']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MINIMUM_TIME_WRITE_CHARACTERS_USING_INSERT_DELETE_COPY_OPERATION.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({38: 10, 40: 10, 42: 10, 43: 10, 44: 10, 46: 10, 50: 10, 52: 10, 45: 10, 47: 10, 48: 10, 53: 1, 54: 1}), 'PASS': Counter()})
38 {38: 1.0, 40: 1.0, 42: 1.0, 43: 1.0, 44: 1.0, 46: 1.0, 50: 1.0, 52: 1.0, 45: 1.0, 47: 1.0, 48: 1.0, 53: 1.0, 54: 1.0} ['42']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/CHECK_POSSIBLE_TRANSFORM_ONE_STRING_ANOTHER.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({53: 3, 54: 3, 55: 3, 56: 3, 57: 3, 59: 3, 60: 3, 62: 3, 61: 3, 63: 3, 58: 3, 64: 1, 65: 1, 66: 1, 68: 1, 69: 1, 71: 1, 72: 1, 75: 1, 78: 1, 79: 1, 70: 1}), 'PASS': Counter({53: 7, 54: 7, 55: 7, 56: 7, 57: 7, 59: 7, 60: 7, 62: 7, 61: 7, 63: 7, 58: 7, 64: 1, 65: 1, 66: 1, 68: 1, 69: 1, 71: 1, 72: 1, 75: 1, 78: 1, 79: 1, 70: 1, 80: 1, 67: 1})})
64 {53: 0.30000000000000004, 54: 0.30000000000000004, 55: 0.30000000000000004, 56: 0.30000000000000004, 57: 0.30000000000000004, 59: 0.30000000000000004, 60: 0.30000000000000004, 62: 0.30000000000000004, 61: 0.30000000000000004, 63: 0.30000000000000004, 58: 0.30000000000000004, 64: 0.5, 65: 0.5, 66: 0.5, 68: 0.5, 69: 0.5, 71: 0.5, 72: 0.5, 75: 0.5, 78: 0.5, 79: 0.5, 70: 0.5, 80: 0.0, 67: 0.0} ['75']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_NUMBERS_CAN_CONSTRUCTED_USING_TWO_NUMBERS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({41: 7, 42: 7, 45: 7, 46: 7, 48: 7, 49: 7, 50: 7, 52: 7, 53: 7, 56: 7, 59: 7, 61: 7, 51: 7, 62: 4, 63: 4, 43: 3, 57: 3, 54: 1}), 'PASS': Counter({41: 3, 42: 3, 45: 3, 48: 3, 49: 3, 50: 3, 62: 2, 63: 2, 46: 1, 52: 1, 53: 1, 56: 1, 57: 1, 59: 1, 61: 1, 51: 1})})
43 {41: 0.7, 42: 0.7, 43: 1.0, 45: 0.7, 46: 0.875, 48: 0.7, 49: 0.7, 50: 0.7, 52: 0.875, 53: 0.875, 56: 0.875, 59: 0.875, 61: 0.875, 51: 0.875, 62: 0.6666666666666667, 63: 0.6666666666666667, 57: 0.75, 54: 1.0} ['41']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/PERMUTE_TWO_ARRAYS_SUM_EVERY_PAIR_GREATER_EQUAL_K.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({33: 9, 34: 9, 35: 9, 36: 9, 38: 9, 41: 9, 39: 6, 37: 3, 40: 3}), 'FAIL': Counter({33: 1, 34: 1, 35: 1, 36: 1, 38: 1, 39: 1, 41: 1})})
39 {33: 0.09999999999999998, 34: 0.09999999999999998, 35: 0.09999999999999998, 36: 0.09999999999999998, 38: 0.09999999999999998, 39: 0.1428571428571429, 41: 0.09999999999999998, 37: 0.0, 40: 0.0} ['34']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FORM_SMALLEST_NUMBER_USING_ONE_SWAP_OPERATION.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({66: 10, 67: 10, 68: 10, 69: 10, 70: 10, 71: 10, 72: 10, 82: 10, 83: 10, 84: 10, 91: 9, 98: 9, 99: 9, 85: 8, 86: 8, 87: 8, 88: 8, 90: 8, 101: 7, 108: 7, 100: 7, 110: 7, 111: 7, 74: 6, 78: 6, 79: 6, 81: 6, 73: 6}), 'PASS': Counter()})
66 {66: 1.0, 67: 1.0, 68: 1.0, 69: 1.0, 70: 1.0, 71: 1.0, 72: 1.0, 74: 1.0, 78: 1.0, 79: 1.0, 81: 1.0, 73: 1.0, 82: 1.0, 83: 1.0, 84: 1.0, 85: 1.0, 86: 1.0, 87: 1.0, 88: 1.0, 90: 1.0, 91: 1.0, 98: 1.0, 99: 1.0, 101: 1.0, 108: 1.0, 100: 1.0, 110: 1.0, 111: 1.0} ['110']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FIND_PAIR_MAXIMUM_GCD_ARRAY_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({54: 7, 55: 7, 56: 7, 58: 7, 57: 7, 60: 5, 61: 5, 62: 5, 64: 5, 63: 5, 66: 3, 67: 3, 68: 3, 70: 3, 71: 3, 72: 3, 73: 3, 75: 3, 76: 3, 80: 2, 69: 2, 77: 1, 83: 1}), 'PASS': Counter({54: 3, 55: 3, 56: 3, 58: 3, 57: 3, 60: 3, 61: 3, 62: 3, 64: 3, 63: 3, 66: 2, 67: 2, 68: 2, 70: 2, 71: 2, 72: 2, 73: 2, 75: 2, 76: 2, 80: 2, 69: 2, 82: 2, 83: 2})})
77 {54: 0.7, 55: 0.7, 56: 0.7, 58: 0.7, 57: 0.7, 60: 0.625, 61: 0.625, 62: 0.625, 64: 0.625, 63: 0.625, 66: 0.6, 67: 0.6, 68: 0.6, 70: 0.6, 71: 0.6, 72: 0.6, 73: 0.6, 75: 0.6, 76: 0.6, 80: 0.5, 69: 0.5, 77: 1.0, 83: 0.33333333333333337, 82: 0.0} ['60']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FIND_PAIR_MAXIMUM_GCD_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({48: 6, 49: 6, 50: 6, 52: 6, 51: 6, 54: 4, 55: 3, 56: 3, 58: 3, 59: 3, 68: 3, 57: 3, 61: 2, 62: 2, 63: 2, 64: 2, 66: 2, 67: 2, 60: 2}), 'PASS': Counter({48: 4, 49: 4, 50: 4, 52: 4, 51: 4, 54: 3, 55: 3, 56: 3, 58: 3, 59: 3, 68: 3, 57: 3, 61: 2, 62: 2, 63: 2, 66: 2, 67: 2, 60: 2, 64: 1})})
64 {48: 0.6, 49: 0.6, 50: 0.6, 52: 0.6, 51: 0.6, 54: 0.5714285714285714, 55: 0.5, 56: 0.5, 58: 0.5, 59: 0.5, 61: 0.5, 62: 0.5, 63: 0.5, 64: 0.6666666666666667, 66: 0.5, 67: 0.5, 60: 0.5, 68: 0.5, 57: 0.5} ['54']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_WORDS_APPEAR_EXACTLY_TWO_TIMES_ARRAY_WORDS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({36: 9, 37: 9, 38: 9, 40: 9, 41: 9, 42: 9, 43: 9, 47: 9, 39: 9, 45: 9, 48: 7, 49: 7, 50: 7, 52: 7, 55: 7, 51: 7, 56: 6, 57: 6}), 'PASS': Counter({36: 1, 37: 1, 38: 1, 40: 1, 41: 1, 42: 1, 43: 1, 47: 1, 39: 1, 48: 1, 49: 1, 50: 1, 52: 1, 55: 1, 51: 1})})
45 {36: 0.9, 37: 0.9, 38: 0.9, 40: 0.9, 41: 0.9, 42: 0.9, 43: 0.9, 47: 0.9, 39: 0.9, 45: 1.0, 48: 0.875, 49: 0.875, 50: 0.875, 52: 0.875, 55: 0.875, 51: 0.875, 56: 1.0, 57: 1.0} ['40']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_INDEX_PAIRS_EQUAL_ELEMENTS_ARRAY_1.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({39: 4, 40: 4, 41: 4, 50: 4, 51: 4, 52: 4, 43: 3, 44: 3, 45: 3, 49: 3, 42: 3, 54: 3, 55: 3, 53: 3, 57: 3, 58: 3}), 'FAIL': Counter({39: 6, 40: 6, 41: 6, 43: 6, 44: 6, 45: 6, 49: 6, 42: 6, 47: 6, 50: 5, 51: 5, 52: 5, 54: 5, 55: 5, 53: 4, 57: 1, 58: 1})})
47 {39: 0.6, 40: 0.6, 41: 0.6, 43: 0.6666666666666667, 44: 0.6666666666666667, 45: 0.6666666666666667, 49: 0.6666666666666667, 42: 0.6666666666666667, 47: 1.0, 50: 0.5555555555555556, 51: 0.5555555555555556, 52: 0.5555555555555556, 54: 0.625, 55: 0.625, 53: 0.5714285714285714, 57: 0.25, 58: 0.25} ['43']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/CHOCOLATE_DISTRIBUTION_PROBLEM.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({43: 7, 45: 7, 46: 7, 61: 7, 48: 4, 49: 4, 50: 4, 51: 4, 53: 4, 54: 4, 55: 4, 56: 4, 57: 4, 59: 4, 52: 4, 60: 4, 47: 3}), 'FAIL': Counter({43: 3, 45: 3, 46: 3, 48: 3, 49: 3, 50: 3, 51: 3, 53: 3, 54: 3, 55: 3, 56: 3, 57: 3, 59: 3, 52: 3, 60: 3, 61: 3})})
48 {43: 0.30000000000000004, 45: 0.30000000000000004, 46: 0.30000000000000004, 48: 0.4285714285714286, 49: 0.4285714285714286, 50: 0.4285714285714286, 51: 0.4285714285714286, 53: 0.4285714285714286, 54: 0.4285714285714286, 55: 0.4285714285714286, 56: 0.4285714285714286, 57: 0.4285714285714286, 59: 0.4285714285714286, 52: 0.4285714285714286, 60: 0.4285714285714286, 61: 0.30000000000000004, 47: 0.0} ['45']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/PANGRAM_CHECKING.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({41: 9, 42: 9, 43: 9, 45: 9, 51: 9, 44: 9, 48: 8, 46: 6, 47: 6, 49: 6, 53: 4, 54: 4, 56: 4, 57: 4, 59: 4, 55: 2}), 'FAIL': Counter({41: 1, 42: 1, 43: 1, 45: 1, 46: 1, 47: 1, 51: 1, 44: 1, 48: 1, 49: 1})})
46 {41: 0.09999999999999998, 42: 0.09999999999999998, 43: 0.09999999999999998, 45: 0.09999999999999998, 46: 0.1428571428571429, 47: 0.1428571428571429, 51: 0.09999999999999998, 44: 0.09999999999999998, 48: 0.11111111111111116, 49: 0.1428571428571429, 53: 0.0, 54: 0.0, 56: 0.0, 57: 0.0, 59: 0.0, 55: 0.0} ['40']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MINIMUM_COST_MAKE_ARRAY_SIZE_1_REMOVING_LARGER_PAIRS.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({28: 8, 29: 8, 30: 8, 36: 8, 32: 1, 35: 1, 31: 1, 33: 1}), 'FAIL': Counter({28: 2, 29: 2, 30: 2, 36: 1, 32: 1, 33: 1, 35: 1, 31: 1})})
32 {28: 0.19999999999999996, 29: 0.19999999999999996, 30: 0.19999999999999996, 36: 0.11111111111111116, 32: 0.5, 33: 0.5, 35: 0.5, 31: 0.5} ['30']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SUM_LARGEST_PRIME_FACTOR_NUMBER_LESS_EQUAL_N.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({46: 10, 47: 10, 48: 10, 49: 10, 50: 10, 52: 10, 53: 9, 54: 9, 56: 9, 55: 9, 59: 6, 51: 6, 58: 5, 60: 3, 61: 3, 63: 3, 64: 3, 65: 3, 69: 3, 62: 3, 70: 2, 71: 2, 67: 2}), 'PASS': Counter()})
46 {46: 1.0, 47: 1.0, 48: 1.0, 49: 1.0, 50: 1.0, 52: 1.0, 59: 1.0, 51: 1.0, 60: 1.0, 61: 1.0, 63: 1.0, 64: 1.0, 65: 1.0, 69: 1.0, 62: 1.0, 70: 1.0, 71: 1.0, 53: 1.0, 54: 1.0, 56: 1.0, 55: 1.0, 58: 1.0, 67: 1.0} ['47']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_NUMBER_CHOCOLATES_DISTRIBUTED_EQUALLY_AMONG_K_STUDENTS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({45: 10, 46: 10, 48: 10, 49: 10}), 'PASS': Counter()})
45 {45: 1.0, 46: 1.0, 48: 1.0, 49: 1.0} ['46']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MINIMUM_SUM_SUBSEQUENCE_LEAST_ONE_EVERY_FOUR_CONSECUTIVE_ELEMENTS_PICKED_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({37: 8, 39: 8, 40: 8, 41: 8, 42: 8, 43: 8, 44: 8, 45: 8, 47: 8, 46: 8, 49: 7, 50: 7}), 'PASS': Counter({37: 2, 39: 2, 40: 2, 41: 2, 42: 2, 43: 2, 44: 2, 45: 2, 47: 2, 46: 2, 49: 2, 50: 2})})
37 {37: 0.8, 39: 0.8, 40: 0.8, 41: 0.8, 42: 0.8, 43: 0.8, 44: 0.8, 45: 0.8, 47: 0.8, 46: 0.8, 49: 0.7777777777777778, 50: 0.7777777777777778} ['38', '47', '49']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAKE_LARGEST_PALINDROME_CHANGING_K_DIGITS.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({59: 4, 60: 4, 61: 4, 62: 4, 63: 4, 64: 4, 65: 4, 66: 4, 67: 4, 68: 4, 69: 4, 71: 4, 97: 4}), 'FAIL': Counter({59: 6, 60: 6, 61: 6, 62: 6, 63: 6, 64: 6, 68: 6, 69: 6, 71: 6, 72: 6, 73: 6, 74: 6, 75: 6, 78: 6, 88: 6, 89: 6, 91: 6, 92: 6, 96: 6, 97: 6, 65: 5, 66: 5, 67: 5, 79: 5, 83: 5, 87: 5, 84: 4, 85: 4, 76: 3, 77: 3})})
72 {59: 0.6, 60: 0.6, 61: 0.6, 62: 0.6, 63: 0.6, 64: 0.6, 65: 0.5555555555555556, 66: 0.5555555555555556, 67: 0.5555555555555556, 68: 0.6, 69: 0.6, 71: 0.6, 72: 1.0, 73: 1.0, 74: 1.0, 75: 1.0, 78: 1.0, 79: 1.0, 83: 1.0, 84: 1.0, 85: 1.0, 87: 1.0, 88: 1.0, 89: 1.0, 76: 1.0, 77: 1.0, 91: 1.0, 92: 1.0, 96: 1.0, 97: 0.6} ['60']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SIZE_SUBARRAY_MAXIMUM_SUM.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({43: 8, 44: 8, 45: 8, 47: 8, 48: 8, 53: 8, 57: 8, 46: 8, 58: 6, 54: 1, 55: 1}), 'PASS': Counter({43: 2, 44: 2, 45: 2, 47: 2, 48: 2, 53: 2, 54: 2, 55: 2, 57: 2, 46: 2, 58: 2})})
43 {43: 0.8, 44: 0.8, 45: 0.8, 47: 0.8, 48: 0.8, 53: 0.8, 57: 0.8, 46: 0.8, 58: 0.75, 54: 0.33333333333333337, 55: 0.33333333333333337} ['43']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/UNBOUNDED_KNAPSACK_REPETITION_ITEMS_ALLOWED.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({36: 9, 37: 9, 38: 9, 40: 9, 41: 9, 43: 9, 45: 9, 42: 9, 46: 8, 39: 8, 44: 4, 47: 2, 48: 2}), 'PASS': Counter({36: 1, 37: 1, 38: 1, 40: 1, 41: 1, 43: 1, 44: 1, 45: 1, 42: 1, 46: 1, 39: 1})})
47 {36: 0.9, 37: 0.9, 38: 0.9, 40: 0.9, 41: 0.9, 43: 0.9, 45: 0.9, 42: 0.9, 46: 0.8888888888888888, 39: 0.8888888888888888, 47: 1.0, 48: 1.0, 44: 0.8} ['36']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DICE_THROW_PROBLEM_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({41: 10, 42: 10, 43: 10, 44: 10, 46: 10, 47: 10, 49: 10, 50: 10, 53: 10, 48: 10, 54: 3, 45: 3, 51: 1}), 'PASS': Counter()})
41 {41: 1.0, 42: 1.0, 43: 1.0, 44: 1.0, 46: 1.0, 47: 1.0, 49: 1.0, 50: 1.0, 53: 1.0, 48: 1.0, 54: 1.0, 45: 1.0, 51: 1.0} ['41']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SPACE_OPTIMIZED_DP_SOLUTION_0_1_KNAPSACK_PROBLEM_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({35: 8, 36: 8, 37: 8, 38: 8, 40: 8, 41: 8, 43: 8, 39: 8, 42: 6, 44: 3, 45: 3}), 'PASS': Counter({35: 2, 36: 2, 37: 2, 38: 2, 40: 2, 41: 2, 43: 2, 42: 2, 39: 1})})
44 {35: 0.8, 36: 0.8, 37: 0.8, 38: 0.8, 40: 0.8, 41: 0.8, 43: 0.8, 39: 0.8888888888888888, 44: 1.0, 45: 1.0, 42: 0.75} ['36']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_WAYS_DIVIDE_CIRCLE_USING_N_NON_INTERSECTING_CHORDS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({42: 10, 43: 10, 44: 10, 45: 10, 46: 10, 47: 10, 49: 10, 50: 10, 52: 10, 51: 10, 53: 10, 48: 10}), 'PASS': Counter()})
42 {42: 1.0, 43: 1.0, 44: 1.0, 45: 1.0, 46: 1.0, 47: 1.0, 49: 1.0, 50: 1.0, 52: 1.0, 51: 1.0, 53: 1.0, 48: 1.0} ['43']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_SUBARRAYS_WITH_SAME_EVEN_AND_ODD_ELEMENTS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({48: 10, 49: 10, 50: 10, 51: 10, 52: 10, 53: 10, 54: 10, 56: 10, 59: 10, 67: 10, 55: 10, 58: 10, 60: 9, 61: 9, 62: 9, 57: 7, 68: 5, 69: 5, 64: 4, 65: 4}), 'PASS': Counter()})
48 {48: 1.0, 49: 1.0, 50: 1.0, 51: 1.0, 52: 1.0, 53: 1.0, 54: 1.0, 56: 1.0, 57: 1.0, 59: 1.0, 64: 1.0, 65: 1.0, 67: 1.0, 55: 1.0, 58: 1.0, 60: 1.0, 61: 1.0, 62: 1.0, 68: 1.0, 69: 1.0} ['50', '51']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/LARGEST_SUBSEQUENCE_GCD_GREATER_1.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({41: 9, 42: 9, 43: 9, 44: 9, 46: 6, 47: 6, 48: 6, 50: 6, 51: 6, 49: 6, 52: 5, 45: 5, 54: 3}), 'FAIL': Counter({41: 1, 42: 1, 43: 1, 44: 1, 54: 1})})
54 {41: 0.09999999999999998, 42: 0.09999999999999998, 43: 0.09999999999999998, 44: 0.09999999999999998, 54: 0.25, 46: 0.0, 47: 0.0, 48: 0.0, 50: 0.0, 51: 0.0, 49: 0.0, 52: 0.0, 45: 0.0} ['42']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FUNCTION_COPY_STRING_ITERATIVE_RECURSIVE_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({31: 10, 32: 10, 34: 10, 33: 10, 35: 10}), 'PASS': Counter()})
31 {31: 1.0, 32: 1.0, 34: 1.0, 33: 1.0, 35: 1.0} ['32']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SUM_AREA_RECTANGLES_POSSIBLE_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({46: 4, 47: 4, 48: 4, 49: 4, 50: 4, 51: 4, 53: 4, 58: 4, 63: 4, 52: 4, 64: 3, 54: 3, 55: 3, 56: 3, 57: 3, 59: 3, 60: 3, 61: 3}), 'PASS': Counter({46: 5, 47: 5, 48: 5, 49: 5, 50: 5, 51: 5, 53: 5, 54: 5, 55: 5, 56: 5, 57: 5, 63: 5, 52: 5, 58: 5, 59: 5, 60: 5, 61: 5, 64: 3, 4294967295: 1})})
64 {46: 0.4444444444444444, 47: 0.4444444444444444, 48: 0.4444444444444444, 49: 0.4444444444444444, 50: 0.4444444444444444, 51: 0.4444444444444444, 53: 0.4444444444444444, 58: 0.4444444444444444, 63: 0.4444444444444444, 52: 0.4444444444444444, 64: 0.5, 54: 0.375, 55: 0.375, 56: 0.375, 57: 0.375, 59: 0.375, 60: 0.375, 61: 0.375, 4294967295: 0.0} ['46']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DIVIDE_LARGE_NUMBER_REPRESENTED_STRING.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({37: 5, 38: 5, 39: 5, 40: 5, 41: 5, 44: 5, 45: 5, 46: 5, 47: 5, 49: 5, 50: 5, 51: 5, 42: 4}), 'PASS': Counter({37: 3, 38: 3, 39: 3, 40: 3, 41: 3, 42: 3, 44: 3, 45: 3, 49: 3, 51: 3})})
46 {37: 0.625, 38: 0.625, 39: 0.625, 40: 0.625, 41: 0.625, 42: 0.5714285714285714, 44: 0.625, 45: 0.625, 46: 1.0, 47: 1.0, 49: 0.625, 50: 1.0, 51: 0.625} ['45']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_PRODUCT_SUBSET_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({50: 9, 52: 9, 53: 9, 54: 9, 55: 9, 56: 9, 58: 9, 62: 9, 66: 9, 57: 9, 68: 6, 70: 6, 74: 6, 75: 6, 59: 3, 60: 3, 63: 2, 64: 2}), 'FAIL': Counter({50: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 58: 1, 62: 1, 63: 1, 64: 1, 66: 1, 57: 1, 68: 1, 70: 1, 71: 1, 72: 1, 74: 1, 75: 1})})
71 {50: 0.09999999999999998, 52: 0.09999999999999998, 53: 0.09999999999999998, 54: 0.09999999999999998, 55: 0.09999999999999998, 56: 0.09999999999999998, 58: 0.09999999999999998, 62: 0.09999999999999998, 63: 0.33333333333333337, 64: 0.33333333333333337, 66: 0.09999999999999998, 57: 0.09999999999999998, 68: 0.1428571428571429, 70: 0.1428571428571429, 71: 1.0, 72: 1.0, 74: 0.1428571428571429, 75: 0.1428571428571429, 59: 0.0, 60: 0.0} ['52']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FIND_EQUAL_POINT_STRING_BRACKETS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({54: 8, 55: 8, 56: 8, 57: 8, 58: 8, 59: 8, 60: 8, 63: 8, 66: 8, 67: 8, 69: 8, 75: 8, 68: 8, 76: 8, 77: 8, 79: 8, 85: 8, 78: 8, 86: 8, 89: 8, 73: 7, 83: 7, 92: 7, 93: 7, 95: 7, 94: 7, 98: 7, 97: 6, 70: 5, 71: 5, 80: 5, 81: 5, 64: 3, 61: 2, 90: 1}), 'PASS': Counter({54: 2, 55: 2, 56: 2, 57: 2, 58: 2, 59: 2, 60: 2, 61: 2, 63: 2, 64: 2, 66: 2, 67: 2, 69: 2, 73: 2, 75: 2, 68: 2, 76: 2, 77: 2, 79: 2, 85: 2, 78: 2, 83: 2, 86: 2, 89: 2, 92: 2, 93: 2, 95: 2, 94: 2, 96: 2, 97: 2, 98: 2, 80: 1, 81: 1})})
70 {54: 0.8, 55: 0.8, 56: 0.8, 57: 0.8, 58: 0.8, 59: 0.8, 60: 0.8, 61: 0.5, 63: 0.8, 66: 0.8, 67: 0.8, 69: 0.8, 70: 1.0, 71: 1.0, 75: 0.8, 68: 0.8, 73: 0.7777777777777778, 76: 0.8, 77: 0.8, 79: 0.8, 80: 0.8333333333333334, 81: 0.8333333333333334, 85: 0.8, 78: 0.8, 83: 0.7777777777777778, 86: 0.8, 89: 0.8, 92: 0.7777777777777778, 93: 0.7777777777777778, 95: 0.7777777777777778, 94: 0.7777777777777778, 97: 0.75, 98: 0.7777777777777778, 64: 0.6, 90: 1.0, 96: 0.0} ['55', '56']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/BREAKING_NUMBER_FIRST_PART_INTEGRAL_DIVISION_SECOND_POWER_10.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({40: 7, 41: 7, 42: 7, 43: 7, 44: 7, 46: 7, 47: 7, 48: 7, 49: 7, 51: 7, 52: 7, 45: 7, 53: 7}), 'FAIL': Counter({40: 3, 41: 3, 42: 3, 43: 3, 44: 3, 46: 3, 47: 3, 48: 3, 49: 3, 51: 3, 52: 3, 45: 3, 50: 3, 53: 3})})
50 {40: 0.30000000000000004, 41: 0.30000000000000004, 42: 0.30000000000000004, 43: 0.30000000000000004, 44: 0.30000000000000004, 46: 0.30000000000000004, 47: 0.30000000000000004, 48: 0.30000000000000004, 49: 0.30000000000000004, 51: 0.30000000000000004, 52: 0.30000000000000004, 45: 0.30000000000000004, 50: 1.0, 53: 0.30000000000000004} ['48']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DIFFERENT_WAYS_SUM_N_USING_NUMBERS_GREATER_EQUAL_M.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({41: 8, 42: 8, 43: 8, 44: 8, 46: 4, 47: 4, 49: 4, 50: 4, 53: 4, 48: 4, 55: 4, 56: 4, 51: 2, 54: 2, 45: 2}), 'PASS': Counter({41: 2, 42: 2, 43: 2, 44: 2, 55: 2, 56: 2})})
46 {41: 0.8, 42: 0.8, 43: 0.8, 44: 0.8, 46: 1.0, 47: 1.0, 49: 1.0, 50: 1.0, 53: 1.0, 48: 1.0, 51: 1.0, 54: 1.0, 45: 1.0, 55: 0.6666666666666667, 56: 0.6666666666666667} ['41']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SPACE_OPTIMIZED_DP_SOLUTION_0_1_KNAPSACK_PROBLEM.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({47: 10, 48: 10, 49: 10, 50: 10, 51: 10, 58: 10, 59: 10, 63: 10, 52: 10, 53: 10, 56: 9, 60: 6, 54: 5, 65: 2, 66: 2}), 'PASS': Counter()})
47 {47: 1.0, 48: 1.0, 49: 1.0, 50: 1.0, 51: 1.0, 58: 1.0, 59: 1.0, 60: 1.0, 63: 1.0, 52: 1.0, 53: 1.0, 54: 1.0, 56: 1.0, 65: 1.0, 66: 1.0} ['47']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_AREA_RECTANGLE_PICKING_FOUR_SIDES_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({34: 5, 35: 5, 36: 5, 37: 5, 39: 5, 38: 5, 41: 5, 40: 4}), 'FAIL': Counter({34: 5, 35: 5, 36: 5, 37: 5, 39: 5, 40: 5, 38: 5, 41: 5})})
40 {34: 0.5, 35: 0.5, 36: 0.5, 37: 0.5, 39: 0.5, 40: 0.5555555555555556, 38: 0.5, 41: 0.5} ['34']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FORM_MINIMUM_NUMBER_FROM_GIVEN_SEQUENCE_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({44: 3, 45: 3, 46: 3, 47: 3, 48: 3, 49: 3, 50: 3, 52: 3, 61: 3, 51: 3, 53: 3, 54: 3, 56: 3, 57: 3, 59: 3, 55: 3, 60: 3, 62: 3, 63: 3}), 'PASS': Counter()})
44 {44: 1.0, 45: 1.0, 46: 1.0, 47: 1.0, 48: 1.0, 49: 1.0, 50: 1.0, 52: 1.0, 61: 1.0, 51: 1.0, 53: 1.0, 54: 1.0, 56: 1.0, 57: 1.0, 59: 1.0, 55: 1.0, 60: 1.0, 62: 1.0, 63: 1.0} ['47']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SORT_EVEN_PLACED_ELEMENTS_INCREASING_ODD_PLACED_DECREASING_ORDER.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({44: 10, 45: 10, 46: 10, 47: 10, 49: 10, 50: 10, 53: 10, 48: 10, 52: 10, 54: 10, 55: 10, 56: 10, 57: 10, 58: 10, 60: 10, 59: 10, 61: 10, 62: 10, 64: 10, 63: 10, 65: 10}), 'PASS': Counter()})
44 {44: 1.0, 45: 1.0, 46: 1.0, 47: 1.0, 49: 1.0, 50: 1.0, 53: 1.0, 48: 1.0, 52: 1.0, 54: 1.0, 55: 1.0, 56: 1.0, 57: 1.0, 58: 1.0, 60: 1.0, 59: 1.0, 61: 1.0, 62: 1.0, 64: 1.0, 63: 1.0, 65: 1.0} ['55']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MULTIPLY_LARGE_NUMBERS_REPRESENTED_AS_STRINGS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({57: 10, 58: 10, 59: 10, 61: 10, 62: 10, 63: 10, 64: 10, 65: 10, 67: 10, 68: 10, 69: 10, 70: 10, 71: 10, 73: 10, 74: 10, 75: 10, 76: 10, 77: 10, 72: 10, 79: 10, 81: 10, 66: 10, 80: 8, 83: 1, 84: 1, 86: 1, 88: 1, 89: 1, 90: 1}), 'PASS': Counter()})
57 {57: 1.0, 58: 1.0, 59: 1.0, 61: 1.0, 62: 1.0, 63: 1.0, 64: 1.0, 65: 1.0, 67: 1.0, 68: 1.0, 69: 1.0, 70: 1.0, 71: 1.0, 73: 1.0, 74: 1.0, 75: 1.0, 76: 1.0, 77: 1.0, 72: 1.0, 79: 1.0, 81: 1.0, 66: 1.0, 80: 1.0, 83: 1.0, 84: 1.0, 86: 1.0, 88: 1.0, 89: 1.0, 90: 1.0} ['90']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_PROFIT_BY_BUYING_AND_SELLING_A_SHARE_AT_MOST_K_TIMES_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({46: 10, 47: 10, 48: 10, 50: 10, 49: 10, 52: 10, 53: 10, 55: 10, 54: 10, 57: 5, 58: 5, 60: 5, 61: 5, 62: 5, 64: 5, 65: 5, 63: 5, 67: 4, 59: 4, 68: 1, 69: 1}), 'PASS': Counter()})
46 {46: 1.0, 47: 1.0, 48: 1.0, 50: 1.0, 49: 1.0, 52: 1.0, 53: 1.0, 55: 1.0, 54: 1.0, 57: 1.0, 58: 1.0, 60: 1.0, 61: 1.0, 62: 1.0, 64: 1.0, 65: 1.0, 63: 1.0, 67: 1.0, 59: 1.0, 68: 1.0, 69: 1.0} ['46', '60']
Got it right 6 times.
Testing d_star
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_SUM_ABSOLUTE_DIFFERENCE_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({43: 7, 44: 7, 45: 7, 46: 7, 47: 7, 49: 7, 50: 7, 51: 7, 48: 7, 52: 7, 53: 7, 54: 7, 56: 7, 55: 7, 57: 1, 58: 1, 59: 1}), 'PASS': Counter({43: 3, 44: 3, 45: 3, 46: 3, 47: 3, 49: 3, 50: 3, 51: 3, 48: 3, 52: 3, 53: 3, 54: 3, 56: 3, 55: 3})})
43 {43: 2.3333333333333335, 44: 2.3333333333333335, 45: 2.3333333333333335, 46: 2.3333333333333335, 47: 2.3333333333333335, 49: 2.3333333333333335, 50: 2.3333333333333335, 51: 2.3333333333333335, 48: 2.3333333333333335, 52: 2.3333333333333335, 53: 2.3333333333333335, 54: 2.3333333333333335, 56: 2.3333333333333335, 55: 2.3333333333333335, 57: 0.16666666666666666, 58: 0.16666666666666666, 59: 0.16666666666666666} ['45']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DICE_THROW_PROBLEM.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({40: 10, 41: 10, 42: 10, 44: 10, 43: 10, 46: 6, 47: 6, 49: 6, 50: 6, 52: 6, 53: 6, 57: 6, 51: 6, 55: 6, 54: 6, 58: 1, 48: 1}), 'PASS': Counter()})
40 {40: inf, 41: inf, 42: inf, 44: inf, 43: inf, 46: 1.5, 47: 1.5, 49: 1.5, 50: 1.5, 52: 1.5, 53: 1.5, 57: 1.5, 51: 1.5, 55: 1.5, 54: 1.5, 58: 0.1111111111111111, 48: 0.1111111111111111} ['40']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_SUM_ALTERNATING_SUBSEQUENCE_SUM.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({55: 9, 57: 9, 58: 9, 59: 9, 60: 9, 61: 9, 62: 9, 64: 9, 65: 9, 67: 9, 71: 9, 72: 9, 66: 9, 73: 9, 63: 9, 68: 4, 69: 4, 70: 4}), 'PASS': Counter({55: 1, 56: 1})})
57 {55: 9.0, 57: inf, 58: inf, 59: inf, 60: inf, 61: inf, 62: inf, 64: inf, 65: inf, 67: inf, 71: inf, 72: inf, 66: inf, 73: inf, 63: inf, 68: 0.8, 69: 0.8, 70: 0.8, 56: 0.0} ['57', '58']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MINIMUM_TIME_WRITE_CHARACTERS_USING_INSERT_DELETE_COPY_OPERATION.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({38: 10, 40: 10, 42: 10, 43: 10, 44: 10, 46: 10, 50: 10, 52: 10, 45: 10, 47: 10, 48: 10, 53: 1, 54: 1}), 'PASS': Counter()})
38 {38: inf, 40: inf, 42: inf, 43: inf, 44: inf, 46: inf, 50: inf, 52: inf, 45: inf, 47: inf, 48: inf, 53: 0.1111111111111111, 54: 0.1111111111111111} ['42']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/CHECK_POSSIBLE_TRANSFORM_ONE_STRING_ANOTHER.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({53: 3, 54: 3, 55: 3, 56: 3, 57: 3, 59: 3, 60: 3, 62: 3, 61: 3, 63: 3, 58: 3, 64: 1, 65: 1, 66: 1, 68: 1, 69: 1, 71: 1, 72: 1, 75: 1, 78: 1, 79: 1, 70: 1}), 'PASS': Counter({53: 7, 54: 7, 55: 7, 56: 7, 57: 7, 59: 7, 60: 7, 62: 7, 61: 7, 63: 7, 58: 7, 64: 1, 65: 1, 66: 1, 68: 1, 69: 1, 71: 1, 72: 1, 75: 1, 78: 1, 79: 1, 70: 1, 80: 1, 67: 1})})
53 {53: 0.42857142857142855, 54: 0.42857142857142855, 55: 0.42857142857142855, 56: 0.42857142857142855, 57: 0.42857142857142855, 59: 0.42857142857142855, 60: 0.42857142857142855, 62: 0.42857142857142855, 61: 0.42857142857142855, 63: 0.42857142857142855, 58: 0.42857142857142855, 64: 0.3333333333333333, 65: 0.3333333333333333, 66: 0.3333333333333333, 68: 0.3333333333333333, 69: 0.3333333333333333, 71: 0.3333333333333333, 72: 0.3333333333333333, 75: 0.3333333333333333, 78: 0.3333333333333333, 79: 0.3333333333333333, 70: 0.3333333333333333, 80: 0.0, 67: 0.0} ['75']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_NUMBERS_CAN_CONSTRUCTED_USING_TWO_NUMBERS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({41: 7, 42: 7, 45: 7, 46: 7, 48: 7, 49: 7, 50: 7, 52: 7, 53: 7, 56: 7, 59: 7, 61: 7, 51: 7, 62: 4, 63: 4, 43: 3, 57: 3, 54: 1}), 'PASS': Counter({41: 3, 42: 3, 45: 3, 48: 3, 49: 3, 50: 3, 62: 2, 63: 2, 46: 1, 52: 1, 53: 1, 56: 1, 57: 1, 59: 1, 61: 1, 51: 1})})
46 {41: 2.3333333333333335, 42: 2.3333333333333335, 43: 0.75, 45: 2.3333333333333335, 46: 7.0, 48: 2.3333333333333335, 49: 2.3333333333333335, 50: 2.3333333333333335, 52: 7.0, 53: 7.0, 56: 7.0, 59: 7.0, 61: 7.0, 51: 7.0, 62: 0.8, 63: 0.8, 57: 0.6, 54: 0.16666666666666666} ['41']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/PERMUTE_TWO_ARRAYS_SUM_EVERY_PAIR_GREATER_EQUAL_K.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({33: 9, 34: 9, 35: 9, 36: 9, 38: 9, 41: 9, 39: 6, 37: 3, 40: 3}), 'FAIL': Counter({33: 1, 34: 1, 35: 1, 36: 1, 38: 1, 39: 1, 41: 1})})
39 {33: 0.1111111111111111, 34: 0.1111111111111111, 35: 0.1111111111111111, 36: 0.1111111111111111, 38: 0.1111111111111111, 39: 0.16666666666666666, 41: 0.1111111111111111, 37: 0.0, 40: 0.0} ['34']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FORM_SMALLEST_NUMBER_USING_ONE_SWAP_OPERATION.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({66: 10, 67: 10, 68: 10, 69: 10, 70: 10, 71: 10, 72: 10, 82: 10, 83: 10, 84: 10, 91: 9, 98: 9, 99: 9, 85: 8, 86: 8, 87: 8, 88: 8, 90: 8, 101: 7, 108: 7, 100: 7, 110: 7, 111: 7, 74: 6, 78: 6, 79: 6, 81: 6, 73: 6}), 'PASS': Counter()})
66 {66: inf, 67: inf, 68: inf, 69: inf, 70: inf, 71: inf, 72: inf, 74: 1.5, 78: 1.5, 79: 1.5, 81: 1.5, 73: 1.5, 82: inf, 83: inf, 84: inf, 85: 4.0, 86: 4.0, 87: 4.0, 88: 4.0, 90: 4.0, 91: 9.0, 98: 9.0, 99: 9.0, 101: 2.3333333333333335, 108: 2.3333333333333335, 100: 2.3333333333333335, 110: 2.3333333333333335, 111: 2.3333333333333335} ['110']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FIND_PAIR_MAXIMUM_GCD_ARRAY_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({54: 7, 55: 7, 56: 7, 58: 7, 57: 7, 60: 5, 61: 5, 62: 5, 64: 5, 63: 5, 66: 3, 67: 3, 68: 3, 70: 3, 71: 3, 72: 3, 73: 3, 75: 3, 76: 3, 80: 2, 69: 2, 77: 1, 83: 1}), 'PASS': Counter({54: 3, 55: 3, 56: 3, 58: 3, 57: 3, 60: 3, 61: 3, 62: 3, 64: 3, 63: 3, 66: 2, 67: 2, 68: 2, 70: 2, 71: 2, 72: 2, 73: 2, 75: 2, 76: 2, 80: 2, 69: 2, 82: 2, 83: 2})})
54 {54: 2.3333333333333335, 55: 2.3333333333333335, 56: 2.3333333333333335, 58: 2.3333333333333335, 57: 2.3333333333333335, 60: 1.0, 61: 1.0, 62: 1.0, 64: 1.0, 63: 1.0, 66: 0.5, 67: 0.5, 68: 0.5, 70: 0.5, 71: 0.5, 72: 0.5, 73: 0.5, 75: 0.5, 76: 0.5, 80: 0.2857142857142857, 69: 0.2857142857142857, 77: 0.16666666666666666, 83: 0.125, 82: 0.0} ['60']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FIND_PAIR_MAXIMUM_GCD_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({48: 6, 49: 6, 50: 6, 52: 6, 51: 6, 54: 4, 55: 3, 56: 3, 58: 3, 59: 3, 68: 3, 57: 3, 61: 2, 62: 2, 63: 2, 64: 2, 66: 2, 67: 2, 60: 2}), 'PASS': Counter({48: 4, 49: 4, 50: 4, 52: 4, 51: 4, 54: 3, 55: 3, 56: 3, 58: 3, 59: 3, 68: 3, 57: 3, 61: 2, 62: 2, 63: 2, 66: 2, 67: 2, 60: 2, 64: 1})})
48 {48: 1.5, 49: 1.5, 50: 1.5, 52: 1.5, 51: 1.5, 54: 0.8, 55: 0.5, 56: 0.5, 58: 0.5, 59: 0.5, 61: 0.3333333333333333, 62: 0.3333333333333333, 63: 0.3333333333333333, 64: 0.4, 66: 0.3333333333333333, 67: 0.3333333333333333, 60: 0.3333333333333333, 68: 0.5, 57: 0.5} ['54']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_WORDS_APPEAR_EXACTLY_TWO_TIMES_ARRAY_WORDS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({36: 9, 37: 9, 38: 9, 40: 9, 41: 9, 42: 9, 43: 9, 47: 9, 39: 9, 45: 9, 48: 7, 49: 7, 50: 7, 52: 7, 55: 7, 51: 7, 56: 6, 57: 6}), 'PASS': Counter({36: 1, 37: 1, 38: 1, 40: 1, 41: 1, 42: 1, 43: 1, 47: 1, 39: 1, 48: 1, 49: 1, 50: 1, 52: 1, 55: 1, 51: 1})})
45 {36: 9.0, 37: 9.0, 38: 9.0, 40: 9.0, 41: 9.0, 42: 9.0, 43: 9.0, 47: 9.0, 39: 9.0, 45: inf, 48: 2.3333333333333335, 49: 2.3333333333333335, 50: 2.3333333333333335, 52: 2.3333333333333335, 55: 2.3333333333333335, 51: 2.3333333333333335, 56: 2.0, 57: 2.0} ['40']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_INDEX_PAIRS_EQUAL_ELEMENTS_ARRAY_1.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({39: 4, 40: 4, 41: 4, 50: 4, 51: 4, 52: 4, 43: 3, 44: 3, 45: 3, 49: 3, 42: 3, 54: 3, 55: 3, 53: 3, 57: 3, 58: 3}), 'FAIL': Counter({39: 6, 40: 6, 41: 6, 43: 6, 44: 6, 45: 6, 49: 6, 42: 6, 47: 6, 50: 5, 51: 5, 52: 5, 54: 5, 55: 5, 53: 4, 57: 1, 58: 1})})
47 {39: 1.5, 40: 1.5, 41: 1.5, 43: 2.0, 44: 2.0, 45: 2.0, 49: 2.0, 42: 2.0, 47: inf, 50: 1.0, 51: 1.0, 52: 1.0, 54: 1.25, 55: 1.25, 53: 0.8, 57: 0.125, 58: 0.125} ['43']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/CHOCOLATE_DISTRIBUTION_PROBLEM.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({43: 7, 45: 7, 46: 7, 61: 7, 48: 4, 49: 4, 50: 4, 51: 4, 53: 4, 54: 4, 55: 4, 56: 4, 57: 4, 59: 4, 52: 4, 60: 4, 47: 3}), 'FAIL': Counter({43: 3, 45: 3, 46: 3, 48: 3, 49: 3, 50: 3, 51: 3, 53: 3, 54: 3, 55: 3, 56: 3, 57: 3, 59: 3, 52: 3, 60: 3, 61: 3})})
48 {43: 0.42857142857142855, 45: 0.42857142857142855, 46: 0.42857142857142855, 48: 0.75, 49: 0.75, 50: 0.75, 51: 0.75, 53: 0.75, 54: 0.75, 55: 0.75, 56: 0.75, 57: 0.75, 59: 0.75, 52: 0.75, 60: 0.75, 61: 0.42857142857142855, 47: 0.0} ['45']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/PANGRAM_CHECKING.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({41: 9, 42: 9, 43: 9, 45: 9, 51: 9, 44: 9, 48: 8, 46: 6, 47: 6, 49: 6, 53: 4, 54: 4, 56: 4, 57: 4, 59: 4, 55: 2}), 'FAIL': Counter({41: 1, 42: 1, 43: 1, 45: 1, 46: 1, 47: 1, 51: 1, 44: 1, 48: 1, 49: 1})})
46 {41: 0.1111111111111111, 42: 0.1111111111111111, 43: 0.1111111111111111, 45: 0.1111111111111111, 46: 0.16666666666666666, 47: 0.16666666666666666, 51: 0.1111111111111111, 44: 0.1111111111111111, 48: 0.125, 49: 0.16666666666666666, 53: 0.0, 54: 0.0, 56: 0.0, 57: 0.0, 59: 0.0, 55: 0.0} ['40']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MINIMUM_COST_MAKE_ARRAY_SIZE_1_REMOVING_LARGER_PAIRS.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({28: 8, 29: 8, 30: 8, 36: 8, 32: 1, 35: 1, 31: 1, 33: 1}), 'FAIL': Counter({28: 2, 29: 2, 30: 2, 36: 1, 32: 1, 33: 1, 35: 1, 31: 1})})
32 {28: 0.25, 29: 0.25, 30: 0.25, 36: 0.1111111111111111, 32: 0.5, 33: 0.5, 35: 0.5, 31: 0.5} ['30']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SUM_LARGEST_PRIME_FACTOR_NUMBER_LESS_EQUAL_N.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({46: 10, 47: 10, 48: 10, 49: 10, 50: 10, 52: 10, 53: 9, 54: 9, 56: 9, 55: 9, 59: 6, 51: 6, 58: 5, 60: 3, 61: 3, 63: 3, 64: 3, 65: 3, 69: 3, 62: 3, 70: 2, 71: 2, 67: 2}), 'PASS': Counter()})
46 {46: inf, 47: inf, 48: inf, 49: inf, 50: inf, 52: inf, 59: 1.5, 51: 1.5, 60: 0.42857142857142855, 61: 0.42857142857142855, 63: 0.42857142857142855, 64: 0.42857142857142855, 65: 0.42857142857142855, 69: 0.42857142857142855, 62: 0.42857142857142855, 70: 0.25, 71: 0.25, 53: 9.0, 54: 9.0, 56: 9.0, 55: 9.0, 58: 1.0, 67: 0.25} ['47']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_NUMBER_CHOCOLATES_DISTRIBUTED_EQUALLY_AMONG_K_STUDENTS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({45: 10, 46: 10, 48: 10, 49: 10}), 'PASS': Counter()})
45 {45: inf, 46: inf, 48: inf, 49: inf} ['46']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MINIMUM_SUM_SUBSEQUENCE_LEAST_ONE_EVERY_FOUR_CONSECUTIVE_ELEMENTS_PICKED_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({37: 8, 39: 8, 40: 8, 41: 8, 42: 8, 43: 8, 44: 8, 45: 8, 47: 8, 46: 8, 49: 7, 50: 7}), 'PASS': Counter({37: 2, 39: 2, 40: 2, 41: 2, 42: 2, 43: 2, 44: 2, 45: 2, 47: 2, 46: 2, 49: 2, 50: 2})})
37 {37: 4.0, 39: 4.0, 40: 4.0, 41: 4.0, 42: 4.0, 43: 4.0, 44: 4.0, 45: 4.0, 47: 4.0, 46: 4.0, 49: 2.3333333333333335, 50: 2.3333333333333335} ['38', '47', '49']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAKE_LARGEST_PALINDROME_CHANGING_K_DIGITS.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({59: 4, 60: 4, 61: 4, 62: 4, 63: 4, 64: 4, 65: 4, 66: 4, 67: 4, 68: 4, 69: 4, 71: 4, 97: 4}), 'FAIL': Counter({59: 6, 60: 6, 61: 6, 62: 6, 63: 6, 64: 6, 68: 6, 69: 6, 71: 6, 72: 6, 73: 6, 74: 6, 75: 6, 78: 6, 88: 6, 89: 6, 91: 6, 92: 6, 96: 6, 97: 6, 65: 5, 66: 5, 67: 5, 79: 5, 83: 5, 87: 5, 84: 4, 85: 4, 76: 3, 77: 3})})
72 {59: 1.5, 60: 1.5, 61: 1.5, 62: 1.5, 63: 1.5, 64: 1.5, 65: 1.0, 66: 1.0, 67: 1.0, 68: 1.5, 69: 1.5, 71: 1.5, 72: inf, 73: inf, 74: inf, 75: inf, 78: inf, 79: 5.0, 83: 5.0, 84: 2.0, 85: 2.0, 87: 5.0, 88: inf, 89: inf, 76: 1.0, 77: 1.0, 91: inf, 92: inf, 96: inf, 97: 1.5} ['60']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SIZE_SUBARRAY_MAXIMUM_SUM.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({43: 8, 44: 8, 45: 8, 47: 8, 48: 8, 53: 8, 57: 8, 46: 8, 58: 6, 54: 1, 55: 1}), 'PASS': Counter({43: 2, 44: 2, 45: 2, 47: 2, 48: 2, 53: 2, 54: 2, 55: 2, 57: 2, 46: 2, 58: 2})})
43 {43: 4.0, 44: 4.0, 45: 4.0, 47: 4.0, 48: 4.0, 53: 4.0, 57: 4.0, 46: 4.0, 58: 1.5, 54: 0.1111111111111111, 55: 0.1111111111111111} ['43']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/UNBOUNDED_KNAPSACK_REPETITION_ITEMS_ALLOWED.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({36: 9, 37: 9, 38: 9, 40: 9, 41: 9, 43: 9, 45: 9, 42: 9, 46: 8, 39: 8, 44: 4, 47: 2, 48: 2}), 'PASS': Counter({36: 1, 37: 1, 38: 1, 40: 1, 41: 1, 43: 1, 44: 1, 45: 1, 42: 1, 46: 1, 39: 1})})
36 {36: 9.0, 37: 9.0, 38: 9.0, 40: 9.0, 41: 9.0, 43: 9.0, 45: 9.0, 42: 9.0, 46: 4.0, 39: 4.0, 47: 0.2857142857142857, 48: 0.2857142857142857, 44: 0.6666666666666666} ['36']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DICE_THROW_PROBLEM_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({41: 10, 42: 10, 43: 10, 44: 10, 46: 10, 47: 10, 49: 10, 50: 10, 53: 10, 48: 10, 54: 3, 45: 3, 51: 1}), 'PASS': Counter()})
41 {41: inf, 42: inf, 43: inf, 44: inf, 46: inf, 47: inf, 49: inf, 50: inf, 53: inf, 48: inf, 54: 0.42857142857142855, 45: 0.42857142857142855, 51: 0.1111111111111111} ['41']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SPACE_OPTIMIZED_DP_SOLUTION_0_1_KNAPSACK_PROBLEM_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({35: 8, 36: 8, 37: 8, 38: 8, 40: 8, 41: 8, 43: 8, 39: 8, 42: 6, 44: 3, 45: 3}), 'PASS': Counter({35: 2, 36: 2, 37: 2, 38: 2, 40: 2, 41: 2, 43: 2, 42: 2, 39: 1})})
39 {35: 4.0, 36: 4.0, 37: 4.0, 38: 4.0, 40: 4.0, 41: 4.0, 43: 4.0, 39: 8.0, 44: 0.6, 45: 0.6, 42: 1.5} ['36']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_WAYS_DIVIDE_CIRCLE_USING_N_NON_INTERSECTING_CHORDS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({42: 10, 43: 10, 44: 10, 45: 10, 46: 10, 47: 10, 49: 10, 50: 10, 52: 10, 51: 10, 53: 10, 48: 10}), 'PASS': Counter()})
42 {42: inf, 43: inf, 44: inf, 45: inf, 46: inf, 47: inf, 49: inf, 50: inf, 52: inf, 51: inf, 53: inf, 48: inf} ['43']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/COUNT_SUBARRAYS_WITH_SAME_EVEN_AND_ODD_ELEMENTS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({48: 10, 49: 10, 50: 10, 51: 10, 52: 10, 53: 10, 54: 10, 56: 10, 59: 10, 67: 10, 55: 10, 58: 10, 60: 9, 61: 9, 62: 9, 57: 7, 68: 5, 69: 5, 64: 4, 65: 4}), 'PASS': Counter()})
48 {48: inf, 49: inf, 50: inf, 51: inf, 52: inf, 53: inf, 54: inf, 56: inf, 57: 2.3333333333333335, 59: inf, 64: 0.6666666666666666, 65: 0.6666666666666666, 67: inf, 55: inf, 58: inf, 60: 9.0, 61: 9.0, 62: 9.0, 68: 1.0, 69: 1.0} ['50', '51']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/LARGEST_SUBSEQUENCE_GCD_GREATER_1.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({41: 9, 42: 9, 43: 9, 44: 9, 46: 6, 47: 6, 48: 6, 50: 6, 51: 6, 49: 6, 52: 5, 45: 5, 54: 3}), 'FAIL': Counter({41: 1, 42: 1, 43: 1, 44: 1, 54: 1})})
54 {41: 0.1111111111111111, 42: 0.1111111111111111, 43: 0.1111111111111111, 44: 0.1111111111111111, 54: 0.3333333333333333, 46: 0.0, 47: 0.0, 48: 0.0, 50: 0.0, 51: 0.0, 49: 0.0, 52: 0.0, 45: 0.0} ['42']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FUNCTION_COPY_STRING_ITERATIVE_RECURSIVE_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({31: 10, 32: 10, 34: 10, 33: 10, 35: 10}), 'PASS': Counter()})
31 {31: inf, 32: inf, 34: inf, 33: inf, 35: inf} ['32']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SUM_AREA_RECTANGLES_POSSIBLE_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({46: 4, 47: 4, 48: 4, 49: 4, 50: 4, 51: 4, 53: 4, 58: 4, 63: 4, 52: 4, 64: 3, 54: 3, 55: 3, 56: 3, 57: 3, 59: 3, 60: 3, 61: 3}), 'PASS': Counter({46: 5, 47: 5, 48: 5, 49: 5, 50: 5, 51: 5, 53: 5, 54: 5, 55: 5, 56: 5, 57: 5, 63: 5, 52: 5, 58: 5, 59: 5, 60: 5, 61: 5, 64: 3, 4294967295: 1})})
46 {46: 0.8, 47: 0.8, 48: 0.8, 49: 0.8, 50: 0.8, 51: 0.8, 53: 0.8, 58: 0.8, 63: 0.8, 52: 0.8, 64: 0.75, 54: 0.5, 55: 0.5, 56: 0.5, 57: 0.5, 59: 0.5, 60: 0.5, 61: 0.5, 4294967295: 0.0} ['46']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DIVIDE_LARGE_NUMBER_REPRESENTED_STRING.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({37: 5, 38: 5, 39: 5, 40: 5, 41: 5, 44: 5, 45: 5, 46: 5, 47: 5, 49: 5, 50: 5, 51: 5, 42: 4}), 'PASS': Counter({37: 3, 38: 3, 39: 3, 40: 3, 41: 3, 42: 3, 44: 3, 45: 3, 49: 3, 51: 3})})
46 {37: 1.0, 38: 1.0, 39: 1.0, 40: 1.0, 41: 1.0, 42: 0.6666666666666666, 44: 1.0, 45: 1.0, 46: 2.5, 47: 2.5, 49: 1.0, 50: 2.5, 51: 1.0} ['45']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_PRODUCT_SUBSET_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({50: 9, 52: 9, 53: 9, 54: 9, 55: 9, 56: 9, 58: 9, 62: 9, 66: 9, 57: 9, 68: 6, 70: 6, 74: 6, 75: 6, 59: 3, 60: 3, 63: 2, 64: 2}), 'FAIL': Counter({50: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 58: 1, 62: 1, 63: 1, 64: 1, 66: 1, 57: 1, 68: 1, 70: 1, 71: 1, 72: 1, 74: 1, 75: 1})})
71 {50: 0.1111111111111111, 52: 0.1111111111111111, 53: 0.1111111111111111, 54: 0.1111111111111111, 55: 0.1111111111111111, 56: 0.1111111111111111, 58: 0.1111111111111111, 62: 0.1111111111111111, 63: 0.5, 64: 0.5, 66: 0.1111111111111111, 57: 0.1111111111111111, 68: 0.16666666666666666, 70: 0.16666666666666666, 71: inf, 72: inf, 74: 0.16666666666666666, 75: 0.16666666666666666, 59: 0.0, 60: 0.0} ['52']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FIND_EQUAL_POINT_STRING_BRACKETS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({54: 8, 55: 8, 56: 8, 57: 8, 58: 8, 59: 8, 60: 8, 63: 8, 66: 8, 67: 8, 69: 8, 75: 8, 68: 8, 76: 8, 77: 8, 79: 8, 85: 8, 78: 8, 86: 8, 89: 8, 73: 7, 83: 7, 92: 7, 93: 7, 95: 7, 94: 7, 98: 7, 97: 6, 70: 5, 71: 5, 80: 5, 81: 5, 64: 3, 61: 2, 90: 1}), 'PASS': Counter({54: 2, 55: 2, 56: 2, 57: 2, 58: 2, 59: 2, 60: 2, 61: 2, 63: 2, 64: 2, 66: 2, 67: 2, 69: 2, 73: 2, 75: 2, 68: 2, 76: 2, 77: 2, 79: 2, 85: 2, 78: 2, 83: 2, 86: 2, 89: 2, 92: 2, 93: 2, 95: 2, 94: 2, 96: 2, 97: 2, 98: 2, 80: 1, 81: 1})})
54 {54: 4.0, 55: 4.0, 56: 4.0, 57: 4.0, 58: 4.0, 59: 4.0, 60: 4.0, 61: 0.25, 63: 4.0, 66: 4.0, 67: 4.0, 69: 4.0, 70: 1.6666666666666667, 71: 1.6666666666666667, 75: 4.0, 68: 4.0, 73: 2.3333333333333335, 76: 4.0, 77: 4.0, 79: 4.0, 80: 1.25, 81: 1.25, 85: 4.0, 78: 4.0, 83: 2.3333333333333335, 86: 4.0, 89: 4.0, 92: 2.3333333333333335, 93: 2.3333333333333335, 95: 2.3333333333333335, 94: 2.3333333333333335, 97: 1.5, 98: 2.3333333333333335, 64: 0.42857142857142855, 90: 0.14285714285714285, 96: 0.0} ['55', '56']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/BREAKING_NUMBER_FIRST_PART_INTEGRAL_DIVISION_SECOND_POWER_10.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({40: 7, 41: 7, 42: 7, 43: 7, 44: 7, 46: 7, 47: 7, 48: 7, 49: 7, 51: 7, 52: 7, 45: 7, 53: 7}), 'FAIL': Counter({40: 3, 41: 3, 42: 3, 43: 3, 44: 3, 46: 3, 47: 3, 48: 3, 49: 3, 51: 3, 52: 3, 45: 3, 50: 3, 53: 3})})
50 {40: 0.42857142857142855, 41: 0.42857142857142855, 42: 0.42857142857142855, 43: 0.42857142857142855, 44: 0.42857142857142855, 46: 0.42857142857142855, 47: 0.42857142857142855, 48: 0.42857142857142855, 49: 0.42857142857142855, 51: 0.42857142857142855, 52: 0.42857142857142855, 45: 0.42857142857142855, 50: inf, 53: 0.42857142857142855} ['48']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/DIFFERENT_WAYS_SUM_N_USING_NUMBERS_GREATER_EQUAL_M.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({41: 8, 42: 8, 43: 8, 44: 8, 46: 4, 47: 4, 49: 4, 50: 4, 53: 4, 48: 4, 55: 4, 56: 4, 51: 2, 54: 2, 45: 2}), 'PASS': Counter({41: 2, 42: 2, 43: 2, 44: 2, 55: 2, 56: 2})})
41 {41: 4.0, 42: 4.0, 43: 4.0, 44: 4.0, 46: 1.0, 47: 1.0, 49: 1.0, 50: 1.0, 53: 1.0, 48: 1.0, 51: 0.3333333333333333, 54: 0.3333333333333333, 45: 0.3333333333333333, 55: 0.6666666666666666, 56: 0.6666666666666666} ['41']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SPACE_OPTIMIZED_DP_SOLUTION_0_1_KNAPSACK_PROBLEM.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({47: 10, 48: 10, 49: 10, 50: 10, 51: 10, 58: 10, 59: 10, 63: 10, 52: 10, 53: 10, 56: 9, 60: 6, 54: 5, 65: 2, 66: 2}), 'PASS': Counter()})
47 {47: inf, 48: inf, 49: inf, 50: inf, 51: inf, 58: inf, 59: inf, 60: 1.5, 63: inf, 52: inf, 53: inf, 54: 1.0, 56: 9.0, 65: 0.25, 66: 0.25} ['47']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_AREA_RECTANGLE_PICKING_FOUR_SIDES_ARRAY.cpp
defaultdict(<class 'collections.Counter'>, {'PASS': Counter({34: 5, 35: 5, 36: 5, 37: 5, 39: 5, 38: 5, 41: 5, 40: 4}), 'FAIL': Counter({34: 5, 35: 5, 36: 5, 37: 5, 39: 5, 40: 5, 38: 5, 41: 5})})
40 {34: 1.0, 35: 1.0, 36: 1.0, 37: 1.0, 39: 1.0, 40: 1.25, 38: 1.0, 41: 1.0} ['34']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/FORM_MINIMUM_NUMBER_FROM_GIVEN_SEQUENCE_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({44: 3, 45: 3, 46: 3, 47: 3, 48: 3, 49: 3, 50: 3, 52: 3, 61: 3, 51: 3, 53: 3, 54: 3, 56: 3, 57: 3, 59: 3, 55: 3, 60: 3, 62: 3, 63: 3}), 'PASS': Counter()})
44 {44: 0.42857142857142855, 45: 0.42857142857142855, 46: 0.42857142857142855, 47: 0.42857142857142855, 48: 0.42857142857142855, 49: 0.42857142857142855, 50: 0.42857142857142855, 52: 0.42857142857142855, 61: 0.42857142857142855, 51: 0.42857142857142855, 53: 0.42857142857142855, 54: 0.42857142857142855, 56: 0.42857142857142855, 57: 0.42857142857142855, 59: 0.42857142857142855, 55: 0.42857142857142855, 60: 0.42857142857142855, 62: 0.42857142857142855, 63: 0.42857142857142855} ['47']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/SORT_EVEN_PLACED_ELEMENTS_INCREASING_ODD_PLACED_DECREASING_ORDER.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({44: 10, 45: 10, 46: 10, 47: 10, 49: 10, 50: 10, 53: 10, 48: 10, 52: 10, 54: 10, 55: 10, 56: 10, 57: 10, 58: 10, 60: 10, 59: 10, 61: 10, 62: 10, 64: 10, 63: 10, 65: 10}), 'PASS': Counter()})
44 {44: inf, 45: inf, 46: inf, 47: inf, 49: inf, 50: inf, 53: inf, 48: inf, 52: inf, 54: inf, 55: inf, 56: inf, 57: inf, 58: inf, 60: inf, 59: inf, 61: inf, 62: inf, 64: inf, 63: inf, 65: inf} ['55']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MULTIPLY_LARGE_NUMBERS_REPRESENTED_AS_STRINGS.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({57: 10, 58: 10, 59: 10, 61: 10, 62: 10, 63: 10, 64: 10, 65: 10, 67: 10, 68: 10, 69: 10, 70: 10, 71: 10, 73: 10, 74: 10, 75: 10, 76: 10, 77: 10, 72: 10, 79: 10, 81: 10, 66: 10, 80: 8, 83: 1, 84: 1, 86: 1, 88: 1, 89: 1, 90: 1}), 'PASS': Counter()})
57 {57: inf, 58: inf, 59: inf, 61: inf, 62: inf, 63: inf, 64: inf, 65: inf, 67: inf, 68: inf, 69: inf, 70: inf, 71: inf, 73: inf, 74: inf, 75: inf, 76: inf, 77: inf, 72: inf, 79: inf, 81: inf, 66: inf, 80: 4.0, 83: 0.1111111111111111, 84: 0.1111111111111111, 86: 0.1111111111111111, 88: 0.1111111111111111, 89: 0.1111111111111111, 90: 0.1111111111111111} ['90']
Testing /Users/anon/PycharmProjects/SBFL_CPP/transcoder-st/java/sbfl/MAXIMUM_PROFIT_BY_BUYING_AND_SELLING_A_SHARE_AT_MOST_K_TIMES_1.cpp
defaultdict(<class 'collections.Counter'>, {'FAIL': Counter({46: 10, 47: 10, 48: 10, 50: 10, 49: 10, 52: 10, 53: 10, 55: 10, 54: 10, 57: 5, 58: 5, 60: 5, 61: 5, 62: 5, 64: 5, 65: 5, 63: 5, 67: 4, 59: 4, 68: 1, 69: 1}), 'PASS': Counter()})
46 {46: inf, 47: inf, 48: inf, 50: inf, 49: inf, 52: inf, 53: inf, 55: inf, 54: inf, 57: 1.0, 58: 1.0, 60: 1.0, 61: 1.0, 62: 1.0, 64: 1.0, 65: 1.0, 63: 1.0, 67: 0.6666666666666666, 59: 0.6666666666666666, 68: 0.1111111111111111, 69: 0.1111111111111111} ['46', '60']
Got it right 9 times.
Total 39
