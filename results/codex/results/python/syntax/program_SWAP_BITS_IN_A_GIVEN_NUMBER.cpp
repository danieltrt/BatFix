// Copyright (c) 2019-present, Facebook, Inc.
// All rights reserved.
//
// This source code is licensed under the license found in the
// LICENSE file in the root directory of this source tree.
//

#include <iostream>
#include <cstdlib>
#include <string>
#include <vector>
#include <fstream>
#include <iomanip>
#include <vector>
#include <map>
#include <unordered_map>
#include <set>
#include <unordered_set>
#include <numeric>
#include <algorithm>
#include <queue>
using namespace std;
int f_gold ( unsigned int x, unsigned int p1, unsigned int p2, unsigned int n ) {
  unsigned int set1 = ( x >> p1 ) & ( ( 1U << n ) - 1 );
  unsigned int set2 = ( x >> p2 ) & ( ( 1U << n ) - 1 );
  unsigned int Xor = ( set1 ^ set2 );
  Xor = ( Xor << p1 ) | ( Xor << p2 );
  unsigned int result = x ^ Xor;
  return result;
}


int foo;
int env_var_0 = atoi(getenv("env_var_0"));
int f_filled(int x, int p1, int p2, int n) {
    int set1 = (x >> p1) & ((1 << n) - 1);
    if(env_var_0 == 0) { n = n >> n & (1 << n) - 1; }
    if(env_var_0 == 1) { n = n >> n & (1 << p1) - 1; }
    if(env_var_0 == 2) { n = n >> n & (1 << p2) - 1; }
    if(env_var_0 == 3) { n = n >> n & (1 << set1) - 1; }
    if(env_var_0 == 4) { n = n >> n & (1 << x) - 1; }
    if(env_var_0 == 5) { n = n >> p1 & (1 << n) - 1; }
    if(env_var_0 == 6) { n = n >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 7) { n = n >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 8) { n = n >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 9) { n = n >> p1 & (1 << x) - 1; }
    if(env_var_0 == 10) { n = n >> p2 & (1 << n) - 1; }
    if(env_var_0 == 11) { n = n >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 12) { n = n >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 13) { n = n >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 14) { n = n >> p2 & (1 << x) - 1; }
    if(env_var_0 == 15) { n = n >> set1 & (1 << n) - 1; }
    if(env_var_0 == 16) { n = n >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 17) { n = n >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 18) { n = n >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 19) { n = n >> set1 & (1 << x) - 1; }
    if(env_var_0 == 20) { n = n >> x & (1 << n) - 1; }
    if(env_var_0 == 21) { n = n >> x & (1 << p1) - 1; }
    if(env_var_0 == 22) { n = n >> x & (1 << p2) - 1; }
    if(env_var_0 == 23) { n = n >> x & (1 << set1) - 1; }
    if(env_var_0 == 24) { n = n >> x & (1 << x) - 1; }
    if(env_var_0 == 25) { n = p1 >> n & (1 << n) - 1; }
    if(env_var_0 == 26) { n = p1 >> n & (1 << p1) - 1; }
    if(env_var_0 == 27) { n = p1 >> n & (1 << p2) - 1; }
    if(env_var_0 == 28) { n = p1 >> n & (1 << set1) - 1; }
    if(env_var_0 == 29) { n = p1 >> n & (1 << x) - 1; }
    if(env_var_0 == 30) { n = p1 >> p1 & (1 << n) - 1; }
    if(env_var_0 == 31) { n = p1 >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 32) { n = p1 >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 33) { n = p1 >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 34) { n = p1 >> p1 & (1 << x) - 1; }
    if(env_var_0 == 35) { n = p1 >> p2 & (1 << n) - 1; }
    if(env_var_0 == 36) { n = p1 >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 37) { n = p1 >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 38) { n = p1 >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 39) { n = p1 >> p2 & (1 << x) - 1; }
    if(env_var_0 == 40) { n = p1 >> set1 & (1 << n) - 1; }
    if(env_var_0 == 41) { n = p1 >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 42) { n = p1 >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 43) { n = p1 >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 44) { n = p1 >> set1 & (1 << x) - 1; }
    if(env_var_0 == 45) { n = p1 >> x & (1 << n) - 1; }
    if(env_var_0 == 46) { n = p1 >> x & (1 << p1) - 1; }
    if(env_var_0 == 47) { n = p1 >> x & (1 << p2) - 1; }
    if(env_var_0 == 48) { n = p1 >> x & (1 << set1) - 1; }
    if(env_var_0 == 49) { n = p1 >> x & (1 << x) - 1; }
    if(env_var_0 == 50) { n = p2 >> n & (1 << n) - 1; }
    if(env_var_0 == 51) { n = p2 >> n & (1 << p1) - 1; }
    if(env_var_0 == 52) { n = p2 >> n & (1 << p2) - 1; }
    if(env_var_0 == 53) { n = p2 >> n & (1 << set1) - 1; }
    if(env_var_0 == 54) { n = p2 >> n & (1 << x) - 1; }
    if(env_var_0 == 55) { n = p2 >> p1 & (1 << n) - 1; }
    if(env_var_0 == 56) { n = p2 >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 57) { n = p2 >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 58) { n = p2 >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 59) { n = p2 >> p1 & (1 << x) - 1; }
    if(env_var_0 == 60) { n = p2 >> p2 & (1 << n) - 1; }
    if(env_var_0 == 61) { n = p2 >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 62) { n = p2 >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 63) { n = p2 >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 64) { n = p2 >> p2 & (1 << x) - 1; }
    if(env_var_0 == 65) { n = p2 >> set1 & (1 << n) - 1; }
    if(env_var_0 == 66) { n = p2 >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 67) { n = p2 >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 68) { n = p2 >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 69) { n = p2 >> set1 & (1 << x) - 1; }
    if(env_var_0 == 70) { n = p2 >> x & (1 << n) - 1; }
    if(env_var_0 == 71) { n = p2 >> x & (1 << p1) - 1; }
    if(env_var_0 == 72) { n = p2 >> x & (1 << p2) - 1; }
    if(env_var_0 == 73) { n = p2 >> x & (1 << set1) - 1; }
    if(env_var_0 == 74) { n = p2 >> x & (1 << x) - 1; }
    if(env_var_0 == 75) { n = set1 >> n & (1 << n) - 1; }
    if(env_var_0 == 76) { n = set1 >> n & (1 << p1) - 1; }
    if(env_var_0 == 77) { n = set1 >> n & (1 << p2) - 1; }
    if(env_var_0 == 78) { n = set1 >> n & (1 << set1) - 1; }
    if(env_var_0 == 79) { n = set1 >> n & (1 << x) - 1; }
    if(env_var_0 == 80) { n = set1 >> p1 & (1 << n) - 1; }
    if(env_var_0 == 81) { n = set1 >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 82) { n = set1 >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 83) { n = set1 >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 84) { n = set1 >> p1 & (1 << x) - 1; }
    if(env_var_0 == 85) { n = set1 >> p2 & (1 << n) - 1; }
    if(env_var_0 == 86) { n = set1 >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 87) { n = set1 >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 88) { n = set1 >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 89) { n = set1 >> p2 & (1 << x) - 1; }
    if(env_var_0 == 90) { n = set1 >> set1 & (1 << n) - 1; }
    if(env_var_0 == 91) { n = set1 >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 92) { n = set1 >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 93) { n = set1 >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 94) { n = set1 >> set1 & (1 << x) - 1; }
    if(env_var_0 == 95) { n = set1 >> x & (1 << n) - 1; }
    if(env_var_0 == 96) { n = set1 >> x & (1 << p1) - 1; }
    if(env_var_0 == 97) { n = set1 >> x & (1 << p2) - 1; }
    if(env_var_0 == 98) { n = set1 >> x & (1 << set1) - 1; }
    if(env_var_0 == 99) { n = set1 >> x & (1 << x) - 1; }
    if(env_var_0 == 100) { n = x >> n & (1 << n) - 1; }
    if(env_var_0 == 101) { n = x >> n & (1 << p1) - 1; }
    if(env_var_0 == 102) { n = x >> n & (1 << p2) - 1; }
    if(env_var_0 == 103) { n = x >> n & (1 << set1) - 1; }
    if(env_var_0 == 104) { n = x >> n & (1 << x) - 1; }
    if(env_var_0 == 105) { n = x >> p1 & (1 << n) - 1; }
    if(env_var_0 == 106) { n = x >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 107) { n = x >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 108) { n = x >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 109) { n = x >> p1 & (1 << x) - 1; }
    if(env_var_0 == 110) { n = x >> p2 & (1 << n) - 1; }
    if(env_var_0 == 111) { n = x >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 112) { n = x >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 113) { n = x >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 114) { n = x >> p2 & (1 << x) - 1; }
    if(env_var_0 == 115) { n = x >> set1 & (1 << n) - 1; }
    if(env_var_0 == 116) { n = x >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 117) { n = x >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 118) { n = x >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 119) { n = x >> set1 & (1 << x) - 1; }
    if(env_var_0 == 120) { n = x >> x & (1 << n) - 1; }
    if(env_var_0 == 121) { n = x >> x & (1 << p1) - 1; }
    if(env_var_0 == 122) { n = x >> x & (1 << p2) - 1; }
    if(env_var_0 == 123) { n = x >> x & (1 << set1) - 1; }
    if(env_var_0 == 124) { n = x >> x & (1 << x) - 1; }
    if(env_var_0 == 125) { p1 = n >> n & (1 << n) - 1; }
    if(env_var_0 == 126) { p1 = n >> n & (1 << p1) - 1; }
    if(env_var_0 == 127) { p1 = n >> n & (1 << p2) - 1; }
    if(env_var_0 == 128) { p1 = n >> n & (1 << set1) - 1; }
    if(env_var_0 == 129) { p1 = n >> n & (1 << x) - 1; }
    if(env_var_0 == 130) { p1 = n >> p1 & (1 << n) - 1; }
    if(env_var_0 == 131) { p1 = n >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 132) { p1 = n >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 133) { p1 = n >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 134) { p1 = n >> p1 & (1 << x) - 1; }
    if(env_var_0 == 135) { p1 = n >> p2 & (1 << n) - 1; }
    if(env_var_0 == 136) { p1 = n >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 137) { p1 = n >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 138) { p1 = n >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 139) { p1 = n >> p2 & (1 << x) - 1; }
    if(env_var_0 == 140) { p1 = n >> set1 & (1 << n) - 1; }
    if(env_var_0 == 141) { p1 = n >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 142) { p1 = n >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 143) { p1 = n >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 144) { p1 = n >> set1 & (1 << x) - 1; }
    if(env_var_0 == 145) { p1 = n >> x & (1 << n) - 1; }
    if(env_var_0 == 146) { p1 = n >> x & (1 << p1) - 1; }
    if(env_var_0 == 147) { p1 = n >> x & (1 << p2) - 1; }
    if(env_var_0 == 148) { p1 = n >> x & (1 << set1) - 1; }
    if(env_var_0 == 149) { p1 = n >> x & (1 << x) - 1; }
    if(env_var_0 == 150) { p1 = p1 >> n & (1 << n) - 1; }
    if(env_var_0 == 151) { p1 = p1 >> n & (1 << p1) - 1; }
    if(env_var_0 == 152) { p1 = p1 >> n & (1 << p2) - 1; }
    if(env_var_0 == 153) { p1 = p1 >> n & (1 << set1) - 1; }
    if(env_var_0 == 154) { p1 = p1 >> n & (1 << x) - 1; }
    if(env_var_0 == 155) { p1 = p1 >> p1 & (1 << n) - 1; }
    if(env_var_0 == 156) { p1 = p1 >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 157) { p1 = p1 >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 158) { p1 = p1 >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 159) { p1 = p1 >> p1 & (1 << x) - 1; }
    if(env_var_0 == 160) { p1 = p1 >> p2 & (1 << n) - 1; }
    if(env_var_0 == 161) { p1 = p1 >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 162) { p1 = p1 >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 163) { p1 = p1 >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 164) { p1 = p1 >> p2 & (1 << x) - 1; }
    if(env_var_0 == 165) { p1 = p1 >> set1 & (1 << n) - 1; }
    if(env_var_0 == 166) { p1 = p1 >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 167) { p1 = p1 >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 168) { p1 = p1 >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 169) { p1 = p1 >> set1 & (1 << x) - 1; }
    if(env_var_0 == 170) { p1 = p1 >> x & (1 << n) - 1; }
    if(env_var_0 == 171) { p1 = p1 >> x & (1 << p1) - 1; }
    if(env_var_0 == 172) { p1 = p1 >> x & (1 << p2) - 1; }
    if(env_var_0 == 173) { p1 = p1 >> x & (1 << set1) - 1; }
    if(env_var_0 == 174) { p1 = p1 >> x & (1 << x) - 1; }
    if(env_var_0 == 175) { p1 = p2 >> n & (1 << n) - 1; }
    if(env_var_0 == 176) { p1 = p2 >> n & (1 << p1) - 1; }
    if(env_var_0 == 177) { p1 = p2 >> n & (1 << p2) - 1; }
    if(env_var_0 == 178) { p1 = p2 >> n & (1 << set1) - 1; }
    if(env_var_0 == 179) { p1 = p2 >> n & (1 << x) - 1; }
    if(env_var_0 == 180) { p1 = p2 >> p1 & (1 << n) - 1; }
    if(env_var_0 == 181) { p1 = p2 >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 182) { p1 = p2 >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 183) { p1 = p2 >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 184) { p1 = p2 >> p1 & (1 << x) - 1; }
    if(env_var_0 == 185) { p1 = p2 >> p2 & (1 << n) - 1; }
    if(env_var_0 == 186) { p1 = p2 >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 187) { p1 = p2 >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 188) { p1 = p2 >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 189) { p1 = p2 >> p2 & (1 << x) - 1; }
    if(env_var_0 == 190) { p1 = p2 >> set1 & (1 << n) - 1; }
    if(env_var_0 == 191) { p1 = p2 >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 192) { p1 = p2 >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 193) { p1 = p2 >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 194) { p1 = p2 >> set1 & (1 << x) - 1; }
    if(env_var_0 == 195) { p1 = p2 >> x & (1 << n) - 1; }
    if(env_var_0 == 196) { p1 = p2 >> x & (1 << p1) - 1; }
    if(env_var_0 == 197) { p1 = p2 >> x & (1 << p2) - 1; }
    if(env_var_0 == 198) { p1 = p2 >> x & (1 << set1) - 1; }
    if(env_var_0 == 199) { p1 = p2 >> x & (1 << x) - 1; }
    if(env_var_0 == 200) { p1 = set1 >> n & (1 << n) - 1; }
    if(env_var_0 == 201) { p1 = set1 >> n & (1 << p1) - 1; }
    if(env_var_0 == 202) { p1 = set1 >> n & (1 << p2) - 1; }
    if(env_var_0 == 203) { p1 = set1 >> n & (1 << set1) - 1; }
    if(env_var_0 == 204) { p1 = set1 >> n & (1 << x) - 1; }
    if(env_var_0 == 205) { p1 = set1 >> p1 & (1 << n) - 1; }
    if(env_var_0 == 206) { p1 = set1 >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 207) { p1 = set1 >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 208) { p1 = set1 >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 209) { p1 = set1 >> p1 & (1 << x) - 1; }
    if(env_var_0 == 210) { p1 = set1 >> p2 & (1 << n) - 1; }
    if(env_var_0 == 211) { p1 = set1 >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 212) { p1 = set1 >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 213) { p1 = set1 >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 214) { p1 = set1 >> p2 & (1 << x) - 1; }
    if(env_var_0 == 215) { p1 = set1 >> set1 & (1 << n) - 1; }
    if(env_var_0 == 216) { p1 = set1 >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 217) { p1 = set1 >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 218) { p1 = set1 >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 219) { p1 = set1 >> set1 & (1 << x) - 1; }
    if(env_var_0 == 220) { p1 = set1 >> x & (1 << n) - 1; }
    if(env_var_0 == 221) { p1 = set1 >> x & (1 << p1) - 1; }
    if(env_var_0 == 222) { p1 = set1 >> x & (1 << p2) - 1; }
    if(env_var_0 == 223) { p1 = set1 >> x & (1 << set1) - 1; }
    if(env_var_0 == 224) { p1 = set1 >> x & (1 << x) - 1; }
    if(env_var_0 == 225) { p1 = x >> n & (1 << n) - 1; }
    if(env_var_0 == 226) { p1 = x >> n & (1 << p1) - 1; }
    if(env_var_0 == 227) { p1 = x >> n & (1 << p2) - 1; }
    if(env_var_0 == 228) { p1 = x >> n & (1 << set1) - 1; }
    if(env_var_0 == 229) { p1 = x >> n & (1 << x) - 1; }
    if(env_var_0 == 230) { p1 = x >> p1 & (1 << n) - 1; }
    if(env_var_0 == 231) { p1 = x >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 232) { p1 = x >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 233) { p1 = x >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 234) { p1 = x >> p1 & (1 << x) - 1; }
    if(env_var_0 == 235) { p1 = x >> p2 & (1 << n) - 1; }
    if(env_var_0 == 236) { p1 = x >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 237) { p1 = x >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 238) { p1 = x >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 239) { p1 = x >> p2 & (1 << x) - 1; }
    if(env_var_0 == 240) { p1 = x >> set1 & (1 << n) - 1; }
    if(env_var_0 == 241) { p1 = x >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 242) { p1 = x >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 243) { p1 = x >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 244) { p1 = x >> set1 & (1 << x) - 1; }
    if(env_var_0 == 245) { p1 = x >> x & (1 << n) - 1; }
    if(env_var_0 == 246) { p1 = x >> x & (1 << p1) - 1; }
    if(env_var_0 == 247) { p1 = x >> x & (1 << p2) - 1; }
    if(env_var_0 == 248) { p1 = x >> x & (1 << set1) - 1; }
    if(env_var_0 == 249) { p1 = x >> x & (1 << x) - 1; }
    if(env_var_0 == 250) { p2 = n >> n & (1 << n) - 1; }
    if(env_var_0 == 251) { p2 = n >> n & (1 << p1) - 1; }
    if(env_var_0 == 252) { p2 = n >> n & (1 << p2) - 1; }
    if(env_var_0 == 253) { p2 = n >> n & (1 << set1) - 1; }
    if(env_var_0 == 254) { p2 = n >> n & (1 << x) - 1; }
    if(env_var_0 == 255) { p2 = n >> p1 & (1 << n) - 1; }
    if(env_var_0 == 256) { p2 = n >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 257) { p2 = n >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 258) { p2 = n >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 259) { p2 = n >> p1 & (1 << x) - 1; }
    if(env_var_0 == 260) { p2 = n >> p2 & (1 << n) - 1; }
    if(env_var_0 == 261) { p2 = n >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 262) { p2 = n >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 263) { p2 = n >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 264) { p2 = n >> p2 & (1 << x) - 1; }
    if(env_var_0 == 265) { p2 = n >> set1 & (1 << n) - 1; }
    if(env_var_0 == 266) { p2 = n >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 267) { p2 = n >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 268) { p2 = n >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 269) { p2 = n >> set1 & (1 << x) - 1; }
    if(env_var_0 == 270) { p2 = n >> x & (1 << n) - 1; }
    if(env_var_0 == 271) { p2 = n >> x & (1 << p1) - 1; }
    if(env_var_0 == 272) { p2 = n >> x & (1 << p2) - 1; }
    if(env_var_0 == 273) { p2 = n >> x & (1 << set1) - 1; }
    if(env_var_0 == 274) { p2 = n >> x & (1 << x) - 1; }
    if(env_var_0 == 275) { p2 = p1 >> n & (1 << n) - 1; }
    if(env_var_0 == 276) { p2 = p1 >> n & (1 << p1) - 1; }
    if(env_var_0 == 277) { p2 = p1 >> n & (1 << p2) - 1; }
    if(env_var_0 == 278) { p2 = p1 >> n & (1 << set1) - 1; }
    if(env_var_0 == 279) { p2 = p1 >> n & (1 << x) - 1; }
    if(env_var_0 == 280) { p2 = p1 >> p1 & (1 << n) - 1; }
    if(env_var_0 == 281) { p2 = p1 >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 282) { p2 = p1 >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 283) { p2 = p1 >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 284) { p2 = p1 >> p1 & (1 << x) - 1; }
    if(env_var_0 == 285) { p2 = p1 >> p2 & (1 << n) - 1; }
    if(env_var_0 == 286) { p2 = p1 >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 287) { p2 = p1 >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 288) { p2 = p1 >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 289) { p2 = p1 >> p2 & (1 << x) - 1; }
    if(env_var_0 == 290) { p2 = p1 >> set1 & (1 << n) - 1; }
    if(env_var_0 == 291) { p2 = p1 >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 292) { p2 = p1 >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 293) { p2 = p1 >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 294) { p2 = p1 >> set1 & (1 << x) - 1; }
    if(env_var_0 == 295) { p2 = p1 >> x & (1 << n) - 1; }
    if(env_var_0 == 296) { p2 = p1 >> x & (1 << p1) - 1; }
    if(env_var_0 == 297) { p2 = p1 >> x & (1 << p2) - 1; }
    if(env_var_0 == 298) { p2 = p1 >> x & (1 << set1) - 1; }
    if(env_var_0 == 299) { p2 = p1 >> x & (1 << x) - 1; }
    if(env_var_0 == 300) { p2 = p2 >> n & (1 << n) - 1; }
    if(env_var_0 == 301) { p2 = p2 >> n & (1 << p1) - 1; }
    if(env_var_0 == 302) { p2 = p2 >> n & (1 << p2) - 1; }
    if(env_var_0 == 303) { p2 = p2 >> n & (1 << set1) - 1; }
    if(env_var_0 == 304) { p2 = p2 >> n & (1 << x) - 1; }
    if(env_var_0 == 305) { p2 = p2 >> p1 & (1 << n) - 1; }
    if(env_var_0 == 306) { p2 = p2 >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 307) { p2 = p2 >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 308) { p2 = p2 >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 309) { p2 = p2 >> p1 & (1 << x) - 1; }
    if(env_var_0 == 310) { p2 = p2 >> p2 & (1 << n) - 1; }
    if(env_var_0 == 311) { p2 = p2 >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 312) { p2 = p2 >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 313) { p2 = p2 >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 314) { p2 = p2 >> p2 & (1 << x) - 1; }
    if(env_var_0 == 315) { p2 = p2 >> set1 & (1 << n) - 1; }
    if(env_var_0 == 316) { p2 = p2 >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 317) { p2 = p2 >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 318) { p2 = p2 >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 319) { p2 = p2 >> set1 & (1 << x) - 1; }
    if(env_var_0 == 320) { p2 = p2 >> x & (1 << n) - 1; }
    if(env_var_0 == 321) { p2 = p2 >> x & (1 << p1) - 1; }
    if(env_var_0 == 322) { p2 = p2 >> x & (1 << p2) - 1; }
    if(env_var_0 == 323) { p2 = p2 >> x & (1 << set1) - 1; }
    if(env_var_0 == 324) { p2 = p2 >> x & (1 << x) - 1; }
    if(env_var_0 == 325) { p2 = set1 >> n & (1 << n) - 1; }
    if(env_var_0 == 326) { p2 = set1 >> n & (1 << p1) - 1; }
    if(env_var_0 == 327) { p2 = set1 >> n & (1 << p2) - 1; }
    if(env_var_0 == 328) { p2 = set1 >> n & (1 << set1) - 1; }
    if(env_var_0 == 329) { p2 = set1 >> n & (1 << x) - 1; }
    if(env_var_0 == 330) { p2 = set1 >> p1 & (1 << n) - 1; }
    if(env_var_0 == 331) { p2 = set1 >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 332) { p2 = set1 >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 333) { p2 = set1 >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 334) { p2 = set1 >> p1 & (1 << x) - 1; }
    if(env_var_0 == 335) { p2 = set1 >> p2 & (1 << n) - 1; }
    if(env_var_0 == 336) { p2 = set1 >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 337) { p2 = set1 >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 338) { p2 = set1 >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 339) { p2 = set1 >> p2 & (1 << x) - 1; }
    if(env_var_0 == 340) { p2 = set1 >> set1 & (1 << n) - 1; }
    if(env_var_0 == 341) { p2 = set1 >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 342) { p2 = set1 >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 343) { p2 = set1 >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 344) { p2 = set1 >> set1 & (1 << x) - 1; }
    if(env_var_0 == 345) { p2 = set1 >> x & (1 << n) - 1; }
    if(env_var_0 == 346) { p2 = set1 >> x & (1 << p1) - 1; }
    if(env_var_0 == 347) { p2 = set1 >> x & (1 << p2) - 1; }
    if(env_var_0 == 348) { p2 = set1 >> x & (1 << set1) - 1; }
    if(env_var_0 == 349) { p2 = set1 >> x & (1 << x) - 1; }
    if(env_var_0 == 350) { p2 = x >> n & (1 << n) - 1; }
    if(env_var_0 == 351) { p2 = x >> n & (1 << p1) - 1; }
    if(env_var_0 == 352) { p2 = x >> n & (1 << p2) - 1; }
    if(env_var_0 == 353) { p2 = x >> n & (1 << set1) - 1; }
    if(env_var_0 == 354) { p2 = x >> n & (1 << x) - 1; }
    if(env_var_0 == 355) { p2 = x >> p1 & (1 << n) - 1; }
    if(env_var_0 == 356) { p2 = x >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 357) { p2 = x >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 358) { p2 = x >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 359) { p2 = x >> p1 & (1 << x) - 1; }
    if(env_var_0 == 360) { p2 = x >> p2 & (1 << n) - 1; }
    if(env_var_0 == 361) { p2 = x >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 362) { p2 = x >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 363) { p2 = x >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 364) { p2 = x >> p2 & (1 << x) - 1; }
    if(env_var_0 == 365) { p2 = x >> set1 & (1 << n) - 1; }
    if(env_var_0 == 366) { p2 = x >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 367) { p2 = x >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 368) { p2 = x >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 369) { p2 = x >> set1 & (1 << x) - 1; }
    if(env_var_0 == 370) { p2 = x >> x & (1 << n) - 1; }
    if(env_var_0 == 371) { p2 = x >> x & (1 << p1) - 1; }
    if(env_var_0 == 372) { p2 = x >> x & (1 << p2) - 1; }
    if(env_var_0 == 373) { p2 = x >> x & (1 << set1) - 1; }
    if(env_var_0 == 374) { p2 = x >> x & (1 << x) - 1; }
    if(env_var_0 == 375) { set1 = n >> n & (1 << n) - 1; }
    if(env_var_0 == 376) { set1 = n >> n & (1 << p1) - 1; }
    if(env_var_0 == 377) { set1 = n >> n & (1 << p2) - 1; }
    if(env_var_0 == 378) { set1 = n >> n & (1 << set1) - 1; }
    if(env_var_0 == 379) { set1 = n >> n & (1 << x) - 1; }
    if(env_var_0 == 380) { set1 = n >> p1 & (1 << n) - 1; }
    if(env_var_0 == 381) { set1 = n >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 382) { set1 = n >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 383) { set1 = n >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 384) { set1 = n >> p1 & (1 << x) - 1; }
    if(env_var_0 == 385) { set1 = n >> p2 & (1 << n) - 1; }
    if(env_var_0 == 386) { set1 = n >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 387) { set1 = n >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 388) { set1 = n >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 389) { set1 = n >> p2 & (1 << x) - 1; }
    if(env_var_0 == 390) { set1 = n >> set1 & (1 << n) - 1; }
    if(env_var_0 == 391) { set1 = n >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 392) { set1 = n >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 393) { set1 = n >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 394) { set1 = n >> set1 & (1 << x) - 1; }
    if(env_var_0 == 395) { set1 = n >> x & (1 << n) - 1; }
    if(env_var_0 == 396) { set1 = n >> x & (1 << p1) - 1; }
    if(env_var_0 == 397) { set1 = n >> x & (1 << p2) - 1; }
    if(env_var_0 == 398) { set1 = n >> x & (1 << set1) - 1; }
    if(env_var_0 == 399) { set1 = n >> x & (1 << x) - 1; }
    if(env_var_0 == 400) { set1 = p1 >> n & (1 << n) - 1; }
    if(env_var_0 == 401) { set1 = p1 >> n & (1 << p1) - 1; }
    if(env_var_0 == 402) { set1 = p1 >> n & (1 << p2) - 1; }
    if(env_var_0 == 403) { set1 = p1 >> n & (1 << set1) - 1; }
    if(env_var_0 == 404) { set1 = p1 >> n & (1 << x) - 1; }
    if(env_var_0 == 405) { set1 = p1 >> p1 & (1 << n) - 1; }
    if(env_var_0 == 406) { set1 = p1 >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 407) { set1 = p1 >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 408) { set1 = p1 >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 409) { set1 = p1 >> p1 & (1 << x) - 1; }
    if(env_var_0 == 410) { set1 = p1 >> p2 & (1 << n) - 1; }
    if(env_var_0 == 411) { set1 = p1 >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 412) { set1 = p1 >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 413) { set1 = p1 >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 414) { set1 = p1 >> p2 & (1 << x) - 1; }
    if(env_var_0 == 415) { set1 = p1 >> set1 & (1 << n) - 1; }
    if(env_var_0 == 416) { set1 = p1 >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 417) { set1 = p1 >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 418) { set1 = p1 >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 419) { set1 = p1 >> set1 & (1 << x) - 1; }
    if(env_var_0 == 420) { set1 = p1 >> x & (1 << n) - 1; }
    if(env_var_0 == 421) { set1 = p1 >> x & (1 << p1) - 1; }
    if(env_var_0 == 422) { set1 = p1 >> x & (1 << p2) - 1; }
    if(env_var_0 == 423) { set1 = p1 >> x & (1 << set1) - 1; }
    if(env_var_0 == 424) { set1 = p1 >> x & (1 << x) - 1; }
    if(env_var_0 == 425) { set1 = p2 >> n & (1 << n) - 1; }
    if(env_var_0 == 426) { set1 = p2 >> n & (1 << p1) - 1; }
    if(env_var_0 == 427) { set1 = p2 >> n & (1 << p2) - 1; }
    if(env_var_0 == 428) { set1 = p2 >> n & (1 << set1) - 1; }
    if(env_var_0 == 429) { set1 = p2 >> n & (1 << x) - 1; }
    if(env_var_0 == 430) { set1 = p2 >> p1 & (1 << n) - 1; }
    if(env_var_0 == 431) { set1 = p2 >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 432) { set1 = p2 >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 433) { set1 = p2 >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 434) { set1 = p2 >> p1 & (1 << x) - 1; }
    if(env_var_0 == 435) { set1 = p2 >> p2 & (1 << n) - 1; }
    if(env_var_0 == 436) { set1 = p2 >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 437) { set1 = p2 >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 438) { set1 = p2 >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 439) { set1 = p2 >> p2 & (1 << x) - 1; }
    if(env_var_0 == 440) { set1 = p2 >> set1 & (1 << n) - 1; }
    if(env_var_0 == 441) { set1 = p2 >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 442) { set1 = p2 >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 443) { set1 = p2 >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 444) { set1 = p2 >> set1 & (1 << x) - 1; }
    if(env_var_0 == 445) { set1 = p2 >> x & (1 << n) - 1; }
    if(env_var_0 == 446) { set1 = p2 >> x & (1 << p1) - 1; }
    if(env_var_0 == 447) { set1 = p2 >> x & (1 << p2) - 1; }
    if(env_var_0 == 448) { set1 = p2 >> x & (1 << set1) - 1; }
    if(env_var_0 == 449) { set1 = p2 >> x & (1 << x) - 1; }
    if(env_var_0 == 450) { set1 = set1 >> n & (1 << n) - 1; }
    if(env_var_0 == 451) { set1 = set1 >> n & (1 << p1) - 1; }
    if(env_var_0 == 452) { set1 = set1 >> n & (1 << p2) - 1; }
    if(env_var_0 == 453) { set1 = set1 >> n & (1 << set1) - 1; }
    if(env_var_0 == 454) { set1 = set1 >> n & (1 << x) - 1; }
    if(env_var_0 == 455) { set1 = set1 >> p1 & (1 << n) - 1; }
    if(env_var_0 == 456) { set1 = set1 >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 457) { set1 = set1 >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 458) { set1 = set1 >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 459) { set1 = set1 >> p1 & (1 << x) - 1; }
    if(env_var_0 == 460) { set1 = set1 >> p2 & (1 << n) - 1; }
    if(env_var_0 == 461) { set1 = set1 >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 462) { set1 = set1 >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 463) { set1 = set1 >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 464) { set1 = set1 >> p2 & (1 << x) - 1; }
    if(env_var_0 == 465) { set1 = set1 >> set1 & (1 << n) - 1; }
    if(env_var_0 == 466) { set1 = set1 >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 467) { set1 = set1 >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 468) { set1 = set1 >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 469) { set1 = set1 >> set1 & (1 << x) - 1; }
    if(env_var_0 == 470) { set1 = set1 >> x & (1 << n) - 1; }
    if(env_var_0 == 471) { set1 = set1 >> x & (1 << p1) - 1; }
    if(env_var_0 == 472) { set1 = set1 >> x & (1 << p2) - 1; }
    if(env_var_0 == 473) { set1 = set1 >> x & (1 << set1) - 1; }
    if(env_var_0 == 474) { set1 = set1 >> x & (1 << x) - 1; }
    if(env_var_0 == 475) { set1 = x >> n & (1 << n) - 1; }
    if(env_var_0 == 476) { set1 = x >> n & (1 << p1) - 1; }
    if(env_var_0 == 477) { set1 = x >> n & (1 << p2) - 1; }
    if(env_var_0 == 478) { set1 = x >> n & (1 << set1) - 1; }
    if(env_var_0 == 479) { set1 = x >> n & (1 << x) - 1; }
    if(env_var_0 == 480) { set1 = x >> p1 & (1 << n) - 1; }
    if(env_var_0 == 481) { set1 = x >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 482) { set1 = x >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 483) { set1 = x >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 484) { set1 = x >> p1 & (1 << x) - 1; }
    if(env_var_0 == 485) { set1 = x >> p2 & (1 << n) - 1; }
    if(env_var_0 == 486) { set1 = x >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 487) { set1 = x >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 488) { set1 = x >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 489) { set1 = x >> p2 & (1 << x) - 1; }
    if(env_var_0 == 490) { set1 = x >> set1 & (1 << n) - 1; }
    if(env_var_0 == 491) { set1 = x >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 492) { set1 = x >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 493) { set1 = x >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 494) { set1 = x >> set1 & (1 << x) - 1; }
    if(env_var_0 == 495) { set1 = x >> x & (1 << n) - 1; }
    if(env_var_0 == 496) { set1 = x >> x & (1 << p1) - 1; }
    if(env_var_0 == 497) { set1 = x >> x & (1 << p2) - 1; }
    if(env_var_0 == 498) { set1 = x >> x & (1 << set1) - 1; }
    if(env_var_0 == 499) { set1 = x >> x & (1 << x) - 1; }
    if(env_var_0 == 500) { x = n >> n & (1 << n) - 1; }
    if(env_var_0 == 501) { x = n >> n & (1 << p1) - 1; }
    if(env_var_0 == 502) { x = n >> n & (1 << p2) - 1; }
    if(env_var_0 == 503) { x = n >> n & (1 << set1) - 1; }
    if(env_var_0 == 504) { x = n >> n & (1 << x) - 1; }
    if(env_var_0 == 505) { x = n >> p1 & (1 << n) - 1; }
    if(env_var_0 == 506) { x = n >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 507) { x = n >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 508) { x = n >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 509) { x = n >> p1 & (1 << x) - 1; }
    if(env_var_0 == 510) { x = n >> p2 & (1 << n) - 1; }
    if(env_var_0 == 511) { x = n >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 512) { x = n >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 513) { x = n >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 514) { x = n >> p2 & (1 << x) - 1; }
    if(env_var_0 == 515) { x = n >> set1 & (1 << n) - 1; }
    if(env_var_0 == 516) { x = n >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 517) { x = n >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 518) { x = n >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 519) { x = n >> set1 & (1 << x) - 1; }
    if(env_var_0 == 520) { x = n >> x & (1 << n) - 1; }
    if(env_var_0 == 521) { x = n >> x & (1 << p1) - 1; }
    if(env_var_0 == 522) { x = n >> x & (1 << p2) - 1; }
    if(env_var_0 == 523) { x = n >> x & (1 << set1) - 1; }
    if(env_var_0 == 524) { x = n >> x & (1 << x) - 1; }
    if(env_var_0 == 525) { x = p1 >> n & (1 << n) - 1; }
    if(env_var_0 == 526) { x = p1 >> n & (1 << p1) - 1; }
    if(env_var_0 == 527) { x = p1 >> n & (1 << p2) - 1; }
    if(env_var_0 == 528) { x = p1 >> n & (1 << set1) - 1; }
    if(env_var_0 == 529) { x = p1 >> n & (1 << x) - 1; }
    if(env_var_0 == 530) { x = p1 >> p1 & (1 << n) - 1; }
    if(env_var_0 == 531) { x = p1 >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 532) { x = p1 >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 533) { x = p1 >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 534) { x = p1 >> p1 & (1 << x) - 1; }
    if(env_var_0 == 535) { x = p1 >> p2 & (1 << n) - 1; }
    if(env_var_0 == 536) { x = p1 >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 537) { x = p1 >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 538) { x = p1 >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 539) { x = p1 >> p2 & (1 << x) - 1; }
    if(env_var_0 == 540) { x = p1 >> set1 & (1 << n) - 1; }
    if(env_var_0 == 541) { x = p1 >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 542) { x = p1 >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 543) { x = p1 >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 544) { x = p1 >> set1 & (1 << x) - 1; }
    if(env_var_0 == 545) { x = p1 >> x & (1 << n) - 1; }
    if(env_var_0 == 546) { x = p1 >> x & (1 << p1) - 1; }
    if(env_var_0 == 547) { x = p1 >> x & (1 << p2) - 1; }
    if(env_var_0 == 548) { x = p1 >> x & (1 << set1) - 1; }
    if(env_var_0 == 549) { x = p1 >> x & (1 << x) - 1; }
    if(env_var_0 == 550) { x = p2 >> n & (1 << n) - 1; }
    if(env_var_0 == 551) { x = p2 >> n & (1 << p1) - 1; }
    if(env_var_0 == 552) { x = p2 >> n & (1 << p2) - 1; }
    if(env_var_0 == 553) { x = p2 >> n & (1 << set1) - 1; }
    if(env_var_0 == 554) { x = p2 >> n & (1 << x) - 1; }
    if(env_var_0 == 555) { x = p2 >> p1 & (1 << n) - 1; }
    if(env_var_0 == 556) { x = p2 >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 557) { x = p2 >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 558) { x = p2 >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 559) { x = p2 >> p1 & (1 << x) - 1; }
    if(env_var_0 == 560) { x = p2 >> p2 & (1 << n) - 1; }
    if(env_var_0 == 561) { x = p2 >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 562) { x = p2 >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 563) { x = p2 >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 564) { x = p2 >> p2 & (1 << x) - 1; }
    if(env_var_0 == 565) { x = p2 >> set1 & (1 << n) - 1; }
    if(env_var_0 == 566) { x = p2 >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 567) { x = p2 >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 568) { x = p2 >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 569) { x = p2 >> set1 & (1 << x) - 1; }
    if(env_var_0 == 570) { x = p2 >> x & (1 << n) - 1; }
    if(env_var_0 == 571) { x = p2 >> x & (1 << p1) - 1; }
    if(env_var_0 == 572) { x = p2 >> x & (1 << p2) - 1; }
    if(env_var_0 == 573) { x = p2 >> x & (1 << set1) - 1; }
    if(env_var_0 == 574) { x = p2 >> x & (1 << x) - 1; }
    if(env_var_0 == 575) { x = set1 >> n & (1 << n) - 1; }
    if(env_var_0 == 576) { x = set1 >> n & (1 << p1) - 1; }
    if(env_var_0 == 577) { x = set1 >> n & (1 << p2) - 1; }
    if(env_var_0 == 578) { x = set1 >> n & (1 << set1) - 1; }
    if(env_var_0 == 579) { x = set1 >> n & (1 << x) - 1; }
    if(env_var_0 == 580) { x = set1 >> p1 & (1 << n) - 1; }
    if(env_var_0 == 581) { x = set1 >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 582) { x = set1 >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 583) { x = set1 >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 584) { x = set1 >> p1 & (1 << x) - 1; }
    if(env_var_0 == 585) { x = set1 >> p2 & (1 << n) - 1; }
    if(env_var_0 == 586) { x = set1 >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 587) { x = set1 >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 588) { x = set1 >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 589) { x = set1 >> p2 & (1 << x) - 1; }
    if(env_var_0 == 590) { x = set1 >> set1 & (1 << n) - 1; }
    if(env_var_0 == 591) { x = set1 >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 592) { x = set1 >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 593) { x = set1 >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 594) { x = set1 >> set1 & (1 << x) - 1; }
    if(env_var_0 == 595) { x = set1 >> x & (1 << n) - 1; }
    if(env_var_0 == 596) { x = set1 >> x & (1 << p1) - 1; }
    if(env_var_0 == 597) { x = set1 >> x & (1 << p2) - 1; }
    if(env_var_0 == 598) { x = set1 >> x & (1 << set1) - 1; }
    if(env_var_0 == 599) { x = set1 >> x & (1 << x) - 1; }
    if(env_var_0 == 600) { x = x >> n & (1 << n) - 1; }
    if(env_var_0 == 601) { x = x >> n & (1 << p1) - 1; }
    if(env_var_0 == 602) { x = x >> n & (1 << p2) - 1; }
    if(env_var_0 == 603) { x = x >> n & (1 << set1) - 1; }
    if(env_var_0 == 604) { x = x >> n & (1 << x) - 1; }
    if(env_var_0 == 605) { x = x >> p1 & (1 << n) - 1; }
    if(env_var_0 == 606) { x = x >> p1 & (1 << p1) - 1; }
    if(env_var_0 == 607) { x = x >> p1 & (1 << p2) - 1; }
    if(env_var_0 == 608) { x = x >> p1 & (1 << set1) - 1; }
    if(env_var_0 == 609) { x = x >> p1 & (1 << x) - 1; }
    if(env_var_0 == 610) { x = x >> p2 & (1 << n) - 1; }
    if(env_var_0 == 611) { x = x >> p2 & (1 << p1) - 1; }
    if(env_var_0 == 612) { x = x >> p2 & (1 << p2) - 1; }
    if(env_var_0 == 613) { x = x >> p2 & (1 << set1) - 1; }
    if(env_var_0 == 614) { x = x >> p2 & (1 << x) - 1; }
    if(env_var_0 == 615) { x = x >> set1 & (1 << n) - 1; }
    if(env_var_0 == 616) { x = x >> set1 & (1 << p1) - 1; }
    if(env_var_0 == 617) { x = x >> set1 & (1 << p2) - 1; }
    if(env_var_0 == 618) { x = x >> set1 & (1 << set1) - 1; }
    if(env_var_0 == 619) { x = x >> set1 & (1 << x) - 1; }
    if(env_var_0 == 620) { x = x >> x & (1 << n) - 1; }
    if(env_var_0 == 621) { x = x >> x & (1 << p1) - 1; }
    if(env_var_0 == 622) { x = x >> x & (1 << p2) - 1; }
    if(env_var_0 == 623) { x = x >> x & (1 << set1) - 1; }
    if(env_var_0 == 624) { x = x >> x & (1 << x) - 1; }

    int result;
    return result;
}


int main() {
    int n_success = 0;
    vector<int> param0 {95,16,55,75,90,58,69,5,36,62};
    vector<int> param1 {88,26,56,35,12,65,64,1,33,69};
    vector<int> param2 {97,59,40,79,59,25,17,59,97,66};
    vector<int> param3 {92,42,41,30,34,19,94,38,44,9};
    for(int i = 0; i < param0.size(); ++i)
    {
        if(f_filled(param0[i],param1[i],param2[i],param3[i]) == f_gold(param0[i],param1[i],param2[i],param3[i]))
        {
            n_success+=1;
        }
    }
    cout << "#Results:" << " " << n_success << ", " << param0.size();
    return 0;
}
