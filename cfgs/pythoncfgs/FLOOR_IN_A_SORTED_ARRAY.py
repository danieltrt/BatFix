Nodes
1;special;;;
2;conditional;foo_1 > foo_2;2;
3;conditional;foo_1 >= foo_2[foo_3];4;
4;statement;foo_1 = fun_1((foo_2 + foo_3) / 2);6;
5;conditional;foo_1[foo_2] == foo_3;7;
6;conditional;foo_1 > 0 and foo_2[foo_3 - 1] <= foo_4 and (foo_5 < foo_6[foo_7]);9;
7;conditional;foo_1 < foo_2[foo_3];11;
8;statement;return fun_1(foo_1, foo_2 + 1, foo_3, foo_4);13;
9;statement;return fun_1(foo_1, foo_2, foo_3 - 1, foo_4);12;
10;statement;return foo_1 - 1;10;
11;statement;return foo_1;8;
12;statement;return foo_1;5;
13;statement;return -1;3;
14;exit;;
Edges
0;2;
1;3;13;
2;4;12;
3;5;
4;6;11;
5;7;10;
6;8;9;
7;14;
8;14;
9;14;
10;14;
11;14;
12;14;
13;Nodes
1;special;;;
2;conditional;foo_1 > foo_2;2;
3;conditional;foo_1 >= foo_2[foo_3];4;
4;statement;foo_1 = fun_1((foo_2 + foo_3) / 2);6;
5;conditional;foo_1[foo_2] == foo_3;7;
6;conditional;foo_1 > 0 and foo_2[foo_3 - 1] <= foo_4 and (foo_5 < foo_6[foo_7]);9;
7;conditional;foo_1 < foo_2[foo_3];11;
8;statement;return fun_1(foo_1, foo_2 + 1, foo_3, foo_4);13;
9;statement;return fun_1(foo_1, foo_2, foo_3 - 1, foo_4);12;
10;statement;return foo_1 - 1;10;
11;statement;return foo_1;8;
12;statement;return foo_1;5;
13;statement;return -1;3;
14;exit;;
Edges
0;2;
1;3;13;
2;4;12;
3;5;
4;6;11;
5;7;10;
6;8;9;
7;14;
8;14;
9;14;
10;14;
11;14;
12;14;
13;