Nodes
1;statement;foo_1 = fun_1(foo_2);8;
2;statement;foo_1 = fun_1(foo_2);9;
3;conditional;foo_1 == 0 or foo_2 == 0;10;
4;statement;foo_1 = [0] * (foo_2 + foo_3);12;
5;statement;foo_1 = 0;13;
6;statement;foo_1 = 0;14;
7;conditional;fun_1(foo_1 - 1, -1, -1);15;
8;statement;foo_1 = fun_1(foo_2) - 1;28;
9;conditional;foo_1 >= 0 and foo_2[foo_3] == 0;29;
10;conditional;foo_1 == -1;31;
11;statement;foo_1 = '';33;
12;conditional;foo_1 >= 0;34;
13;statement;return foo_1;37;
14;statement;foo_1 += fun_1(foo_2[foo_3] + 48);35;
15;statement;foo_1 -= 1;36;
16;statement;return '0';32;
17;statement;foo_1 -= 1;30;
18;statement;foo_1 = 0;16;
19;statement;foo_1 = fun_1(foo_2[foo_3]) - 48;17;
20;statement;foo_1 = 0;18;
21;conditional;fun_1(foo_1 - 1, -1, -1);19;
22;conditional;foo_1 > 0;25;
23;statement;foo_1 += 1;27;
24;statement;foo_1[foo_2 + foo_3] += foo_4;26;
25;statement;foo_1 = fun_1(foo_2[foo_3]) - 48;20;
26;statement;foo_1 = foo_2 * foo_3 + foo_4[foo_5 + foo_6] + foo_7;21;
27;statement;foo_1 = foo_2 // 10;22;
28;statement;foo_1[foo_2 + foo_3] = foo_4 % 10;23;
29;statement;foo_1 += 1;24;
30;statement;return '0';11;
31;exit;;
Edges
0;2;
1;3;
2;4;30;
3;5;
4;6;
5;7;
6;8;18;
7;9;
8;10;17;
9;11;16;
10;12;
11;13;14;
12;31;
13;15;
14;12;
15;31;
16;9;
17;19;
18;20;
19;21;
20;22;25;
21;23;24;
22;7;
23;23;
24;26;
25;27;
26;28;
27;29;
28;21;
29;31;
30;