Nodes
1;statement;foo_1 = fun_1(foo_2);10;
2;statement;foo_1 = [0] * (foo_2 + 1);11;
3;statement;foo_1 = [[false for foo_2 in fun_1(foo_3 + 1)] for foo_4 in fun_2(foo_5 + 1)];12;
4;conditional;fun_1(foo_1);13;
5;conditional;foo < foo;15;
6;conditional;fun_1(foo_1);22;
7;statement;return foo_1[foo_2 - 1];30;
8;conditional;foo_1[0][foo_2] == true;23;
9;statement;foo_1[foo_2] = foo_3.maxsize;26;
10;conditional;fun_1(foo_1);27;
11;conditional;foo_1[foo_2 + 1][foo_3] == true and 1 + foo_4[foo_5] < foo_6[foo_7];28;
12;statement;foo_1[foo_2] = 1 + foo_3[foo_4];29;
13;statement;foo_1[foo_2] = 0;24;
14;conditional;fun_1(foo_1 - foo_2 + 1);16;
15;statement;foo_1 = foo_2 + foo_3 - 1;17;
16;conditional;foo_1 == 2;18;
17;statement;foo_1[foo_2][foo_3] = foo_4[foo_5] == foo_6[foo_7] and foo_8[foo_9 + 1][foo_10 - 1];21;
18;statement;foo_1[foo_2][foo_3] = foo_4[foo_5] == foo_6[foo_7];19;
19;statement;foo_1[foo_2][foo_3] = true;14;
20;exit;;
Edges
0;2;
1;3;
2;4;
3;5;19;
4;6;14;
5;7;8;
6;20;
7;9;13;
8;10;
9;6;11;
10;10;12;
11;10;
12;6;
13;5;15;
14;16;
15;17;18;
16;14;
17;14;
18;4;
19;