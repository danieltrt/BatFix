Nodes
1;statement;foo_1 = fun_1(foo_2);8;
2;statement;foo_1 = fun_1(foo_2);9;
3;statement;foo_1 = [0] * foo_2;10;
4;statement;foo_1 = 0;11;
5;statement;foo_1[foo_2 - 1] = -1;12;
6;statement;foo_1 = foo_2 - 1;13;
7;conditional;fun_1(foo_1 - 2, 0, -1);14;
8;statement;foo_1 = -1;20;
9;conditional;foo < foo;21;
10;conditional;foo_1 != -1;28;
11;conditional;foo < foo;31;
12;statement;return fun_1(foo_0);35;
13;conditional;foo_1[foo_2] != -1;32;
14;statement;(foo_1[foo_2], foo_3[foo_4[foo_5]]) = (foo_6[foo_7[foo_8]], foo_9[foo_10]);33;
15;statement;(foo_1[0], foo_2[foo_3]) = (foo_4[foo_5], foo_6[0]);29;
16;conditional;foo_1[foo_2] != '0';22;
17;conditional;foo_1 == -1;23;
18;conditional;foo_1[foo_2] < foo_3[foo_4];26;
19;statement;foo_1 = foo_2;27;
20;conditional;foo_1[foo_2] < foo_3[0];24;
21;statement;foo_1 = foo_2;25;
22;conditional;foo_1[foo_2] > foo_3[foo_4];15;
23;statement;foo_1[foo_2] = -1;18;
24;statement;foo_1 = foo_2;19;
25;statement;foo_1[foo_2] = foo_3;16;
26;exit;;
Edges
0;2;
1;3;
2;4;
3;5;
4;6;
5;7;
6;8;22;
7;9;
8;10;16;
9;11;15;
10;12;13;
11;26;
12;11;14;
13;12;
14;12;
15;9;17;
16;18;20;
17;9;19;
18;9;
19;9;21;
20;9;
21;23;25;
22;24;
23;7;
24;7;
25;
