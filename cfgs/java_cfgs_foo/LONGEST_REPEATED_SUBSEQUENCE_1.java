Nodes
1;special;;;
2;statement;int n = fun_1();14;
3;statement;int[][] dp = new int[foo_1 + 1][foo_2 + 1];15;
4;statement;int i = 0;16;
5;conditional;foo_1 <= foo_2;17;
6;statement;int j = 0;18;
7;conditional;foo_1 <= foo_2;19;
8;statement;foo_1[foo_2][foo_3] = 0;20;
9;statement;j++;20;
10;statement;i++;18;
11;statement;int i = 1;21;
12;conditional;foo_1 <= foo_2;22;
13;statement;int j = 1;23;
14;conditional;foo_1 <= foo_2;24;
15;conditional;(fun_1(foo_2 - 1) == fun_2(foo_4 - 1)) && (foo_5 != foo_6);25;
16;statement;foo_1[foo_2][foo_3] = 1 + foo_4[foo_5 - 1][foo_6 - 1];25;
17;statement;foo_1[foo_2][foo_3] = fun_1(foo_4[foo_5][foo_6 - 1], foo_7[foo_8 - 1][foo_9]);26;
18;statement;j++;25;
19;statement;i++;23;
20;statement;String res = "";27;
21;statement;int i = foo_1;28;
22;statement;int j = foo_1;28;
23;conditional;(foo_1 > 0) && (foo_2 > 0);29;
24;conditional;foo_1[foo_2][foo_3] == (foo_4[foo_5 - 1][foo_6 - 1] + 1);30;
25;statement;res = foo_1 + fun_1(foo_3 - 1);31;
26;statement;i--;32;
27;statement;j--;33;
28;conditional;foo_1[foo_2][foo_3] == foo_4[foo_5 - 1][foo_6];35;
29;statement;i--;35;
30;statement;j--;36;
31;statement;String reverse = "";38;
32;statement;int k = fun_1() - 1;39;
33;conditional;foo_1 >= 0;40;
34;statement;reverse = foo_1 + fun_1(foo_3);42;
35;statement;k--;41;
36;statement;return foo_1;44;
37;exit;;;
Edges
0;2;
1;3;
2;4;
3;5;
4;6;11;
5;7;
6;8;10;
7;9;
8;7;
9;5;
10;12;
11;13;20;
12;14;
13;15;19;
14;16;17;
15;18;
16;18;
17;14;
18;12;
19;21;
20;22;
21;23;
22;31;24;
23;25;28;
24;26;
25;27;
26;23;
27;29;30;
28;23;
29;23;
30;32;
31;33;
32;34;36;
33;35;
34;33;
35;37;
36;
