Nodes
1;special;;;
2;statement;boolean found = false;14;
3;statement;fun_1(foo_1);15;
4;statement;int i = foo_1 - 1;16;
5;conditional;foo_1 >= 0;17;
6;statement;int j = 0;19;
7;conditional;foo_1 < foo_2;20;
8;conditional;foo_1 == foo_2;22;
9;statement;continue;22;
10;statement;int k = foo_1 + 1;23;
11;conditional;foo_1 < foo_2;24;
12;conditional;foo_1 == foo_2;26;
13;statement;continue;26;
14;statement;int l = foo_1 + 1;27;
15;conditional;foo_1 < foo_2;28;
16;conditional;foo_1 == foo_2;30;
17;statement;continue;30;
18;conditional;foo_1[foo_2] == ((foo_3[foo_4] + foo_5[foo_6]) + foo_7[foo_8]);31;
19;statement;found = true;32;
20;statement;return foo_1[foo_2];33;
21;exit;;;
22;statement;l++;29;
23;statement;k++;25;
24;statement;j++;21;
25;statement;i--;18;
26;conditional;foo_1 == false;39;
27;statement;return Integer.MAX_VALUE;39;
28;statement;return -1;40;
Edges
0;2;
1;3;
2;4;
3;5;
4;6;26;
5;7;
6;8;25;
7;9;10;
8;7;
9;11;
10;12;24;
11;13;14;
12;11;
13;15;
14;16;23;
15;17;18;
16;15;
17;19;22;
18;20;
19;21;
20;
21;15;
22;11;
23;7;
24;5;
25;27;28;
26;21;
27;21;
