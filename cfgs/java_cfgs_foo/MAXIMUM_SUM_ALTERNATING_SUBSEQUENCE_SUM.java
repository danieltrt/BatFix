Nodes
1;special;;;
2;conditional;foo_1 == 1;15;
3;statement;return foo_1[0];16;
4;exit;;;
5;statement;int[] dec = new int[foo_1];17;
6;statement;int[] inc = new int[foo_1];18;
7;statement;foo_1[0] = foo_2[0] = foo_3[0];19;
8;statement;int flag = 0;20;
9;statement;int i = 1;21;
10;conditional;foo_1 < foo_2;22;
11;statement;int j = 0;24;
12;conditional;foo_1 < foo_2;25;
13;conditional;foo_1[foo_2] > foo_3[foo_4];27;
14;statement;foo_1[foo_2] = fun_1(foo_3[foo_4], foo_5[foo_6] + foo_7[foo_8]);28;
15;statement;flag = 1;29;
16;conditional;(foo_1[foo_2] < foo_3[foo_4]) && (foo_5 == 1);31;
17;statement;foo_1[foo_2] = fun_1(foo_3[foo_4], foo_5[foo_6] + foo_7[foo_8]);31;
18;statement;j++;26;
19;statement;i++;23;
20;statement;int result = Integer.MIN_VALUE;34;
21;statement;int i = 0;35;
22;conditional;foo_1 < foo_2;36;
23;conditional;foo_1 < foo_2[foo_3];38;
24;statement;result = foo_1[foo_2];38;
25;conditional;foo_1 < foo_2[foo_3];39;
26;statement;result = foo_1[foo_2];39;
27;statement;i++;37;
28;statement;return foo_1;41;
Edges
0;2;
1;3;5;
2;4;
3;
4;6;
5;7;
6;8;
7;9;
8;10;
9;11;20;
10;12;
11;13;19;
12;14;16;
13;15;
14;18;
15;17;18;
16;18;
17;12;
18;10;
19;21;
20;22;
21;23;28;
22;24;25;
23;25;
24;26;27;
25;27;
26;22;
27;4;
