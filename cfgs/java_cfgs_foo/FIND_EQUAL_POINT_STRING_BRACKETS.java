Nodes
1;special;;;
2;statement;int len = fun_1();14;
3;statement;int[] open = new int[foo_1 + 1];15;
4;statement;int[] close = new int[foo_1 + 1];16;
5;statement;int index = -1;17;
6;statement;foo_1[0] = 0;18;
7;statement;foo_1[foo_2] = 0;19;
8;conditional;fun_1(0) == '(';20;
9;statement;foo_1[1] = 1;20;
10;conditional;fun_1(foo_2 - 1) == ')';21;
11;statement;foo_1[foo_2 - 1] = 1;21;
12;statement;int i = 1;22;
13;conditional;foo_1 < foo_2;23;
14;conditional;fun_1(foo_2) == '(';25;
15;statement;foo_1[foo_2 + 1] = foo_3[foo_4] + 1;25;
16;statement;foo_1[foo_2 + 1] = foo_3[foo_4];26;
17;statement;i++;24;
18;statement;int i = foo_1 - 2;28;
19;conditional;foo_1 >= 0;29;
20;conditional;fun_1(foo_2) == ')';31;
21;statement;foo_1[foo_2] = foo_3[foo_4 + 1] + 1;31;
22;statement;foo_1[foo_2] = foo_3[foo_4 + 1];32;
23;statement;i--;30;
24;conditional;foo_1[foo_2] == 0;34;
25;statement;return foo_1;34;
26;exit;;;
27;conditional;foo_1[0] == 0;35;
28;statement;return 0;35;
29;statement;int i = 0;36;
30;conditional;foo_1 <= foo_2;37;
31;conditional;foo_1[foo_2] == foo_3[foo_4];38;
32;statement;index = foo_1;38;
33;statement;i++;38;
34;statement;return foo_1;39;
Edges
0;2;
1;3;
2;4;
3;5;
4;6;
5;7;
6;8;
7;9;10;
8;10;
9;11;12;
10;12;
11;13;
12;14;18;
13;15;16;
14;17;
15;17;
16;13;
17;19;
18;20;24;
19;21;22;
20;23;
21;23;
22;19;
23;25;27;
24;26;
25;
26;28;29;
27;26;
28;30;
29;31;34;
30;32;33;
31;33;
32;30;
33;26;
