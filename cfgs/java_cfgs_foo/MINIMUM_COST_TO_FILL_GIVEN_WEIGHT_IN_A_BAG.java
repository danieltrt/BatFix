Nodes
1;special;;;
2;statement;Vector<Integer> val = new Vector<Integer>();14;
3;statement;Vector<Integer> wt = new Vector<Integer>();15;
4;statement;int size = 0;16;
5;statement;int i = 0;17;
6;conditional;foo_1 < foo_2;18;
7;conditional;foo_1[foo_2] != (-1);20;
8;statement;fun_1(foo_2[foo_3]);21;
9;statement;fun_1(foo_2 + 1);22;
10;statement;size++;23;
11;statement;i++;19;
12;statement;n = foo_1;26;
13;statement;int[][] min_cost = new int[foo_1 + 1][foo_2 + 1];27;
14;statement;int i = 0;28;
15;conditional;foo_1 <= foo_2;29;
16;statement;foo_1[0][foo_2] = Integer.MAX_VALUE;30;
17;statement;i++;30;
18;statement;int i = 1;31;
19;conditional;foo_1 <= foo_2;32;
20;statement;foo_1[foo_2][0] = 0;33;
21;statement;i++;33;
22;statement;int i = 1;34;
23;conditional;foo_1 <= foo_2;35;
24;statement;int j = 1;37;
25;conditional;foo_1 <= foo_2;38;
26;conditional;fun_1(foo_2 - 1) > foo_3;40;
27;statement;foo_1[foo_2][foo_3] = foo_4[foo_5 - 1][foo_6];40;
28;statement;foo_1[foo_2][foo_3] = fun_1(foo_4[foo_5 - 1][foo_6], foo_7[foo_8][foo_9 - fun_2(foo_11 - 1)] + fun_3(foo_13 - 1));41;
29;statement;j++;39;
30;statement;i++;36;
31;statement;return foo_1[foo_2][foo_3] == Integer.MAX_VALUE ? -1 : foo_4[foo_5][foo_6];44;
32;exit;;;
Edges
0;2;
1;3;
2;4;
3;5;
4;6;
5;7;12;
6;8;11;
7;9;
8;10;
9;11;
10;6;
11;13;
12;14;
13;15;
14;16;18;
15;17;
16;15;
17;19;
18;20;22;
19;21;
20;19;
21;23;
22;24;31;
23;25;
24;26;30;
25;27;28;
26;29;
27;29;
28;25;
29;23;
30;32;
31;
