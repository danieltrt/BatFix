Nodes
1;special;;;
2;statement;int n = fun_1();14;
3;statement;int[] C = new int[foo_1];15;
4;statement;boolean[][] P = new boolean[foo_1][foo_2];16;
5;statement;int i;17;
6;statement;int j;17;
7;statement;int k;17;
8;statement;int L;17;
9;statement;i = 0;18;
10;conditional;foo_1 < foo_2;19;
11;statement;foo_1[foo_2][foo_3] = true;21;
12;statement;i++;20;
13;statement;L = 2;23;
14;conditional;foo_1 <= foo_2;24;
15;statement;i = 0;26;
16;conditional;foo_1 < ((foo_2 - foo_3) + 1);27;
17;statement;j = (foo_1 + foo_2) - 1;29;
18;conditional;foo_1 == 2;30;
19;statement;foo_1[foo_2][foo_3] = fun_1(foo_5) == fun_2(foo_7);30;
20;statement;foo_1[foo_2][foo_3] = (fun_1(foo_5) == fun_2(foo_7)) && foo_8[foo_9 + 1][foo_10 - 1];31;
21;statement;i++;28;
22;statement;L++;25;
23;statement;i = 0;34;
24;conditional;foo_1 < foo_2;35;
25;conditional;foo_1[0][foo_2] == true;37;
26;statement;foo_1[foo_2] = 0;37;
27;statement;foo_1[foo_2] = Integer.MAX_VALUE;39;
28;statement;j = 0;40;
29;conditional;foo_1 < foo_2;41;
30;conditional;(foo_1[foo_2 + 1][foo_3] == true) && ((1 + foo_4[foo_5]) < foo_6[foo_7]);43;
31;statement;foo_1[foo_2] = 1 + foo_3[foo_4];43;
32;statement;j++;42;
33;statement;i++;36;
34;statement;return foo_1[foo_2 - 1];47;
35;exit;;;
Edges
0;2;
1;3;
2;4;
3;5;
4;6;
5;7;
6;8;
7;9;
8;10;
9;11;13;
10;12;
11;10;
12;14;
13;15;23;
14;16;
15;17;22;
16;18;
17;19;20;
18;21;
19;21;
20;16;
21;14;
22;24;
23;25;34;
24;26;27;
25;33;
26;28;
27;29;
28;30;33;
29;31;32;
30;32;
31;29;
32;24;
33;35;
34;
