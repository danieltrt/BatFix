Nodes
1;special;;;
2;conditional;foo_1 <= 2;14;
3;statement;return foo_1;14;
4;exit;;;
5;statement;int[][] L = new int[foo_1][foo_2];15;
6;statement;int llap = 2;16;
7;statement;int i = 0;17;
8;conditional;foo_1 < foo_2;18;
9;statement;foo_1[foo_2][foo_3 - 1] = 2;19;
10;statement;i++;19;
11;statement;int j = foo_1 - 2;20;
12;conditional;foo_1 >= 1;21;
13;statement;int i = foo_1 - 1;23;
14;statement;int k = foo_1 + 1;23;
15;conditional;(foo_1 >= 0) && (foo_2 <= (foo_3 - 1));24;
16;conditional;(foo_1[foo_2] + foo_3[foo_4]) < (2 * foo_5[foo_6]);25;
17;statement;k++;25;
18;conditional;(foo_1[foo_2] + foo_3[foo_4]) > (2 * foo_5[foo_6]);26;
19;statement;foo_1[foo_2][foo_3] = 2;27;
20;statement;i--;28;
21;statement;foo_1[foo_2][foo_3] = foo_4[foo_5][foo_6] + 1;31;
22;statement;llap = fun_1(foo_1, foo_2[foo_3][foo_4]);32;
23;statement;i--;33;
24;statement;k++;34;
25;conditional;foo_1 >= 0;37;
26;statement;foo_1[foo_2][foo_3] = 2;38;
27;statement;i--;39;
28;statement;j--;22;
29;statement;return foo_1;42;
Edges
0;2;
1;3;5;
2;4;
3;
4;6;
5;7;
6;8;
7;9;11;
8;10;
9;8;
10;12;
11;13;29;
12;14;
13;15;
14;25;16;
15;17;18;
16;15;
17;19;21;
18;20;
19;15;
20;22;
21;23;
22;24;
23;15;
24;28;26;
25;27;
26;25;
27;12;
28;4;
