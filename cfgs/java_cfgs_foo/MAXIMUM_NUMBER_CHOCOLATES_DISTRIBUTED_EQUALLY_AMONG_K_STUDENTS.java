Nodes
1;special;;;
2;statement;HashMap<Integer, Integer> um = new HashMap<Integer, Integer>();15;
3;statement;int[] sum = new int[foo_1];16;
4;statement;int curr_rem;17;
5;statement;int maxSum = 0;18;
6;statement;foo_1[0] = foo_2[0];19;
7;statement;int i = 1;20;
8;conditional;foo_1 < foo_2;21;
9;statement;foo_1[foo_2] = foo_3[foo_4 - 1] + foo_5[foo_6];23;
10;statement;i++;22;
11;statement;int i = 0;24;
12;conditional;foo_1 < foo_2;25;
13;statement;curr_rem = foo_1[foo_2] % foo_3;27;
14;conditional;foo_1 == 0;28;
15;conditional;foo_1 < foo_2[foo_3];29;
16;statement;maxSum = foo_1[foo_2];29;
17;conditional;!fun_1(foo_2);31;
18;statement;fun_1(foo_2, foo_3);32;
19;conditional;foo_1 < (foo_2[foo_3] - fun_1(foo_6)]);33;
20;statement;maxSum = foo_1[foo_2] - fun_1(foo_5)];34;
21;statement;i++;26;
22;statement;return foo_1 / foo_2;36;
23;exit;;;
Edges
0;2;
1;3;
2;4;
3;5;
4;6;
5;7;
6;8;
7;9;11;
8;10;
9;8;
10;12;
11;13;22;
12;14;
13;15;17;
14;16;21;
15;21;
16;18;19;
17;21;
18;20;21;
19;21;
20;12;
21;23;
22;
