1;statement;hash_map = {};statement
2;statement;curr_sum = 0;statement
3;statement;max_len = 0;statement
4;statement;ending_index = -1;statement
5;statement;range(0, n);conditional
6;statement;arr[i] == 0;conditional
7;statement;arr[i] = -1;statement
8;statement;arr[i] = 1;statement
9;statement;range(0, n);conditional
10;statement;curr_sum = curr_sum + arr[i];statement
11;statement;curr_sum == 0;conditional
12;statement;max_len = i + 1;statement
13;statement;ending_index = i;statement
14;statement;curr_sum + n in hash_map;conditional
15;statement;curr_sum + n in hash_map;conditional
16;statement;max_len = max(max_len, i - hash_map[curr_sum + n]);statement
17;statement;max_len = max(max_len, i - hash_map[curr_sum + n]);statement
18;statement;hash_map[curr_sum] = i;statement
19;statement;hash_map[curr_sum] = i;statement
20;statement;range(0, n);conditional
21;statement;arr[i] == -1;conditional
22;statement;arr[i] = 0;statement
23;statement;arr[i] = 1;statement
24;statement;print(ending_index - max_len + 1, end=' ');statement
25;statement;print('to', end=' ');statement
26;statement;print(ending_index);statement
27;statement;return max_len;statement
0;1;
1;2;
2;3;
3;4;
4;5;8;
5;6;7;
6;4;
7;4;
8;10;19;
9;10;
10;12;14;
11;12;
12;14;
13;
14;16;18;16;18;
15;
16;8;8;
17;
18;8;8;
19;20;26;
20;21;22;
21;19;
22;19;
23;24;
24;25;
25;26;
26;
